{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hardware","text":"Name Description Host Monitor X MX4-T30FR MX4-C61 <ul> <li>Product Specific Tags</li> <li>Documentation Howto</li> </ul>"},{"location":"#installation","title":"Installation","text":"<ul> <li>Installation</li> </ul>"},{"location":"#system","title":"System","text":"<ul> <li>Login</li> </ul>"},{"location":"#interfaces","title":"Interfaces","text":"<ul> <li>Accelerometer</li> <li>Digital I/O</li> <li>CAN</li> <li>LEDs</li> <li>Networking</li> </ul>"},{"location":"documentation-details/","title":"Editing details and tools","text":"","tags":["contribute"]},{"location":"documentation-details/#visual-studio-code","title":"Visual Studio Code","text":"<p>You can get help with markdown and preview here as well with plugins:</p>","tags":["contribute"]},{"location":"documentation-details/#markdown-all-in-one","title":"Markdown All in One","text":"","tags":["contribute"]},{"location":"documentation-details/#plantuml-vs-code-plugin","title":"PlantUML VS Code plugin","text":"<ol> <li>In jebbs.plantuml plugin setting set plantuml.server to http://anansi.setekgroup.local:8081</li> <li>Allow http on localhost if you get a warning about http*</li> </ol>","tags":["contribute"]},{"location":"documentation-details/#plantuml-diagrams","title":"PlantUML Diagrams","text":"<p>PlantUML can be used to generated diagrams</p> <p>Example</p> <pre><code>@startuml\n\"Documentation Writer\" as writer\n\"Read documentation \" as (read)\nwriter --&gt; (Write documentation)\nwriter --&gt; (Publish documentation)\n:User: --&gt; (read)\n@enduml\n</code></pre> <p>Rendered as</p> <pre>de16ae25-1ca9-415e-891c-f7420e15e96e</pre>","tags":["contribute"]},{"location":"documentation-details/#use-own-plantuml-server","title":"Use Own PlantUML Server","text":"<p><code>mkdocs build</code> needs access to server which we run on anansi.setekgroup.local:8081.</p> <p>You can edit the server name in <code>mkdocs.yml</code> and run your own elsewhere, e.g. localhost, but make sure you don't commit changes to this file.</p> <pre><code>docker run -d --name plantuml -p 8081:8080 plantuml/plantuml-server:tomcat\n</code></pre>","tags":["contribute"]},{"location":"documentation-howto/","title":"Writing Host Mobility Product Documentation","text":"<p>This document describes how to write and publish Host Mobility Product Documentation</p>","tags":["contribute"]},{"location":"documentation-howto/#get-the-source","title":"Get the source","text":"<p>Clone the documentation repo and create a working branch.</p> <pre><code>git clone git@github.com:hostmobility/documentation.git (push)\ngit checkout -b doc-work\n</code></pre>","tags":["contribute"]},{"location":"documentation-howto/#install-tools","title":"Install tools","text":"<p>Install MkDocs. Install it the first time after cloning. Use a virtual environment:</p> <pre><code>cd documentation\nvirtualenv venv\n. venv/bin/activate\npip install -r requirements.txt\n</code></pre> <p>Activate the virtual enviroment if you have done the previous step before.</p> <pre><code>cd documentation\n. venv/bin/activate\n</code></pre> <p>Use the built-in server</p> <pre><code>mkdocs serve\n</code></pre> <p>Preview your changes.</p>","tags":["contribute"]},{"location":"documentation-howto/#edit-the-documentation","title":"Edit the documentation","text":"<p>Edit the documentation using your chosen editor e.g. <code>vim docs/documentation-howto.md</code> or <code>code docs/</code></p> <p>Editing details and setup</p>","tags":["contribute"]},{"location":"documentation-howto/#deploy-the-documentation","title":"Deploy the documentation","text":"<pre><code>mkdocs gh-deploy\n</code></pre> <p>The documentation is published on hostmobility.github.io/documentation. It shall appear identically as on the local server.</p>","tags":["contribute"]},{"location":"example/","title":"Special machines","text":"<p>Documentation specific to c61, hmx and more.</p>","tags":["c61","hmx","mxv"]},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#overview-and-installation","title":"Overview and installation","text":""},{"location":"installation/#connectors","title":"Connectors","text":"<p>The MX-V has the following connectors accessible from the outside.</p> <p></p> <ol> <li>DVI connector for display</li> <li>two RJ45 Ethernet ports</li> <li>two USB type A connectors</li> <li>antenna connectors for GPS, WiFi and mobile</li> <li>34-pin I/O connector, including serial interfaces, see below</li> <li>34-pin I/O connector, including power and CAN, see below</li> <li>SDHC card slot</li> <li>SIM card slot</li> </ol> <p>&lt;&lt;&lt;</p>"},{"location":"installation/#io-connectors","title":"I/O connectors","text":""},{"location":"installation/#power","title":"Power","text":"<p>KL30 is positive power terminal (red) and KL31 is negative (black). The units start when KL15 (yellow ignition input) is connected to positive input (e.g. battery voltage).</p>"},{"location":"installation/#digital-out","title":"Digital out","text":"<p>The digital out channels can both source and sink a load. When sourcing, enabling the channel (output pin) connects it to battery voltage, while sinking connects the channel to ground.</p>"},{"location":"installation/#analogdigital-in","title":"Analog/Digital in","text":"<p>The (5+8) analog/digital in channels can measure voltages up to 32V. The difference lies in the hardware filtering where analog is filtered at 25Hz and digital at 250Hz.</p> <p>&lt;&lt;&lt;</p>"},{"location":"installation/#initial-setup","title":"Initial setup","text":"<ul> <li> <p>Connect either Ethernet connector to a router to get an IP address   through DHCP. Alternatively, connect a male to male USB-A cable between   the MX-V and your workstation for direct network access.</p> </li> <li> <p>You can also access the machine without a workstation by connecting   a computer monitor along with a keyboard.</p> </li> <li> <p>Connect the MX-V harness to a power supply in the range 9 to   32V. Then nominal voltage is 24V.</p> </li> </ul> <p>The MX-V boots automatically when power and ignition are applied. The boot time depends on the configuration. For the current development build with a lot of things enabled it takes about 15 seconds.</p>"},{"location":"installation/#operating-system","title":"Operating system","text":"<p>The Host Mobility MX-V platform runs a custom built GNU/Linux operating system. The current kernel version is 4.19. To load the kernel, the U-Boot bootloader is used. The operating system for the MX-V is installed on the on-board eMMC memory. It contains the U-boot, kernel image plus device tree as well as the root file system.</p> <p>The MX-V is delivered with the operating system installed and you can login through a secure shell (SSH).</p>"},{"location":"login/","title":"Login","text":""},{"location":"login/#login","title":"Login","text":"<p>The Host Mobility Hardwares have an SSH server enabled by default. For ethernet over USB0, the IP address is 192.168.250.1. For regular ethernet, the MX-V gets IP addresses from a DHCP server, e.g. a router.  In case there is no DHCP server available, the IP addresses default to <code>192.168.1.200</code> (eth0) and <code>192.168.2.200</code> (eth1).</p> <p>Log in by running <code>ssh root@IP-ADDRESS</code> and provide an empty password.  The latter can be changed as usual with the <code>passwd</code> command.</p>"},{"location":"plantuml/","title":"Using PlantUML to create UML diagrams from text","text":""},{"location":"plantuml/#example","title":"Example","text":"<pre>f5394210-1430-45ee-b02f-e7ba85dfc23c</pre>"},{"location":"plantuml/#setup-tools","title":"Setup tools","text":""},{"location":"plantuml/#run-local-plantuml-server","title":"Run local plantuml server","text":"<pre><code>docker run -d --name plantuml -p 8081:8080 plantuml/plantuml-server:tomcat\n</code></pre> <p>To test out, go to http://localhost:8081</p>"},{"location":"plantuml/#obsidian","title":"Obsidian","text":"<ul> <li>Install plugin plantuml</li> <li>Set server url to http://localhost:8081</li> </ul>"},{"location":"plantuml/#visual-studio-code","title":"Visual Studio Code","text":"<ul> <li>Install PlantUML VS Code plugin</li> <li>In jebbs.plantuml plugin setting set plantuml.server to http://localhost:8080</li> <li>Allow http on localhost</li> </ul>"},{"location":"plantuml/#mkdocs","title":"Mkdocs","text":"<pre><code>mkdir\nmkdocs new .\n</code></pre> <pre><code>site_name: My Docs\nplugins:\n    - plantuml:\n        puml_url: http://localhost:8080\n</code></pre> <pre><code>rm -r mkdocs-venv; virtualenv mkdocs-venv; . mkdocs-venv/bin/activate; pip install mkdocs==1.5.3 mkdocs-puml ; mkdocs serve\n</code></pre>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#can","title":"CAN","text":"<ul> <li>CAN (Controller Area Network)</li> </ul>"},{"location":"tags/#c61","title":"c61","text":"<ul> <li>Special</li> <li>Accelerometer</li> <li>Leds</li> <li>Leds</li> </ul>"},{"location":"tags/#contribute","title":"contribute","text":"<ul> <li>Editing details and tools</li> <li>Writing Host Mobility Product Documentation</li> </ul>"},{"location":"tags/#hmx","title":"hmx","text":"<ul> <li>Special</li> <li>Accelerometer</li> <li>Leds</li> <li>HMX Accelerometer</li> <li>Leds</li> </ul>"},{"location":"tags/#mx4","title":"mx4","text":"<ul> <li>Accelerometer</li> </ul>"},{"location":"tags/#mxv","title":"mxv","text":"<ul> <li>Special</li> <li>Accelerometer</li> </ul>"},{"location":"unified-manual/","title":"Host Mobility Unified Manual","text":""},{"location":"unified-manual/#system-software","title":"system software","text":""},{"location":"unified-manual/#kirkstone-v1","title":"kirkstone-v1","text":""},{"location":"unified-manual/#interface","title":"interface","text":""},{"location":"unified-manual/#leds","title":"LEDS","text":"<p>Generic Leds</p>"},{"location":"interfaces/accelerometer/","title":"Accelerometer","text":"","tags":["hmx","c61","mx4","mxv"]},{"location":"interfaces/accelerometer/#overview","title":"Overview","text":"<p>The accelerometer is presented as an industrial i/o device(iio). It can be found at <code>/sys/bus/iio/devices/iio\\:device0/in_accel_*</code></p>","tags":["hmx","c61","mx4","mxv"]},{"location":"interfaces/accelerometer/#platform-specific","title":"Platform specific","text":"<p>HMX</p>","tags":["hmx","c61","mx4","mxv"]},{"location":"interfaces/accelerometer/#example","title":"Example","text":"<pre><code>root@mxv-pt:~# cat /sys/bus/iio/devices/iio\\:device0/in_accel_*\n0.000000\n0.250000 0.500000 1.000000 2.000000\n4\n4 32 2\n50.000000\n0.009577\n0.038307 0.019154 0.009577\n0\n18\n0\n31\n0\n1037\n</code></pre>","tags":["hmx","c61","mx4","mxv"]},{"location":"interfaces/can/","title":"CAN (Controller Area Network)","text":"<p>The CAN interfaces on the Host Mobility Hardware accessed with the SocketCAN API. This means that a CAN interface is implemented as a type of network interface. They can utilize the Linux network stack and present a programming model similar to TCP/IP.</p>","tags":["CAN"]},{"location":"interfaces/can/#configuration","title":"Configuration","text":"<p>Being a network interface, a CAN device is typically configured with the <code>ip link</code> command in the iproute2 utilities.</p> <p>Supported option are shown by the <code>ip</code> <code>help</code> subcommand</p> <pre><code>    $ ip link set can0 type can help  \n    Usage: ip link set DEVICE type can\n            [ bitrate BITRATE [ sample-point SAMPLE-POINT] ] |\n            [ tq TQ prop-seg PROP_SEG phase-seg1 PHASE-SEG1\n              phase-seg2 PHASE-SEG2 [ sjw SJW ] ]\n\n              dphase-seg2 PHASE-SEG2 [ dsjw SJW ] ]\n\n            [ loopback { on | off } ]\n            [ listen-only { on | off } ]\n            [ triple-sampling { on | off } ]\n            [ one-shot { on | off } ]\n            [ berr-reporting { on | off } ]\n            [ fd { on | off } ]\n            [ fd-non-iso { on | off } ]\n            [ presume-ack { on | off } ]\n\n            [ restart-ms TIME-MS ]\n            [ restart ]\n\n            Where: BITRATE  := { 1..1000000 }\n                      SAMPLE-POINT  := { 0.000..0.999 }\n                      TQ            := { NUMBER }\n                      PROP-SEG      := { 1..8 }\n                      PHASE-SEG1    := { 1..8 }\n                      PHASE-SEG2    := { 1..8 }\n                      SJW           := { 1..4 }\n                      RESTART-MS    := { 0 | NUMBER }\n</code></pre>","tags":["CAN"]},{"location":"interfaces/can/#persistent-configuration","title":"Persistent configuration","text":"<p>CAN bus parameters can be set in systemd-networkd configuration files.</p> <p>Example:</p> <p>Edit or create <code>/lib/systemd/network/80-can.network</code></p> <pre><code>[Match]\nName=can*\n\n[CAN]\nBitRate=500K\nRestartSec=2000ms\nDataBitRate=4000000\nFDMode=True\n</code></pre>","tags":["CAN"]},{"location":"interfaces/can/#configure-bit-rate-of-one-specific-can-controller","title":"Configure bit rate of one specific CAN controller","text":"<pre><code>    $ ifconfig can0 down\n    $ ip link set can0 type can bitrate 250000\n    $ ifconfig can0 up\n</code></pre>","tags":["CAN"]},{"location":"interfaces/can/#query-a-device-for-its-current-configuration","title":"Query a device for its current configuration","text":"<pre><code>$ ip -d link show can0\n</code></pre>","tags":["CAN"]},{"location":"interfaces/can/#query-a-device-for-statistics","title":"Query a device for statistics","text":"<pre><code>$ ip -s link show can0\n</code></pre>","tags":["CAN"]},{"location":"interfaces/can/#can-utils","title":"CAN-utils","text":"<p>can-utils is a collection of CAN-tools that can be used to debug CAN networks and applications. They can be very useful as a source of inspiration if you are to write your own application that interacts with a CAN network.</p>","tags":["CAN"]},{"location":"interfaces/can/#dump-all-incoming-data","title":"Dump all incoming data","text":"<pre><code>$ candump -c -l any,0:0,#FFFFFFFF    (log error frames and also all data frames)\n</code></pre>","tags":["CAN"]},{"location":"interfaces/can/#send-a-single-can-frame","title":"Send a single CAN frame","text":"<pre><code>$ cansend can0 123#DEADBEEF\n</code></pre>","tags":["CAN"]},{"location":"interfaces/digital_io/","title":"Digital I/O","text":"<p>Digital I/O on the MX-V is handled through the Linux GPIO subsystem. This is a generic interface that organizes the GPIO pins by the hardware chips that input or output digital signals. The interface is generic and presents a large number of inputs and outputs in the system, mostly internal.</p> <p>To use the digital I/O on the MX-V, the new (since Linux v4.8) GPIO API is recommended. This  C API is implemented in libgpiod and comes with bindings also for C++ and Python.</p> <p>The library comes with a set of tools that can be used from a shell script to set and get values.</p> <ul> <li>gpiodetect - list all gpiochips present on the system, their names, labels and number of GPIO lines</li> <li>gpioinfo   - list all lines of specified gpiochips, their names, consumers, direction, active state and additional flags</li> <li>gpioget    - read values of specified GPIO lines </li> <li>gpioset    - set values of specified GPIO lines, potentially keep the lines exported and wait until timeout, user input or signal</li> <li>gpiofind   - find the gpiochip name and line offset given the line name </li> <li>gpiomon    - wait for events on GPIO lines, specify which events to watch, how many events to process before exiting or if the events should be reported to the console</li> </ul> <p>By using gpiodetect, a list of the GPIO chips in the system is shown.</p> <pre><code>root@mxv-pt:~# gpiodetect\ngpiochip0 [209c000.gpio] (32 lines)\ngpiochip1 [20a0000.gpio] (32 lines)\ngpiochip10 [digital_in] (13 lines)\ngpiochip2 [20a4000.gpio] (32 lines)\ngpiochip3 [20a8000.gpio] (32 lines)\ngpiochip4 [20ac000.gpio] (32 lines)\ngpiochip5 [20b0000.gpio] (32 lines)\ngpiochip6 [20b4000.gpio] (32 lines)\ngpiochip7 [modem_control] (4 lines)\ngpiochip8 [ncv7751] (32 lines)\ngpiochip9 [gpio_overlay] (25 lines)\n</code></pre>"},{"location":"interfaces/digital_io/#digital-out","title":"Digital out","text":""},{"location":"interfaces/digital_io/#overview","title":"Overview","text":"<p>The digital out channels (lines) have been collected in an <code>overlay</code> virtual chip that also restricts the user from changing the direction of the signal (which can usually be done for these generic I/Os).</p> <p>With the <code>gpioinfo</code> command, the available channels are listed.</p> <pre><code>root@mxv-pt:~# gpioinfo gpio_overlay\ngpiochip9 - 25 lines:\n        line   0: \"digital-out-source-0\" unused input active-high\n        line   1: \"digital-out-source-1\" unused input active-high\n        line   2: \"digital-out-source-2\" unused input active-high\n        line   3: \"digital-out-source-3\" unused input active-high\n        line   4: \"digital-out-source-4\" unused input active-high\n        line   5: \"digital-out-source-5\" unused input active-high\n        line   6: \"digital-out-source-6\" unused input active-high\n        line   7: \"digital-out-source-7\" unused input active-high\n        line   8: \"digital-out-oc-0\" unused input active-high\n        line   9: \"digital-out-oc-1\" unused input active-high\n        line  10: \"digital-out-oc-2\" unused input active-high\n        line  11: \"digital-out-oc-3\" unused input active-high\n        line  12: \"digital-out-oc-4\" unused input active-high\n        line  13: \"digital-out-oc-5\" unused input active-high\n        line  14: \"digital-out-oc-6\" unused input active-high\n        line  15: \"digital-out-oc-7\" unused input active-high\n        line  16: \"digital-out-sink-0\" unused input active-high\n        line  17: \"digital-out-sink-1\" unused input active-high\n        line  18: \"digital-out-sink-2\" unused input active-high\n        line  19: \"digital-out-sink-3\" unused input active-high\n        line  20: \"digital-out-sink-4\" unused input active-high\n        line  21: \"digital-out-sink-5\" unused input active-high\n        line  22: \"digital-out-sink-6\" unused input active-high\n        line  23: \"digital-out-sink-7\" unused input active-high\n        line  24: \"digital-out-enable\" unused input active-high\n</code></pre> <p>To find a specific signal, the <code>gpiofind</code> command can be used:</p> <pre><code>root@mxv-pt:~# gpiofind digital-out-enable\ngpiochip9 24\n</code></pre>"},{"location":"interfaces/digital_io/#enable-digital-out","title":"Enable digital out","text":"<p>To enable digital out, the <code>digital-out-enable</code> line needs to be set to high.</p> <p>We can use the <code>gpioset</code> command in combination with <code>gpiofind</code> in <code>bash</code>.</p> <pre><code>root@mxv-pt:~# gpioset $(gpiofind digital-out-enable)=1\n</code></pre>"},{"location":"interfaces/digital_io/#digital-out-high-and-low","title":"Digital out high and low","text":"<p>The digital out drivers can both source and sink current. The 8 source drivers are controlled with <code>digital-out-source-0..7</code> and the sink drivers with <code>digital-out-sink-0..7</code>. For a specific channel, the source and sink drivers cannot be used at the same time.</p> <pre><code>root@mxv-pt:~# gpioset $(gpiofind digital-out-source-0)=1\n</code></pre>"},{"location":"interfaces/digital_io/#over-current-sense","title":"Over-current sense","text":"<p>For each digital-out-source-n there is a digital-out-oc-n which can be read to detect short-circuits.</p> <pre><code>root@mxv-pt:~# gpioget $(gpiofind digital-out-oc-0)\n</code></pre>"},{"location":"interfaces/digital_io/#debugging","title":"Debugging","text":"<p><code>/sys/kernel/debug/gpio</code> can be read to get the kernel's view of the GPIO status.</p> <pre><code>root@mxv-pt:~# cat /sys/kernel/debug/gpio | grep -i dig\n gpio-48  (DIG_OUT_LO_1        |DIG-OUT-LO          ) out hi\n gpio-49  (DIG_OUT_EN          |DIG-OUT-EN          ) out hi\n gpio-64  (DIG_OUT_HI_1        |DIG-OUT-HI          ) out hi\n gpio-65  (DIG_OUT_HI_2        |DIG-OUT-HI          ) out lo\n gpio-66  (DIG_OUT_HI_3        |DIG-OUT-HI          ) out lo\n gpio-67  (DIG_OUT_HI_4        |DIG-OUT-HI          ) out lo\n gpio-68  (DIG_OUT_HI_5        |DIG-OUT-HI          ) out lo\n gpio-69  (DIG_OUT_HI_6        |DIG-OUT-HI          ) out lo\n gpio-70  (DIG_OUT_HI_7        |DIG-OUT-HI          ) out lo\n gpio-71  (DIG_OUT_HI_8        |DIG-OUT-HI          ) out lo\n gpio-72  (DIG_OUT_HI_OC_1     |DIG-OUT-HI-OC       ) in  hi\n gpio-73  (DIG_OUT_HI_OC_2     |DIG-OUT-HI-OC       ) in  lo\n gpio-74  (DIG_OUT_HI_OC_3     |DIG-OUT-HI-OC       ) in  lo\n gpio-75  (DIG_OUT_HI_OC_4     |DIG-OUT-HI-OC       ) in  lo\n gpio-76  (DIG_OUT_HI_OC_5     |DIG-OUT-HI-OC       ) in  hi\n gpio-77  (DIG_OUT_HI_OC_6     |DIG-OUT-HI-OC       ) in  lo\n gpio-78  (DIG_OUT_HI_OC_7     |DIG-OUT-HI-OC       ) in  hi\n gpio-79  (DIG_OUT_HI_OC_8     |DIG-OUT-HI-OC       ) in  lo\n gpio-166 (DIG_OUT_LO_2        |DIG-OUT-LO          ) out hi\n gpio-493 (digital-out-source-0|gpioset             ) in  hi\n gpio-494 (digital-out-source-1)\n gpio-495 (digital-out-source-2)\n gpio-496 (digital-out-source-3)\n gpio-497 (digital-out-source-4)\n gpio-498 (digital-out-source-5)\n gpio-499 (digital-out-source-6)\n gpio-500 (digital-out-source-7)\n gpio-501 (digital-out-oc-0    )\n gpio-502 (digital-out-oc-1    )\n gpio-503 (digital-out-oc-2    )\n gpio-504 (digital-out-oc-3    )\n gpio-505 (digital-out-oc-4    )\n gpio-506 (digital-out-oc-5    )\n gpio-507 (digital-out-oc-6    )\n gpio-508 (digital-out-oc-7    )\n gpio-509 (digital-out-sink-0  )\n gpio-510 (digital-out-sink-1  )\n gpio-511 (digital-out-enable  )\n</code></pre>"},{"location":"interfaces/leds/","title":"Leds","text":"<p>LEDs are usually* accessed through the Linux LED subsystem API. </p> <p>** *For MX-4, see mx4-leds.**</p> <ul> <li>hmx-leds</li> <li>c61-leds</li> <li>mx4-leds</li> </ul>","tags":["hmx","c61"]},{"location":"interfaces/networking/","title":"Networking","text":"<p>Networking is configured by the scripts in <code>/etc/network</code>.</p> <p>Configuration can also be done manually with the iproute2 utilities, e.g. the <code>ip</code> command.</p>"},{"location":"interfaces/networking/#ethernet","title":"Ethernet","text":"<p>The MX-V has two Ethernet ports, <code>eth0</code> with 1 gigabit signalling speed and <code>eth1</code> at 100 megabit. In the default configuration the Ethernet interfaces are configured to request their IP addresses using DHCP with a fallback to static addresses (192.168.1.200 for eth0 and 192.168.2.200 for eth1). See scripts in <code>/etc/network/if-up.d</code> for details.</p>"},{"location":"interfaces/networking/#usb","title":"USB","text":"<p>Ethernet over USB is supported via RNDIS. Connect a USB-A cable to the USB0 port on the MX-V and a free USB port on e.g. a PC, then power on the MX-V or reboot. This will give the PC the IP address 192.168.250.2 and the MX-V 192.168.250.1.</p>"},{"location":"interfaces/networking/#wifi","title":"WiFi","text":"<p>After accessing the MX-V, you can set up WiFi using e.g. wpa_supplicant. The interface will show up as mlan0.</p> <pre><code>wpa_passphrase ${WIFI_SSID} ${WIFI_PASSWORD}\nwpa_supplicant -B -imlan0 -c /etc/wpa_supplicant.conf -Dnl80211,wext\n</code></pre>"},{"location":"interfaces/c61/leds/","title":"Leds","text":"<p>LEDS on the C61 are accessed through spi</p>","tags":["c61"]},{"location":"interfaces/hmx/accelerometer/","title":"HMX Accelerometer","text":"<p>TODO</p> <p>Document how to get new data sampled continously using a special command in i2c-tools.</p>","tags":["hmx"]},{"location":"interfaces/hmx/leds/","title":"Leds","text":"","tags":["hmx"]},{"location":"interfaces/hmx/leds/#the-following-leds-are-available-on-hmx","title":"The following leds are available on HMX","text":"Name red:func :pwr_out_led_2 :pwr_out_buzzer green:gps red:gps red:wlan green:func mmc2:: green:wan blue:indicator :pwr_out_equipment yellow:power red:wan red:indicator green:wlan green:indicator :pwr_out_led_1 mmc1:: :pwr_out_active mmc0::","tags":["hmx"]},{"location":"interfaces/mx4/leds/","title":"Leds","text":"<p>On the MX-4 platform the LEDs are configured under <code>/opt/hm/pic_attributes</code> </p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#can","title":"CAN","text":"<ul> <li>CAN (Controller Area Network)</li> </ul>"},{"location":"tags/#c61","title":"c61","text":"<ul> <li>Special</li> <li>Accelerometer</li> <li>Leds</li> <li>Leds</li> </ul>"},{"location":"tags/#contribute","title":"contribute","text":"<ul> <li>Editing details and tools</li> <li>Writing Host Mobility Product Documentation</li> </ul>"},{"location":"tags/#hmx","title":"hmx","text":"<ul> <li>Special</li> <li>Accelerometer</li> <li>Leds</li> <li>HMX Accelerometer</li> <li>Leds</li> </ul>"},{"location":"tags/#mx4","title":"mx4","text":"<ul> <li>Accelerometer</li> </ul>"},{"location":"tags/#mxv","title":"mxv","text":"<ul> <li>Special</li> <li>Accelerometer</li> </ul>"}]}