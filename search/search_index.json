{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Host Mobility's Documentation","text":""},{"location":"#platforms","title":"Platforms","text":"<p>The pages below contain feature overviews of our hardware platforms and product variants. This is a good place to start reading.</p> <ul> <li>Host Monitor X</li> <li>MX-4 C61</li> <li>MX-4 T30 FR</li> <li>MX-4 CT GL</li> <li>MX-V</li> </ul> <p>For more detailed information, you can use the links below to see which tags are associated with each platform.</p> <ul> <li>Host Monitor X</li> <li>MX-4 C61</li> <li>MX-4 T30</li> <li>MX-4 T30 FR</li> <li>MX-4 CT</li> <li>MX-4 CT GL</li> <li>MX-V</li> </ul>"},{"location":"#power-management-and-leds","title":"Power management and LEDs","text":"<p>The pages below include information on how to get the unit to start up, sleep and set wake-up signals.</p> <ul> <li>Power Management<ul> <li>Wake Up Cause</li> <li>Reset Cause</li> </ul> </li> <li>LED</li> </ul>"},{"location":"#system","title":"System","text":"<p>Here you can find more information about how to log in, build system images and apply updates.</p> <ul> <li>Login</li> <li>System Update</li> <li>Development and build system</li> </ul>"},{"location":"#interfaces","title":"Interfaces","text":"<p>This is a list of interfaces supported by one or more platforms.</p> <ul> <li>ADC</li> <li>Accelerometer</li> <li>Audio</li> <li>Digital I/O</li> <li>Flexray</li> <li>J1708</li> <li>LIN</li> <li>Networking<ul> <li>CAN</li> <li>Ethernet</li> <li>USB</li> <li>WiFi</li> <li>Modem</li> </ul> </li> <li>Real Time Clock</li> <li>Serial communication<ul> <li>RS-232</li> <li>RS-485</li> </ul> </li> <li>Tachometer</li> <li>Start signals</li> </ul>"},{"location":"#support","title":"Support","text":"<p>Contact support</p>"},{"location":"documentation-details/","title":"Editing details and tools","text":"","tags":["Contribute"]},{"location":"documentation-details/#visual-studio-code","title":"Visual Studio Code","text":"<p>You can get help with markdown and preview here as well with plugins:</p>","tags":["Contribute"]},{"location":"documentation-details/#markdown-all-in-one","title":"Markdown All in One","text":"","tags":["Contribute"]},{"location":"documentation-details/#plantuml-vs-code-plugin","title":"PlantUML VS Code plugin","text":"<ol> <li>In jebbs.plantuml plugin setting set plantuml.server to http://anansi.setekgroup.local:8081</li> <li>Allow http on localhost if you get a warning about http*</li> </ol>","tags":["Contribute"]},{"location":"documentation-details/#plantuml-diagrams","title":"PlantUML Diagrams","text":"<p>PlantUML can be used to generated diagrams</p> <p>Example <pre><code>@startuml\n\"Documentation Writer\" as writer\n\"Read documentation \" as (read)\nwriter --&gt; (Write documentation)\nwriter --&gt; (Publish documentation)\n:User: --&gt; (read)\n@enduml\n</code></pre></p> <p>Rendered as</p> <pre>bd551638-4b96-4654-844a-f5916fcafcc9</pre>","tags":["Contribute"]},{"location":"documentation-details/#use-own-plantuml-server","title":"Use Own PlantUML Server","text":"<p><code>mkdocs build</code> needs access to server which we run on anansi.setekgroup.local:8081.</p> <p>You can edit the server name in <code>mkdocs.yml</code> and run your own elsewhere, e.g. localhost, but make sure you don't commit changes to this file. <pre><code>docker run -d --name plantuml -p 8081:8080 plantuml/plantuml-server:tomcat\n</code></pre></p>","tags":["Contribute"]},{"location":"documentation-howto/","title":"Writing Host Mobility product documentation","text":"<p>This document describes how to write and publish Host Mobility product documentation.</p>","tags":["Contribute"]},{"location":"documentation-howto/#get-the-source","title":"Get the source","text":"<p>Clone the documentation repo and create a working branch.</p> <pre><code>git clone git@github.com:hostmobility/documentation.git (push)\ngit checkout -b doc-work\n</code></pre>","tags":["Contribute"]},{"location":"documentation-howto/#install-tools","title":"Install tools","text":"<p>Install MkDocs. Install it the first time after cloning. Use a virtual environment (pip install virtualenv):</p> <pre><code>cd documentation\nvirtualenv venv\n. venv/bin/activate\npip install -r requirements.txt\n</code></pre> <p>Activate the virtual enviroment if you have done the previous step before.</p> <pre><code>cd documentation\n. venv/bin/activate\n</code></pre> <p>Use the built-in server <pre><code>mkdocs serve\n</code></pre> If you have trouble with <code>mkdocs serve</code>, edit <code>/etc/hosts</code> <pre><code>192.168.128.54   anansi.setekgroup.local\n</code></pre></p> <p>Preview your changes.</p>","tags":["Contribute"]},{"location":"documentation-howto/#edit-the-documentation","title":"Edit the documentation","text":"<p>Edit the documentation using your preferred editor, e.g. <code>vim docs/documentation-howto.md</code> or <code>code docs/</code>.</p> <p>Editing details and setup</p>","tags":["Contribute"]},{"location":"documentation-howto/#style-guide","title":"Style guide","text":"<ul> <li>The MX-4 family contains the platforms T30, T30 FR, CT, CT GL, C61. Use this spelling and, to keep things short, skip the MX-4 prefix if possible.</li> <li>The other platforms are called MX-V and Host Monitor X (HMX). It is preferred to use the abbreviation HMX in this documentation.</li> <li>Titles and headings: Capitalize the first letter only, unless it contains a name such as Host Mobility.</li> <li>Use consistent spelling of standards such as RS-485. If in doubt, consult existing pages or Wikipedia.</li> <li>Do not line break paragraphs.</li> <li>Do not commit trailing whitespace.</li> </ul>","tags":["Contribute"]},{"location":"documentation-howto/#tags","title":"Tags","text":"<p>We use tags to group pages that are common to several platforms.</p> <ul> <li>Include all the tags that are valid for an article. For example, in the article \"WiFi\", add all the platforms that contain a WiFi chip (T30, T30 FR, etc. but not C61 and HMX).</li> <li>If an article is platform-specific, append the platform in parathesis, e.g. \"Modem (HMX)\".</li> </ul>","tags":["Contribute"]},{"location":"documentation-howto/#deploy-the-documentation","title":"Deploy the documentation","text":"<pre><code>mkdocs gh-deploy\n</code></pre> <p>The documentation is published on hostmobility.github.io/documentation. It shall appear identically as on the local server.</p>","tags":["Contribute"]},{"location":"login/","title":"Login","text":""},{"location":"login/#login","title":"Login","text":"<p>The Host Mobility platforms have an SSH server enabled by default.  For ethernet over USB0,the IP address is 192.168.250.1. For regular ethernet, the it gets IP addresses from a DHCP server, e.g. a router.  In case there is no DHCP server available, the IP addresses default to <code>192.168.1.200</code> (eth0) and <code>192.168.2.200</code> (eth1).</p> <p>Log in by running <code>ssh root@IP-ADDRESS</code> and provide an empty password.  The latter can be changed as usual with the <code>passwd</code> command.</p> <p>It is also possible for developer to use a ttl to usb cable to connect to console using the internal uart debug connector.</p>"},{"location":"support/","title":"Customer support","text":"<p>Technical support is available at our Zammad ticket system. If you are a paying customer, please send an email to support@hostmobility.com to receive an account.</p> <p>For orders and questions about our offerings, please contact management or sales for assistance.</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#adc","title":"ADC","text":"<ul> <li>Analog inputs (ADC)</li> <li>IOs (C61)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>Analog Inputs (ADC) (MX-V)</li> </ul>"},{"location":"tags/#accelerometer","title":"Accelerometer","text":"<ul> <li>Accelerometer</li> <li>HMX Accelerometer</li> <li>Accelerometer (MX-4)</li> </ul>"},{"location":"tags/#audio","title":"Audio","text":"<ul> <li>Audio</li> </ul>"},{"location":"tags/#c61","title":"C61","text":"<ul> <li>Accelerometer</li> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>CAN</li> <li>Digital I/O</li> <li>Ethernet</li> <li>J1708</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Serial communication</li> <li>Start signals</li> <li>USB</li> <li>CAN (C61)</li> <li>Ethernet (C61)</li> <li>IOs (C61)</li> <li>Leds</li> <li>C61 Modem</li> <li>Serial communication (C61)</li> <li>USB (C61)</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>LEDs (MX-4)</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script</li> <li>MX-4 Start signals</li> <li>Platform MX-4 C61</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>System update</li> <li>System update (C61)</li> <li>Software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#can","title":"CAN","text":"<ul> <li>CAN</li> <li>Networking</li> <li>CAN (C61)</li> <li>CAN (HMX)</li> <li>CAN (MX-4)</li> <li>CAN (MX-V)</li> </ul>"},{"location":"tags/#ct","title":"CT","text":"<ul> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>Digital I/O</li> <li>J1708</li> <li>LEDs</li> <li>Serial communication</li> <li>Start signals</li> <li>Tachometer</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>CAN (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>LEDs (MX-4)</li> <li>MX4 Modem</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>Serial communication (CT)</li> <li>MX-4 Start signals</li> <li>WiFi (MX-4)</li> <li>Platform CT GL</li> <li>Software development</li> <li>Legacy build system</li> <li>System update</li> <li>System update (CT)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#ct-gl","title":"CT GL","text":"<ul> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>Digital I/O</li> <li>J1708</li> <li>LEDs</li> <li>Serial communication</li> <li>Start signals</li> <li>Tachometer</li> <li>CT GL Modem</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>CAN (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>LEDs (MX-4)</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>Serial communication (CT)</li> <li>MX-4 Start signals</li> <li>WiFi (MX-4)</li> <li>Platform CT GL</li> <li>Software development</li> <li>Legacy build system</li> <li>System update</li> <li>System update (CT)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#contribute","title":"Contribute","text":"<ul> <li>Editing details and tools</li> <li>Writing Host Mobility product documentation</li> </ul>"},{"location":"tags/#development","title":"Development","text":"<ul> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>Software development kits (SDKs)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#digital-io","title":"Digital I/O","text":"<ul> <li>Digital I/O</li> <li>IOs (C61)</li> <li>Digital I/O (HMX)</li> <li>Digital I/O (MX-4)</li> <li>Digital I/O (MX-V)</li> </ul>"},{"location":"tags/#ethernet","title":"Ethernet","text":"<ul> <li>Ethernet</li> <li>Networking</li> <li>Ethernet (C61)</li> <li>Ethernet (HMX)</li> <li>Ethernet (MX-4)</li> <li>Ethernet (MX-V)</li> </ul>"},{"location":"tags/#flexray","title":"Flexray","text":"<ul> <li>Flexray (MX-4)</li> </ul>"},{"location":"tags/#hmx","title":"HMX","text":"<ul> <li>Accelerometer</li> <li>CAN</li> <li>Digital I/O</li> <li>Ethernet</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Start signals</li> <li>USB</li> <li>HMX Accelerometer</li> <li>CAN (HMX)</li> <li>Digital I/O (HMX)</li> <li>Ethernet (HMX)</li> <li>LEDs (HMX)</li> <li>HMX Modem</li> <li>Host Monitor X start signals</li> <li>USB (HMX)</li> <li>Modem</li> <li>Platform Host Monitor X</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Power management</li> <li>System update</li> <li>Power management (HMX)</li> <li>System update (HMX)</li> <li>Software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#j1708","title":"J1708","text":"<ul> <li>J1708</li> </ul>"},{"location":"tags/#led","title":"LED","text":"<ul> <li>LEDs</li> <li>LEDs (HMX)</li> <li>LEDs (MX-4)</li> <li>LEDs (MX-V)</li> </ul>"},{"location":"tags/#lin","title":"LIN","text":"<ul> <li>LIN (MX-4)</li> </ul>"},{"location":"tags/#legacy-sdk","title":"Legacy SDK","text":"<ul> <li>Legacy software development kits (SDKs)</li> </ul>"},{"location":"tags/#mx-4","title":"MX-4","text":"<ul> <li>Accelerometer</li> <li>CAN</li> <li>Digital I/O</li> <li>Ethernet</li> <li>LEDs</li> <li>Start signals</li> <li>USB</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>Ethernet (MX-4)</li> <li>LEDs (MX-4)</li> <li>LIN (MX-4)</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script</li> <li>MX-4 Start signals</li> <li>USB (MX-4)</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>Power management</li> <li>System update</li> <li>Power management (MX-4)</li> <li>Reset cause (MX-4)</li> <li>Wake up cause</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#mx-v","title":"MX-V","text":"<ul> <li>Accelerometer</li> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>CAN</li> <li>Digital I/O</li> <li>Ethernet</li> <li>J1708</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Serial communication</li> <li>Start signals</li> <li>Tachometer</li> <li>USB</li> <li>WiFi</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-V)</li> <li>CAN (MX-V)</li> <li>Digital I/O (MX-V)</li> <li>Ethernet (MX-V)</li> <li>LEDs (MX-V)</li> <li>MX-V Modem</li> <li>Serial communication (MX-V)</li> <li>Start signals</li> <li>USB (MX-V)</li> <li>WiFi (MX-V)</li> <li>Platform MX-V</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Power management</li> <li>System update</li> <li>Power management (MX-V)</li> <li>System update (MX-V)</li> <li>Software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#modem","title":"Modem","text":"<ul> <li>C61 Modem</li> <li>CT GL Modem</li> <li>HMX Modem</li> <li>Modem</li> <li>MX4 Modem</li> <li>MX-V Modem</li> </ul>"},{"location":"tags/#networking","title":"Networking","text":"<ul> <li>Networking</li> </ul>"},{"location":"tags/#power-management","title":"Power management","text":"<ul> <li>Power management</li> <li>Power management (HMX)</li> <li>Power management (MX-4)</li> <li>Wake up cause</li> <li>Power management (MX-V)</li> </ul>"},{"location":"tags/#rs-232","title":"RS-232","text":"<ul> <li>Serial communication</li> <li>Serial communication (C61)</li> <li>Serial communication (CT)</li> <li>Serial communication (MX-V)</li> </ul>"},{"location":"tags/#rs-485","title":"RS-485","text":"<ul> <li>Serial communication</li> <li>Serial communication (C61)</li> <li>Serial communication (CT)</li> <li>Serial communication (MX-V)</li> </ul>"},{"location":"tags/#real-time-clock","title":"Real Time Clock","text":"<ul> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> </ul>"},{"location":"tags/#reset-cause","title":"Reset cause","text":"<ul> <li>Reset cause (MX-4)</li> </ul>"},{"location":"tags/#sdk","title":"SDK","text":"<ul> <li>Software development kits (SDKs)</li> </ul>"},{"location":"tags/#start-signals","title":"Start signals","text":"<ul> <li>Start signals</li> <li>Host Monitor X start signals</li> <li>MX-4 Start signals</li> <li>Start signals</li> </ul>"},{"location":"tags/#system-update","title":"System update","text":"<ul> <li>System update</li> <li>System update (HMX)</li> <li>System update (C61)</li> <li>System update (CT)</li> <li>System update (T30)</li> <li>System update (MX-V)</li> </ul>"},{"location":"tags/#t20","title":"T20","text":"<ul> <li>Analog Inputs (ADC) (MX-4)</li> <li>LIN (MX-4)</li> </ul>"},{"location":"tags/#t30","title":"T30","text":"<ul> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>Digital I/O</li> <li>Ethernet</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Start signals</li> <li>Tachometer</li> <li>WiFi</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>CAN (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>LEDs (MX-4)</li> <li>LIN (MX-4)</li> <li>MX4 Modem</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script</li> <li>MX-4 Start signals</li> <li>WiFi (MX-4)</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>System update</li> <li>System update (T30)</li> <li>Software development kits (SDKs)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#t30-fr","title":"T30 FR","text":"<ul> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>Digital I/O</li> <li>Ethernet</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Start signals</li> <li>Tachometer</li> <li>WiFi</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>CAN (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>Flexray (MX-4)</li> <li>LEDs (MX-4)</li> <li>LIN (MX-4)</li> <li>MX4 Modem</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script</li> <li>MX-4 Start signals</li> <li>WiFi (MX-4)</li> <li>Platform MX-4 T30 FR</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>System update</li> <li>Software development kits (SDKs)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#tachometer","title":"Tachometer","text":"<ul> <li>Tachometer</li> </ul>"},{"location":"tags/#usb","title":"USB","text":"<ul> <li>Networking</li> <li>USB</li> <li>USB (C61)</li> <li>USB (HMX)</li> <li>USB (MX-4)</li> <li>USB (MX-V)</li> </ul>"},{"location":"tags/#v61","title":"V61","text":"<ul> <li>LIN (MX-4)</li> </ul>"},{"location":"tags/#wake-up-cause","title":"Wake up cause","text":"<ul> <li>Wake up cause</li> </ul>"},{"location":"tags/#wifi","title":"WiFi","text":"<ul> <li>Networking</li> <li>WiFi</li> <li>WiFi (MX-4)</li> <li>WiFi (MX-V)</li> </ul>"},{"location":"unified-manual/","title":"Host Mobility Unified Manual","text":""},{"location":"unified-manual/#system-software","title":"system software","text":""},{"location":"unified-manual/#kirkstone-v1","title":"kirkstone-v1","text":""},{"location":"unified-manual/#interface","title":"interface","text":""},{"location":"unified-manual/#leds","title":"LEDS","text":"<p>Generic Leds</p>"},{"location":"interfaces/accelerometer/","title":"Accelerometer","text":"","tags":["Accelerometer","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/accelerometer/#overview","title":"Overview","text":"<p>The accelerometer is presented as an industrial i/o device(iio). It can be found at <code>/sys/bus/iio/devices/iio\\:device0/in_accel_*</code></p>","tags":["Accelerometer","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/accelerometer/#platform-specific","title":"Platform specific","text":"<ul> <li>HMX</li> <li>MX-4 T30/T30fr</li> <li>C61</li> <li>MX-4</li> <li>MX-V</li> <li>CT</li> </ul>","tags":["Accelerometer","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/accelerometer/#example","title":"Example","text":"<pre><code>root@mxv-pt:~# cat /sys/bus/iio/devices/iio\\:device0/in_accel_*\n0.000000\n0.250000 0.500000 1.000000 2.000000\n4\n4 32 2\n50.000000\n0.009577\n0.038307 0.019154 0.009577\n0\n18\n0\n31\n0\n1037\ncat /sys/bus/iio/devices/iio:device0/in_accel_x_raw\ncat /sys/bus/iio/devices/iio:device0/in_accel_y_raw\ncat /sys/bus/iio/devices/iio:device0/in_accel_z_raw\n</code></pre>","tags":["Accelerometer","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/analog/","title":"Analog inputs (ADC)","text":"","tags":["ADC","C61","MX-V","CT","CT GL","T30","T30 FR"]},{"location":"interfaces/analog/#overview","title":"Overview","text":"<p>Many of our products have analog inputs. On the MX-4 platform they are accessible under <code>/opt/hm/pic_attributes/</code> (see below). Otherwise we use the standard Linux Industrial I/O Subsystem. You can then access the ADC from <code>sysfs</code>, typically <code>/sys/bus/iio/devices/iio\\:device*/</code>.</p>","tags":["ADC","C61","MX-V","CT","CT GL","T30","T30 FR"]},{"location":"interfaces/analog/#platform-specific","title":"Platform specific","text":"<ul> <li>MX-4<ul> <li>MX-4 T30/T30fr</li> <li>C61 IO</li> <li>CT</li> </ul> </li> <li>MX-V</li> </ul>","tags":["ADC","C61","MX-V","CT","CT GL","T30","T30 FR"]},{"location":"interfaces/analog/#example","title":"Example","text":"<p>IIO <pre><code>cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_8_raw\n</code></pre> MX-4 <pre><code>cat /opt/hm/pic_attributes/analog_1\n</code></pre></p>","tags":["ADC","C61","MX-V","CT","CT GL","T30","T30 FR"]},{"location":"interfaces/audio/","title":"Audio","text":"","tags":["Audio","T30","T30 FR","CT","CT GL","C61","MX-V"]},{"location":"interfaces/audio/#overview","title":"Overview","text":"<p>Many of our platforms feature audio output and microphone input at the operating system level and, in some cases, via the on-board modem. To see if modem audio is supported, please consult the platform-specific modem pages.</p> <p>On the Linux side we use standard ALSA.</p>","tags":["Audio","T30","T30 FR","CT","CT GL","C61","MX-V"]},{"location":"interfaces/audio/#t30-fr-and-t30","title":"T30 FR and T30","text":"<p>This product comes with one 3.5 stereo phone jack with analog stereo audio out and one 3.5 stereo phone jack with mono in (microphone) interface. See technical specification for more information regarding the connectors.</p>","tags":["Audio","T30","T30 FR","CT","CT GL","C61","MX-V"]},{"location":"interfaces/audio/#ct-and-ct-gl","title":"CT and CT GL","text":"<p>This product comes with a JAE IL-AG5-14P-D3L2 with analog stereo audio out and with mono in (microphone) interface. See technical specification for more information regarding the connectors.</p>","tags":["Audio","T30","T30 FR","CT","CT GL","C61","MX-V"]},{"location":"interfaces/audio/#mx-v","title":"MX-V","text":"<p>This product comes with a 2x34PIN MINI50 2-BAY 90DEG PIN HEADER with analog stereo audio out and a mono in (microphone) interface. It's also possible to use HDMI audio from the DVI connector. See the technical specification for more information regarding the connectors.</p>","tags":["Audio","T30","T30 FR","CT","CT GL","C61","MX-V"]},{"location":"interfaces/audio/#c61","title":"C61","text":"<p>This product comes with one 2.5 stereo phone jack with analog stereo audio out and with mono in (microphone) interface. See the technical specification for more information regarding the connectors.</p> <p>Note: This feature is currently untested for modern BSPs.</p>","tags":["Audio","T30","T30 FR","CT","CT GL","C61","MX-V"]},{"location":"interfaces/audio/#examples","title":"Examples","text":"<ul> <li> <p>Example on how to create a loop back (activate mic and hear yourself) <pre><code>arecord -d 5 -D plughw:1 -f dat output.wav &amp; sleep 1 &amp;&amp; aplay -D plughw:1 output.wav &amp; echo recording and audio output\n</code></pre></p> </li> <li> <p>Test audio with a sinus tone at 997Hz. <pre><code>speaker-test -D plughw:1 -t sine -r 997 -c 1 -l 2\n\nspeaker-test -D plughw:1,0 -t sine -r 997 -c 1 -l 2\n</code></pre></p> </li> <li> <p>list devices with <code>aplay -L</code> or <code>aplay --list-devices</code> (example from MX-V) <pre><code>card 0: imxhdmisoc [imx-hdmi-soc], device 0: i.MX HDMI Audio Tx i2s-hifi-0 []\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: Audiotlv320aic3 [Audio-tlv320aic310x], device 0: 2028000.ssi-tlv320aic3x-hifi tlv320aic3x-hifi-0 []\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n</code></pre></p> </li> </ul>","tags":["Audio","T30","T30 FR","CT","CT GL","C61","MX-V"]},{"location":"interfaces/audio/#for-linux-31-system","title":"For Linux 3.1 system","text":"<p>Note: for BSP release 1.6/1.5 and older</p> <p>To direct line-in to line-out:</p> <pre><code>amixer -c 2 set 'Left HP Mixer Line Bypass' on\namixer -c 2 set 'Right HP Mixer Line Bypass' on\n</code></pre> <p>Playback HDMI:</p> <pre><code>aplay -D 'default:CARD=tegra' bach.au\n</code></pre> <p>Playback:</p> <pre><code>amixer -c 2 set 'Headphone' 8 on\namixer -c 2 set 'Left HP Mixer PCM' on\namixer -c 2 set 'Right HP Mixer PCM' on\naplay -D 'default:CARD=T20' output2.wav\n</code></pre> <p>Record from line-in:</p> <pre><code>amixer -c 2 set 'Left Capture Select' 'Line'\namixer -c 2 set 'Right Capture Select' 'Line'\namixer -c 2 set 'Capture ADC' on\narecord -D 'default:CARD=T20' -v -f cd output2.wav\n</code></pre> <p>Record from mic:</p> <pre><code>amixer -c 2 set 'Left Capture Select' 'Mic'\namixer -c 2 set 'Right Capture Select' 'Mic'\namixer -c 2 set 'Capture ADC' on\namixer -c 2 set 'Left HP Mixer Mic Sidetone' on\namixer -c 2 set 'Right HP Mixer Mic Sidetone' on\narecord -D 'default:CARD=T20' -v -f cd output2.wav\n</code></pre> <p>Please note that the two numbers at the end specify which ALSA card and device to use for audio (e.g. alsasink device=hw:1,0 for SPDIF through HDMI and alsasink device=hw:2,0 for WM9715L AC97 through headphone).</p> <pre><code>aplay -L\nnull\n    Discard all samples (playback) or generate zero samples (capture)\ndefault:CARD=tegra // HDMI\n    tegra,\n    Default Audio Device\ndefault:CARD=T20 // AC97\n    Toradex Colibri T20,\n    Default Audio Device\n</code></pre>","tags":["Audio","T30","T30 FR","CT","CT GL","C61","MX-V"]},{"location":"interfaces/can/","title":"CAN","text":"","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#overview","title":"Overview","text":"<p>CAN (Controller Area Network) is a bus type network where all nodes on a single bus communicates directly with each other. </p> <p>Host Mobility Hardware all have a number of CAN channels.</p> <p>In Linux, CAN channels are implemented as network interfaces. They can utilize the Linux network stack and present a programming model similar to TCP/IP. Applications use the SocketCAN API, either directly or though a higher level library.</p>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#platform-specific","title":"Platform specific","text":"<ul> <li>HMX</li> <li>MX-4</li> <li>MX-V</li> <li>C61</li> </ul>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#configuration-though-systemd-networkd","title":"Configuration though Systemd-Networkd","text":"<p>Note: Not for BSP release 1.6/1.5 and older</p> <p>Bus parameters can be set in systemd-networkd configuration files. </p> <p>Example:</p> <p>Edit or create <code>/lib/systemd/network/80-can.network</code> <pre><code>[Match]\nName=can*\n\n[CAN]\nBitRate=500K\nRestartSec=2000ms\nDataBitRate=4000000\nFDMode=True\n</code></pre></p>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#manual-configuration","title":"Manual configuration","text":"<p>Use <code>ip link</code> to configure the bus parameters manually. This is a standard utility(iproute2)</p> <p>Supported options are shown by the <code>ip</code> <code>help</code> subcommand</p> <pre><code>    $ ip link set can0 type can help  \n    Usage: ip link set DEVICE type can\n            [ bitrate BITRATE [ sample-point SAMPLE-POINT] ] |\n            [ tq TQ prop-seg PROP_SEG phase-seg1 PHASE-SEG1\n              phase-seg2 PHASE-SEG2 [ sjw SJW ] ]\n\n              dphase-seg2 PHASE-SEG2 [ dsjw SJW ] ]\n\n            [ loopback { on | off } ]\n            [ listen-only { on | off } ]\n            [ triple-sampling { on | off } ]\n            [ one-shot { on | off } ]\n            [ berr-reporting { on | off } ]\n            [ fd { on | off } ]\n            [ fd-non-iso { on | off } ]\n            [ presume-ack { on | off } ]\n\n            [ restart-ms TIME-MS ]\n            [ restart ]\n\n            Where: BITRATE  := { 1..1000000 }\n                      SAMPLE-POINT  := { 0.000..0.999 }\n                      TQ            := { NUMBER }\n                      PROP-SEG      := { 1..8 }\n                      PHASE-SEG1    := { 1..8 }\n                      PHASE-SEG2    := { 1..8 }\n                      SJW           := { 1..4 }\n                      RESTART-MS    := { 0 | NUMBER }\n</code></pre> <p>Example : Set Standard (2.0) CAN with a bitrate of 500 kbit/s and listen-only mode. <pre><code>ip link set can0 down\nip link set can0 up type can bitrate 500000 listen-only on\n</code></pre></p> <p>Example : Set up CAN-FD with a bitrate of 500/4000 kbit/s in normal mode. <pre><code>ip link set can0 down\nip link set can0 up type can bitrate 500000 dbitrate 4000000 fd on\n</code></pre></p>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#query-a-device-for-its-current-configuration","title":"Query a device for its current configuration","text":"<pre><code>ip -d link show can0\n</code></pre> <pre><code>8: can0: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 72 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10\n    link/can  promiscuity 0 minmtu 0 maxmtu 0 \n    can &lt;FD&gt; state ERROR-PASSIVE (berr-counter tx 0 rx 127) restart-ms 0 \n      bitrate 500000 sample-point 0.875\n      tq 25 prop-seg 34 phase-seg1 35 phase-seg2 10 sjw 1 brp 1\n      m_can: tseg1 2..256 tseg2 2..128 sjw 1..128 brp 1..512 brp_inc 1\n      dbitrate 4000000 dsample-point 0.700\n      dtq 25 dprop-seg 3 dphase-seg1 3 dphase-seg2 3 dsjw 1 dbrp 1\n      m_can: dtseg1 1..32 dtseg2 1..16 dsjw 1..16 dbrp 1..32 dbrp_inc 1\n      clock 40000000 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 parentbus spi parentdev spi3.0 \n</code></pre>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#query-a-device-for-statistics","title":"Query a device for statistics","text":"<pre><code>ip -s link show can0\n</code></pre> <pre><code>8: can0: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 72 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10\n    link/can \n    RX:  bytes packets errors dropped  missed   mcast           \n             0       0      0       0       0       0 \n    TX:  bytes packets errors dropped carrier collsns           \n             0       0      0       0       0       0 \n</code></pre>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#can-utils","title":"CAN-utils","text":"<p>can-utils is a collection of CAN-tools that can be used to debug CAN networks and applications. They can be very useful as a source of inspiration if you are to write your own application that interacts with a CAN network.</p>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#dump-all-incoming-data","title":"Dump all incoming data","text":"<pre><code>$ candump -c -l any,0:0,#FFFFFFFF    (log error frames and also all data frames)\n</code></pre>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/can/#send-a-single-can-frame","title":"Send a single CAN frame","text":"<pre><code>$ cansend can0 123#DEADBEEF\n</code></pre>","tags":["CAN","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/digital_io/","title":"Digital I/O","text":"","tags":["Digital I/O","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/digital_io/#overview","title":"Overview","text":"<p>Digital I/O is handled by the Linux GPIO subsystem. This is a generic interface that organizes the GPIO pins by the hardware chips that input or output digital signals. The interface is generic and presents a large number of inputs and outputs in the system, mostly internal.</p>","tags":["Digital I/O","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/digital_io/#platform-specific","title":"Platform specific","text":"<p>HMX</p> <p>MX-V</p> <p>mx4</p>","tags":["Digital I/O","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/digital_io/#geting-started","title":"Geting started","text":"<p>Where possible, it is recommended to use the modern (since Linux v4.8) GPIO API. It is implemented in libgpiod and comes with bindings also for C++ and Python.</p> <p>The library comes with a set of tools that can be used from a shell script to set and get values.</p> <ul> <li>gpiodetect - list all gpiochips present on the system, their names, labels and number of GPIO lines</li> <li>gpioinfo   - list all lines of specified gpiochips, their names, consumers, direction, active state and additional flags</li> <li>gpioget    - read values of specified GPIO lines </li> <li>gpioset    - set values of specified GPIO lines, potentially keep the lines exported and wait until timeout, user input or signal</li> <li>gpiofind   - find the gpiochip name and line offset given the line name </li> <li>gpiomon    - wait for events on GPIO lines, specify which events to watch, how many events to process before exiting or if the events should be reported to the console</li> </ul>","tags":["Digital I/O","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/ethernet/","title":"Ethernet","text":"","tags":["Ethernet","HMX","C61","MX-4","T30","T30 FR","MX-V"]},{"location":"interfaces/ethernet/#overview","title":"Overview","text":"<p>Our products come with one or two RJ45 (Ethernet) ports.</p>","tags":["Ethernet","HMX","C61","MX-4","T30","T30 FR","MX-V"]},{"location":"interfaces/ethernet/#platform-specific","title":"Platform specific","text":"<ul> <li>HMX</li> <li>C61</li> <li>MX-V</li> <li>MX-4</li> </ul>","tags":["Ethernet","HMX","C61","MX-4","T30","T30 FR","MX-V"]},{"location":"interfaces/ethernet/#configuration-though-systemd-networkd","title":"Configuration though Systemd-Networkd","text":"<p>Note: Not for BSP release 1.6/1.5 and older</p> <p>Most of our products come with a systemd-networkd configuration file, one for each Ethernet port. The following is just an example of how to set up a custom network.</p> <p>Example:</p> <p>Edit or create <code>/lib/systemd/network/80-eth0.network</code> <pre><code>[Match]\nName=eth0\nType=ether\nKernelCommandLine=!nfsroot\n\n\n[Network]\nDHCP=yes\n\n[Address]\nLabel=eth0:0\nAddress=192.168.1.200/24\n\n[DHCP]\nUseMTU=yes\nRouteMetric=10\nClientIdentifier=mac\n</code></pre></p>","tags":["Ethernet","HMX","C61","MX-4","T30","T30 FR","MX-V"]},{"location":"interfaces/j1708/","title":"J1708","text":"","tags":["J1708","C61","MX-V","CT","CT GL"]},{"location":"interfaces/j1708/#overview","title":"Overview","text":"<p>Some of our platforms feature J1708 operating over UART or SPI via a coprocessor. The supported baud rate is 9600 (faster might be possible has not yet been tested).</p> <p>To be able to use the J1708 interface you will need to include <code>/usr/lib/libj1708.so</code> in your application.</p> <p>For for a quick test you can use <code>j1708-test</code>. <pre><code>root@mx4-ct-29009999:~# j1708-test\n\nj1708-test\nUsage: \"j1708-test\" l:n:p:b:m:csrqwBNR [j1708 frame]\n\nOptions:\n-p,             Priority for sending (default =  8)\n-m,             MID (default = 128)\n-b,             Baud-rate ([9600], 19200, 115200)\n-B,             Bad checksum send\n-s,             Send mode. Only one mode can be active\n-r,             Receive mode. Only one mode can be active\n-R,             Synchronous receive mode. Only one mode can be active\n-N,             Non blocking read. Mean to be used together with -R\n-l,             Number of loops in send mode.\n-q,             Send sequenced data\n-w,             Raw data mode, user will get messages with bad CRC\n-c,             Crazy send mode. A more sporadic send then -s cmd\n-n,             Number of frames to receive before terminating app\n\nExamples:\n\nSend 10 frames with the data provided:\nj1708 -s -l 10 1 2 3 4 5 6 7 8 9 10\nRead\nj1708 -r\n</code></pre></p>","tags":["J1708","C61","MX-V","CT","CT GL"]},{"location":"interfaces/j1708/#mx-v","title":"MX-V","text":"<p>This platform uses SPI to communicate with the J1708 bus trough a coprocessor.</p> <p>The compiled library is from the hm-commercial repository.</p>","tags":["J1708","C61","MX-V","CT","CT GL"]},{"location":"interfaces/j1708/#ct-and-ct-gl","title":"CT and CT GL","text":"<p>This platform uses UART to communicate with the J1708 bus via a coprocessor. The compiled library is from our mx4-commercial or mx4 repositories.</p>","tags":["J1708","C61","MX-V","CT","CT GL"]},{"location":"interfaces/j1708/#c61","title":"C61","text":"<p>No current product has populated this alternative but it could be done, and J1708 should work the same as for CT and CT GL.</p>","tags":["J1708","C61","MX-V","CT","CT GL"]},{"location":"interfaces/leds/","title":"LEDs","text":"","tags":["LED","HMX","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/leds/#overview","title":"Overview","text":"<p>LEDs are typically accessed through the Linux LED subsystem API.</p> <p>All LEDs can be used as you wish and they are just named except the \"Power\" LED.</p> <p>(For MX-4, refer to mx4-leds.)</p>","tags":["LED","HMX","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/leds/#set-led","title":"Set LED","text":"<pre><code>echo heartbeat &gt; /sys/class/leds/red:gps/trigger\n# On\necho 1 &gt;  /sys/class/leds/mx4-wifi/brightness\necho 1 &gt;  /sys/class/leds/mx4-wifi-red/brightness\n# Off\necho 0 &gt;  /sys/class/leds/mx4-wifi/brightness\necho 0 &gt;  /sys/class/leds/mx4-wifi-red/brightness\n</code></pre>","tags":["LED","HMX","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/leds/#platform-specific","title":"Platform specific","text":"<ul> <li>hmx-leds</li> <li>mxv-leds</li> <li>mx4-leds</li> </ul>","tags":["LED","HMX","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/networking/","title":"Networking","text":"","tags":["Networking","CAN","Ethernet","USB","WiFi"]},{"location":"interfaces/networking/#overview","title":"Overview","text":"<ul> <li>By default, networking is configured by the systemd service <code>systemd-networkd</code>. </li> <li>The parameters are set in the configuration files in <code>/lib/systemd/network/</code>.</li> <li>Older MX-4 systems are configured by the scripts in `/etc/network/ip-up.d*</li> </ul> <p>Configuration can also be done manually with the iproute2 utilities, e.g. the <code>ip</code> command.</p>","tags":["Networking","CAN","Ethernet","USB","WiFi"]},{"location":"interfaces/networking/#network-types","title":"Network types","text":"<p>For type-specific configuration of networking, refer to the links below.</p> <ul> <li> <p>CAN</p> </li> <li> <p>Ethernet</p> </li> <li> <p>USB</p> </li> <li> <p>WiFi</p> </li> </ul>","tags":["Networking","CAN","Ethernet","USB","WiFi"]},{"location":"interfaces/rtc/","title":"Real Time Clock","text":"","tags":["Real Time Clock","C61","HMX","MX-V","T30","T30 FR"]},{"location":"interfaces/rtc/#get-current-time-system-and-hardware","title":"Get current time (system and hardware)","text":"<p>On modern distributions, timedatectl can be used to get detailed time and date information.</p> <pre><code># timedatectl\n               Local time: Fri 2023-12-15 13:22:09 UTC\n           Universal time: Fri 2023-12-15 13:22:09 UTC\n                 RTC time: Fri 2023-12-15 13:21:40\n                Time zone: Universal (UTC, +0000)\nSystem clock synchronized: no\n              NTP service: active\n          RTC in local TZ: no\n</code></pre> <p>The Linux system time is synchronized with the internal real time clock at boot time.</p> <p>If <code>timedatectl</code> is missing, system and time can be read out using the <code>date</code> command.</p> <pre><code># date\nFri Dec 15 13:32:31 UTC 2023\n</code></pre> <p>Hardware time:</p> <pre><code># hwclock\n2023-12-15 13:31:46.826215+00:00\n</code></pre>","tags":["Real Time Clock","C61","HMX","MX-V","T30","T30 FR"]},{"location":"interfaces/rtc/#set-system-time","title":"Set system time","text":"<pre><code>timedatectl set-time \"2023-12-15 13:10:00\"\n</code></pre> <p>or</p> <pre><code>date --set=\"20231215 13:10\"\n</code></pre> <p>On our default images we try to synchronize time from <code>pool.ntp.org</code> on an ifup networking event. If we succeed with the <code>ntpdate</code> command we synchronize the system time to hardware clock (main CPU internal real time clock).</p> <p>See <code>/etc/network/if-up.d/ntpdate-sync</code> and <code>/etc/default/ntpdate</code> on target system.</p>","tags":["Real Time Clock","C61","HMX","MX-V","T30","T30 FR"]},{"location":"interfaces/rtc/#set-hardware-clock-to-system-time","title":"Set hardware clock to system time","text":"<pre><code>hwclock -w\n</code></pre>","tags":["Real Time Clock","C61","HMX","MX-V","T30","T30 FR"]},{"location":"interfaces/rtc/#set-system-time-to-hardware-clock","title":"Set system time to hardware clock","text":"<pre><code>hwclock --systohc\n</code></pre>","tags":["Real Time Clock","C61","HMX","MX-V","T30","T30 FR"]},{"location":"interfaces/rtc/#set-alarm-wake-on-rtc","title":"Set alarm (wake on RTC)","text":"<ul> <li>Modern platforms</li> <li>MX-4</li> </ul>","tags":["Real Time Clock","C61","HMX","MX-V","T30","T30 FR"]},{"location":"interfaces/rtc/#device-path","title":"Device path","text":"<p>The internal real time clock can be found at <code>/dev/rtc0</code>.</p>","tags":["Real Time Clock","C61","HMX","MX-V","T30","T30 FR"]},{"location":"interfaces/rtc_alarm/","title":"Wake on Real Time Clock (set alarm)","text":"<p>To use wake on RTC, you can run the command below.</p> <pre><code>sleeptime_seconds=30\nRTC=/sys/class/rtc/rtc0/wakealarm; echo 0&gt;$RTC &amp;&amp; echo +${sleeptime_seconds} &gt;$RTC &amp;&amp; systemctl suspend\n</code></pre> <p>For HMX, <code>rtc1</code> will also work.</p>","tags":["Real Time Clock","HMX","MX-V","C61","T30","T30 FR"]},{"location":"interfaces/serial/","title":"Serial communication","text":"","tags":["RS-232","RS-485","MX-V","CT","CT GL","C61"]},{"location":"interfaces/serial/#overview","title":"Overview","text":"<p>Several products have one or more serial interfaces: - RS-232 - RS-485</p>","tags":["RS-232","RS-485","MX-V","CT","CT GL","C61"]},{"location":"interfaces/serial/#platform-specific","title":"Platform specific","text":"<ul> <li>MX-V</li> <li>CT</li> <li>CT GL</li> <li>C61</li> </ul>","tags":["RS-232","RS-485","MX-V","CT","CT GL","C61"]},{"location":"interfaces/serial/#example","title":"Example","text":"<pre><code>    echo -e hello\\r\\n | microcom  -s 9600 -t 10000 -X /dev/ttyTHS1\n</code></pre>","tags":["RS-232","RS-485","MX-V","CT","CT GL","C61"]},{"location":"interfaces/serial/#console-output","title":"Console output","text":"<p>The console output on the device defaults to a UART connected to a debug pin list inside the housing. However, it is possible to switch the console output to an external RS-232 either from the u-boot environment list or dynamically at runtime using <code>setconsole</code>.</p>","tags":["RS-232","RS-485","MX-V","CT","CT GL","C61"]},{"location":"interfaces/serial/#baudrate","title":"Baudrate","text":"<p>The supported range is from 9600 to 115200.</p>","tags":["RS-232","RS-485","MX-V","CT","CT GL","C61"]},{"location":"interfaces/start_signal/","title":"Start signals","text":"","tags":["Start signals","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/start_signal/#overview","title":"Overview","text":"<p>Host Mobility platforms have one or many start signals. They are sometimes called KL15, start signal or key on. To start the unit you will need to plug in required DC power and minimum voltage to the start signal. Consult the platform-specific documentation below and the technical specification that you received along with the product.</p>","tags":["Start signals","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/start_signal/#platform-specific","title":"Platform specific","text":"<ul> <li>HMX</li> <li>T30/T30 FR</li> <li>C61</li> <li>MX-4</li> <li>MX-V</li> <li>CT</li> </ul>","tags":["Start signals","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/tachometer/","title":"Tachometer","text":"","tags":["Tachometer","CT","CT GL","T30","T30 FR","MX-V"]},{"location":"interfaces/tachometer/#overview","title":"Overview","text":"<p>This input is designed for use with a tachometer output. The coprocessor counts the number of pulses registered on this input, making it available to the system.</p>","tags":["Tachometer","CT","CT GL","T30","T30 FR","MX-V"]},{"location":"interfaces/tachometer/#mx-4","title":"MX-4","text":"<ul> <li> <p>CT</p> <ul> <li>Supports slow signal changes; can be used as a digital input.</li> </ul> </li> <li> <p>CT GL</p> <ul> <li>From hm001-1-P1C, tachometer will work up to 20kHz.</li> <li>hm001-1-P1B and older support slow signal changes.</li> </ul> </li> <li> <p>T30 and T30 FR</p> <ul> <li>Support slow signal changes; can be used as a digital input.</li> </ul> </li> </ul>","tags":["Tachometer","CT","CT GL","T30","T30 FR","MX-V"]},{"location":"interfaces/tachometer/#examples","title":"Examples","text":"<ul> <li>Read</li> </ul> <pre><code>cat /opt/hm/pic_attributes/c3_counter\n</code></pre> <ul> <li>Reset counter</li> </ul> <pre><code>echo 0 &gt; /opt/hm/pic_attributes/c3_counter\n</code></pre>","tags":["Tachometer","CT","CT GL","T30","T30 FR","MX-V"]},{"location":"interfaces/tachometer/#mx-v","title":"MX-V","text":"<p>Supported up to 20kHz.</p>","tags":["Tachometer","CT","CT GL","T30","T30 FR","MX-V"]},{"location":"interfaces/tachometer/#example","title":"Example","text":"<ul> <li>Read</li> </ul> <pre><code>cat /sys/bus/iio/devices/iio:device0/in_voltage24_TACHOMETER_VALUE_raw\n</code></pre>","tags":["Tachometer","CT","CT GL","T30","T30 FR","MX-V"]},{"location":"interfaces/usb/","title":"USB","text":"","tags":["USB","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/usb/#overview","title":"Overview","text":"<p>Our products are equipped with at least one USB port and many of them also have a USB OTG port where it is possible to connect e.g. keyboards, memory sticks or a PC (to enable \"Ethernet over USB\").</p>","tags":["USB","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/usb/#platform-specific","title":"Platform specific","text":"<ul> <li>HMX</li> <li>MX-V</li> <li>C61</li> <li>MX-4</li> </ul>","tags":["USB","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/usb/#ethernet-over-usb","title":"Ethernet over USB","text":"<p>Ethernet over USB is supported via RNDIS. Connect a USB-A cable to the USB0 port on the supported platforms and a free USB port on e.g. a PC, then power on the unit or reboot. (The MX-4 has the capacity to switch from host to peripheral state when powered.) This will give the PC the IP address 192.168.250.2 and the product 192.168.250.1.</p>","tags":["USB","HMX","C61","MX-4","MX-V"]},{"location":"interfaces/wifi/","title":"WiFi","text":"","tags":["WiFi","MX-V","T30","T30 FR"]},{"location":"interfaces/wifi/#overview","title":"Overview","text":"<p>This page briefly explains how to scan for and connect to WiFi networks using wpa_supplicant. For more information, see the Arch Linux Wiki.</p>","tags":["WiFi","MX-V","T30","T30 FR"]},{"location":"interfaces/wifi/#platform-specific","title":"Platform specific","text":"<ul> <li>MX-V</li> <li>T30</li> <li>T30 FR</li> </ul>","tags":["WiFi","MX-V","T30","T30 FR"]},{"location":"interfaces/wifi/#examples","title":"Examples","text":"","tags":["WiFi","MX-V","T30","T30 FR"]},{"location":"interfaces/wifi/#scan-for-wifi-networks","title":"Scan for WiFi networks","text":"<pre><code>iw dev $WIFI_INTERFACE scan ap-force\n</code></pre>","tags":["WiFi","MX-V","T30","T30 FR"]},{"location":"interfaces/wifi/#connect-to-a-wifi-network","title":"Connect to a wifi network","text":"<pre><code>wpa_passphrase ${WIFI_SSID} ${WIFI_PASSWORD}\nwpa_supplicant -B -imlan0 -c /etc/wpa_supplicant.conf -Dnl80211,wext\n</code></pre>","tags":["WiFi","MX-V","T30","T30 FR"]},{"location":"interfaces/wifi/#connect-to-a-wifi-network_1","title":"Connect to a wifi network","text":"<p>See wireless.wiki.kernel.org/hostpad</p> <p>See T30</p>","tags":["WiFi","MX-V","T30","T30 FR"]},{"location":"interfaces/c61/can/","title":"CAN (C61)","text":"","tags":["CAN","C61"]},{"location":"interfaces/c61/can/#overview","title":"Overview","text":"<p>3 CAN 2.0B channels, typically named <code>can0</code> to <code>can2</code>.  <code>can2</code> is limited to around 250 kbps due to hardware limitations.</p>","tags":["CAN","C61"]},{"location":"interfaces/c61/ethernet/","title":"Ethernet (C61)","text":"","tags":["Ethernet","C61"]},{"location":"interfaces/c61/ethernet/#overview","title":"Overview","text":"<p>This product has one 8P8C (RJ45) connector that supports 10BASE-T and 100BASE-TX Ethernet.</p>","tags":["Ethernet","C61"]},{"location":"interfaces/c61/ethernet/#default-ip-addresses-and-interface-names","title":"Default IP addresses and interface names","text":"<p>Ethernet interfaces, e.g. <code>eth0</code>, are configured to request their IP addresses using DHCP with a fallback to the static addresses 192.168.1.200.</p>","tags":["Ethernet","C61"]},{"location":"interfaces/c61/ethernet/#controlling-network-with-if-up","title":"Controlling network with if-up","text":"<p>Note: For BSP release 1.6/1.5 and older</p> <p>See scripts in <code>/etc/network/if-up.d</code> for details.</p>","tags":["Ethernet","C61"]},{"location":"interfaces/c61/io/","title":"IOs (C61)","text":"","tags":["ADC","Digital I/O","C61"]},{"location":"interfaces/c61/io/#overview","title":"Overview","text":"<p>This platform has two analog inputs that are combined with two digital outputs on the same connector pins. Analog In can be used to detect short-circuits or to monitor certain signals within the supported voltage range of the platform.</p>","tags":["ADC","Digital I/O","C61"]},{"location":"interfaces/c61/io/#digital-in-and-out","title":"Digital In and Out","text":"<p>Digital IO (MX-4)</p>","tags":["ADC","Digital I/O","C61"]},{"location":"interfaces/c61/io/#analog-in","title":"Analog in","text":"<p>Analog (MX-4)</p>","tags":["ADC","Digital I/O","C61"]},{"location":"interfaces/c61/leds/","title":"Leds","text":"<p>LEDS on the C61 are accessed through spi</p>","tags":["C61"]},{"location":"interfaces/c61/modem/","title":"C61 Modem","text":"","tags":["Modem","C61"]},{"location":"interfaces/c61/modem/#overview","title":"Overview","text":"<p>The C61 has a modem from Quectel called EG25-G with a GPS receiver.</p>","tags":["Modem","C61"]},{"location":"interfaces/c61/modem/#startingenabling","title":"Starting/Enabling","text":"<p>Note:  The modem is turned off by default. <pre><code>echo 1 &gt; /opt/hm/pic_attributes/ctrl_modem_on\n</code></pre> * The modem takes about 10 seconds to start and register itself with the kernel. It then takes up to one minute before it is registered in the linux usb list.</p> <ul> <li>Check USB TTY device to see if it has shown up.</li> </ul> <pre><code>find /dev -name \"ttyUSB*\"\n</code></pre> <pre><code>/dev/ttyUSB3\n/dev/ttyUSB2\n/dev/ttyUSB1\n/dev/ttyUSB0\n</code></pre> <ul> <li>The modem also shows up with the <code>lsusb</code> command.</li> </ul> <pre><code>root@10210100023:~# lsusb | grep Quectel\nBus 001 Device 007: ID 2c7c:030a Quectel Wireless Solutions Co., Ltd. Quectel EM05-G\n</code></pre>","tags":["Modem","C61"]},{"location":"interfaces/c61/modem/#status-on","title":"Status ON","text":"<p>Example showing a modem start and running.</p> <pre><code>/opt/hm/modem_status.sh\n******* MODEM STATUS DUMP *******\n\nctrl_modem_status: 1342177491\n\nModem state     ON\nCtrl state:     ON\n\nSLED:           0\nSLED Mon:       ON\n\nModem EMG/reset:        0\n\nCurrent state:  on\nPrev state:     turn_on_timeout\n\nPrev RC:        unexpected_shutdown\n\nStart cnt:      0\nReset cnt:      0\n\nEMG used:       NO\n</code></pre>","tags":["Modem","C61"]},{"location":"interfaces/c61/modem/#shutdownreset","title":"Shutdown/Reset","text":"<p>To disable the modem, set ctrl_modem_on to 0</p> <p>To reset it use ctrl_modem_emg (emergency restart signal) and set it to 0, then back to 1 after a second.</p> <pre><code>echo 0 &gt; /opt/hm/pic_attributes/ctrl_modem_on\n# or (not to be used regularly because it could affect the memory)\necho 0 &gt; /opt/hm/pic_attributes/ctrl_modem_emg\n</code></pre>","tags":["Modem","C61"]},{"location":"interfaces/c61/modem/#production-settings-default","title":"Production settings (default)","text":"<ul> <li>Detect SIM card</li> <li>AT+QSIMDET=0,0<ul> <li>Needs a restart to take affect</li> </ul> </li> <li>AT+QSIMSTAT?<ul> <li>0 Off, 1 On first parameter</li> </ul> </li> <li>GPS (not confirmed)</li> <li>AT+QGPSCFG=\"autogps\",1</li> <li>AT+QGPSCFG=\"nmeasrc\",1</li> </ul>","tags":["Modem","C61"]},{"location":"interfaces/c61/modem/#test-sim-card","title":"Test SIM card","text":"","tags":["Modem","C61"]},{"location":"interfaces/c61/modem/#gps","title":"GPS","text":"","tags":["Modem","C61"]},{"location":"interfaces/c61/modem/#use-wvdial-to-get-a-broadband-connection","title":"Use WvDial to get a broadband connection","text":"","tags":["Modem","C61"]},{"location":"interfaces/c61/serial/","title":"Serial communication (C61)","text":"","tags":["RS-232","RS-485","C61"]},{"location":"interfaces/c61/serial/#overview","title":"Overview","text":"<p>The C61 has one RS-232 port (<code>/dev/ttyLP0</code>) and one optional RS-485 port (<code>/dev/ttyLP1</code>).</p>","tags":["RS-232","RS-485","C61"]},{"location":"interfaces/c61/usb/","title":"USB (C61)","text":"","tags":["USB","C61"]},{"location":"interfaces/c61/usb/#overview","title":"Overview","text":"<ul> <li> <p>One USB-A 2.0 with OTG support. </p> </li> <li> <p>The currently provided BSP (using Linux 4.19) does not support the OTG functionality. Instead, the USB port is just a USB Host port. This will be fixed in a coming BSP release. If you are using Linux 4.4 you will be able to use 'Ethernet over USB'.*</p> </li> </ul>","tags":["USB","C61"]},{"location":"interfaces/ctgl/modem/","title":"CT GL Modem","text":"","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#overview","title":"Overview","text":"<p>The C61 has a modem from Quectel called EG25-G with a GPS receiver.</p>","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#startingenabling","title":"Starting/Enabling","text":"<p>Note:  The modem is turned off by default. <pre><code>echo 1 &gt; /opt/hm/pic_attributes/ctrl_modem_on\n</code></pre> * The modem takes about 10 seconds to start and register itself with the kernel. It then takes up to one minute before it is registered in the linux usb list.</p> <ul> <li>Check USB TTY device to see if it has shown up.</li> </ul> <pre><code>find /dev -name \"ttyUSB*\"\n</code></pre> <pre><code>/dev/ttyUSB3\n/dev/ttyUSB2\n/dev/ttyUSB1\n/dev/ttyUSB0\n</code></pre> <ul> <li>The modem also shows up with the <code>lsusb</code> command.</li> </ul> <pre><code>root@10210100023:~# lsusb | grep Quectel\nBus 001 Device 007: ID 2c7c:030a Quectel Wireless Solutions Co., Ltd. Quectel EM05-G\n</code></pre>","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#status-on","title":"Status ON","text":"<p>Example showing a modem start and running.</p> <pre><code>/opt/hm/modem_status.sh\n******* MODEM STATUS DUMP *******\n\nctrl_modem_status: 1342177491\n\nModem state     ON\nCtrl state:     ON\n\nSLED:           0\nSLED Mon:       ON\n\nModem EMG/reset:        0\n\nCurrent state:  on\nPrev state:     turn_on_timeout\n\nPrev RC:        unexpected_shutdown\n\nStart cnt:      0\nReset cnt:      0\n\nEMG used:       NO\n</code></pre>","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#shutdownreset","title":"Shutdown/Reset","text":"<p>To disable the modem, set ctrl_modem_on to 0</p> <p>To reset it use ctrl_modem_emg (emergency restart signal) and set it to 0, then back to 1 after a second.</p> <pre><code>echo 0 &gt; /opt/hm/pic_attributes/ctrl_modem_on\n# or (not to be used regulary because it could effect the memory)\necho 0 &gt; /opt/hm/pic_attributes/ctrl_modem_emg\n</code></pre>","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#production-settings-default","title":"Production settings (default)","text":"<ul> <li>Detect SIM card</li> <li>AT+QSIMDET=0,0<ul> <li>Needs a restart to take affect</li> </ul> </li> <li>AT+QSIMSTAT?<ul> <li>0 Off, 1 On first parameter</li> </ul> </li> <li>GPS (not confirmed)</li> <li>AT+QGPSCFG=\"autogps\",1</li> <li>AT+QGPSCFG=\"nmeasrc\",1</li> </ul>","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#test-sim-card","title":"Test SIM card","text":"","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#gps","title":"GPS","text":"","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#use-wvdial-to-get-a-broadband-connection","title":"Use WvDial to get a broadband connection","text":"","tags":["Modem","CT GL"]},{"location":"interfaces/ctgl/modem/#audio","title":"Audio","text":"","tags":["Modem","CT GL"]},{"location":"interfaces/hmx/accelerometer/","title":"HMX Accelerometer","text":"","tags":["Accelerometer","HMX"]},{"location":"interfaces/hmx/accelerometer/#overview","title":"Overview","text":"<p>The current path to find the device on linux 6.1 <code>/sys/bus/iio/devices/iio\\:device0/</code>. This product is using LIS2HH12 sensor and more information can be found at STMicroelectronics LIS2HH12 Sensor</p>","tags":["Accelerometer","HMX"]},{"location":"interfaces/hmx/accelerometer/#change-sample-frequency","title":"Change sample frequency","text":"<pre><code>cat /sys/bus/iio/devices/iio\\:device0/sampling_frequency_available\n10 50 100 200 400 800\necho 800 &gt; /sys/bus/iio/devices/iio\\:device0/sampling_frequency\n</code></pre>","tags":["Accelerometer","HMX"]},{"location":"interfaces/hmx/accelerometer/#activate-data-ready-pin-int1","title":"Activate data ready pin INT1","text":"<pre><code>i2cset -f -y 3 0x1e 0x22 1\ncat /proc/interrupts | grep lis2hh12-trigger\n168:          0          0          0          0  gpio-mxc   2 Edge      lis2hh12-trigger\n</code></pre>","tags":["Accelerometer","HMX"]},{"location":"interfaces/hmx/accelerometer/#activate-triggers","title":"Activate triggers","text":"<p>This is just an example of the registers that need to be changed to be able to activate a trigger interupt on INT1 pin. The example works for horizontal trigger point.For wake up the system from the INT1 is not yet confirmed. <pre><code>#Place the device in flat position\ni2cset -f -y 3 0x1e 0x20 0x3F # CTRL1: X, Y, Z enabled, ODR = 100 Hz, BDU enabled\ni2cset -f -y 3 0x1e 0x21 0x00 # CTRL2: High-pass filter disabled\ni2cset -f -y 3 0x1e 0x22 0x08 # CTRL3: Interrupt generator 1 on INT1 pin\ni2cset -f -y 3 0x1e 0x23 0x04 # CTRL4: FS = 2g, Register address automatically incremented during a multiple byte access with a serial interface\ni2cset -f -y 3 0x1e 0x24 0x00 # CTRL5: Interrupt active-high; Interrupt pins push-pull configuration\ni2cset -f -y 3 0x1e 0x26 0x04 # CTRL7: Interrupt 1 latched\ni2cset -f -y 3 0x1e 0x33 0x05 # IG_THS_Y1: Threshold = 250 mg [(2/256)*32 = 250 mg] =0x20 . 0x05?\n                                #i2cset -f -y 3 0x1e 0x33 0x00 // IG_DUR1: No duration\ni2cset -f -y 3 0x1e 0x30 0x04 # IG_CFG1: Enable YLIE interrupt generation\n\n#clear interrupt register\nwhile true; do i2cget -f -y 3 0x1e 0x31 ; sleep 1; done;\n\n#systemctl suspend\n</code></pre></p>","tags":["Accelerometer","HMX"]},{"location":"interfaces/hmx/accelerometer/#sleep-and-wake-up","title":"Sleep and wake up","text":"<p>The use of triggers has been tested, but it's currently not possible to wake up the main CPU.</p>","tags":["Accelerometer","HMX"]},{"location":"interfaces/hmx/can/","title":"CAN (HMX)","text":"","tags":["CAN","HMX"]},{"location":"interfaces/hmx/can/#overview","title":"Overview","text":"<p>6 CAN-FD channels, typically named <code>can0</code> to <code>can5</code></p>","tags":["CAN","HMX"]},{"location":"interfaces/hmx/can/#hmx-can-performance-tuning","title":"HMX CAN performance tuning","text":"<p>The HMX platform has 4 of its 6 CAN interfaces on two SPI buses. Depending on the use case, the interrupt handling CAN be tuned for performance or CPU load.</p>","tags":["CAN","HMX"]},{"location":"interfaces/hmx/can/#use-ethtool-to-limit-the-number-of-interrupts","title":"Use Ethtool to limit the number of interrupts","text":"<p>Wait until 6 frames have been received or 1000 \u00b5s passed: <pre><code>for i in 0 3 4 5; do \n    ethtool -C can${i} tx-usecs-irq 1000 rx-usecs-irq 1000 rx-frames-irq 6 tx-frames-irq 6\ndone\n</code></pre></p>","tags":["CAN","HMX"]},{"location":"interfaces/hmx/can/#turn-off-dma-for-spi","title":"Turn off DMA for SPI","text":"<p>The driver uses DMA for transfers &gt;64 bytes, but the DMA overhead is    larger than the gain. As CAN-FD frames (metadata+date) are bigger    than 64 bytes, DMA is used quite a lot. Disable DMA with:</p> <pre><code>echo N&gt;/sys/module/spi_imx/parameters/use_dma\n</code></pre>","tags":["CAN","HMX"]},{"location":"interfaces/hmx/can/#polling-of-transmit-complete","title":"Polling of transmit complete","text":"<p>If the driver doesn't use DMA, it uses PIO + transmit complete IRQ. The IRQ also comes with a certain overhead, so polling might be cheaper. This parameter sets the limit where polling is still used. The default is 30 \u00b5s. This value depends on your hardware and can be tuned.</p> <p>Set up a typical CAN bus load and measure the CPU usage with htop. Tweak the polling limit with:</p> <pre><code>echo 50&gt; /sys/module/spi_imx/parameters/polling_limit_us\n</code></pre>","tags":["CAN","HMX"]},{"location":"interfaces/hmx/can/#sleep-and-wake-up","title":"Sleep and wake up","text":"<p>To enable wake on CAN you will need to set up the channel and go bus on, unless disabled. Wake on individual CAN frame is supported theoretically for CAN1 and CAN2 but has not been tested by us. Current driver does not support it.</p>","tags":["CAN","HMX"]},{"location":"interfaces/hmx/digital_io/","title":"Digital I/O (HMX)","text":"","tags":["Digital I/O","HMX"]},{"location":"interfaces/hmx/digital_io/#overview","title":"Overview","text":"<p>The HMX-specific Digital I/Os are listed below. Check the technical file for more information about the different thresholds and whether it's possible to change state (digital out).</p>","tags":["Digital I/O","HMX"]},{"location":"interfaces/hmx/digital_io/#list-of-supported-outputs","title":"List of supported outputs","text":"<p>There are four different types of digital outputs.</p> <ul> <li>outputs with ability to sink a signal to ground<ul> <li>SINK_OUT_1</li> <li>SINK_OUT_2</li> </ul> </li> <li>Activate eth2 network on OBDII cable<ul> <li>Digital_output_ETH2_ACT</li> </ul> </li> <li>outputs with ability to source VCC power (they have different maximum current)<ul> <li>SOURCE_Digital_OUT_1</li> <li>SOURCE_Digital_OUT_2</li> <li>SOURCE_OUT_3</li> <li>SOURCE_OUT_4</li> <li>SOURCE_OUT_5</li> <li>SOURCE_OUT_6</li> <li>SOURCE_OUT_7</li> <li>SOURCE_OUT_8</li> <li>SOURCE_PWR_OUT_LED_1</li> <li>SOURCE_PWR_OUT_LED_2</li> </ul> </li> <li>output with both an internal buzzer and the ability to connect an external buzzer.<ul> <li>SOURCE_PWR_OUT_BUZZER</li> </ul> </li> </ul>","tags":["Digital I/O","HMX"]},{"location":"interfaces/hmx/digital_io/#list-of-supported-inputs","title":"List of supported inputs","text":"<p>There are two types of digital inputs:</p> <ul> <li>Pull down (33k to GND)<ul> <li>Digital_input_pulldown_1</li> <li>Digital_input_pulldown_2</li> </ul> </li> <li>pull up (33k to VCC)<ul> <li>Digital_input_pullup_1</li> <li>Digital_input_pullup_2</li> <li>Digital_input_HMI_1</li> <li>Digital_input_HMI_2</li> </ul> </li> </ul>","tags":["Digital I/O","HMX"]},{"location":"interfaces/hmx/digital_io/#fault-detection","title":"Fault detection","text":"<p>The unit has fault detection that goes high if a fault is detected.</p> <ul> <li>SOURCE_1_Fault</li> <li>SOURCE_2_Fault</li> <li>SOURCE_4_Fault</li> <li>SOURCE_5_Fault</li> <li>SOURCE_6_Fault</li> </ul>","tags":["Digital I/O","HMX"]},{"location":"interfaces/hmx/digital_io/#sleep-and-wake-up","title":"Sleep and wake up","text":"<p>For Digital in, wake-up is default on. If you want to disable the inputs one way is to change the device tree when building the image, the other is to unbind the gpio-keys. <pre><code>echo gpio-keys &gt; /sys/bus/platform/drivers/gpio-keys/unbind\n</code></pre> After waking up, you can bind it again if you want to use the gpio-keys.</p>","tags":["Digital I/O","HMX"]},{"location":"interfaces/hmx/ethernet/","title":"Ethernet (HMX)","text":"","tags":["Ethernet","HMX"]},{"location":"interfaces/hmx/ethernet/#overview","title":"Overview","text":"<p>This product has four Ethernet:   - eth0 : MX34 connector that supports 10BASE-T and 100BASE-TX   - eth1 : 8P8C(RJ45) connector that supports 10BASE-T and 100BASE-TX   - eth2 : Rosenberger connector that supports 100 and 1000BASE-T1   - eth3 : Rosenberger connector that supports 100 and 1000BASE-T1</p>","tags":["Ethernet","HMX"]},{"location":"interfaces/hmx/ethernet/#default-ip-addresses-and-interface-names","title":"Default IP addresses and interface names","text":"<p>The <code>eth0</code>, <code>eth1</code>, <code>eth2</code> and <code>eth3</code> Ethernet interfaces are configured to request their IP addresses using DHCP with a fallback to static addresses 192.168.1.200 for eth0, 192.168.2.200 for eth1, 192.168.3.200 for eth2, and 192.168.4.200 for eth3.</p>","tags":["Ethernet","HMX"]},{"location":"interfaces/hmx/ethernet/#sleep-and-wake-up","title":"Sleep and wake up","text":"<p>Not supported by the current hardware revision. T1 Ethernet (<code>eth2</code> and <code>eth3</code>) wake from suspend/sleep is planned for a later revision.</p>","tags":["Ethernet","HMX"]},{"location":"interfaces/hmx/leds/","title":"LEDs (HMX)","text":"","tags":["LED","HMX"]},{"location":"interfaces/hmx/leds/#overview","title":"Overview","text":"<p>This platform has red, green and yellow light-emitting diodes (LEDs) as well as special-function LEDs that are external and can be used with an external LED or other type hardware that needs an signal. See the technical specification for more details</p> <p>It also features an RGB LED called \"indicator\" that in the current design (HM010-xxxXx-V6B) is hidden from view. If you can see it, it is blue in U-Boot and green when running Linux. Flashing in white indicates BSP re-flashing and red that something has got wrong with the flashing, see update.</p> <p>The yellow:power is set up from device tree with heartbeat trigger and will blink if the system is running.</p>","tags":["LED","HMX"]},{"location":"interfaces/hmx/leds/#the-following-leds-are-available-on-hmx","title":"The following leds are available on HMX","text":"Name Use Case blue:indicator Indicator RGB LED green:func Functional LED green:gps GPS-related LED green:indicator Indicator RGB LED green:wan WAN-related LED green:wlan WLAN-related LED :pwr_out_active External LED Output :pwr_out_buzzer External/Internal Buzzer :pwr_out_equipment External Output :pwr_out_led_1 External LED Output :pwr_out_led_2 External LED Output red:func Functional LED red:gps GPS-related LED red:indicator Indicator RGB LED red:wan WAN-related LED red:wlan WLAN-related LED yellow:power Power-related LED","tags":["LED","HMX"]},{"location":"interfaces/hmx/modem/","title":"HMX Modem","text":"","tags":["Modem","HMX"]},{"location":"interfaces/hmx/modem/#overview","title":"Overview","text":"<p>The HMX has a modem from Quectel called EM05 with a GPS receiver.</p>","tags":["Modem","HMX"]},{"location":"interfaces/hmx/modem/#startingenabling-modem","title":"Starting/Enabling modem","text":"<p>The modem is turned on by default. To disable it, set the GPIO MODEM_PWR to 0. To reset it use MODEM_RST and set it to 0, then back to 1 after a second.</p> <p><pre><code>root@10210100023:~# gpioinfo | grep MODEM\n        line  10:  \"MODEM_PWR\"       unused   input  active-high\n        line  20:  \"MODEM_RST\"       unused   input  active-high\n\ngpioset $(gpiofind MODEM_PWR)=0\n</code></pre> <pre><code>* The modem takes about 10 seconds to start and register itself with the kernel. It then takes up to one minute before it is registered in the linux usb list.\n\n* Check USB TTY device to see if it has shown up.\n\n\n```bash\nfind /dev -name \"ttyUSB*\"\n</code></pre></p> <pre><code>/dev/ttyUSB3\n/dev/ttyUSB2\n/dev/ttyUSB1\n/dev/ttyUSB0\n</code></pre> <ul> <li>The modem also shows up with the <code>lsusb</code> command.</li> </ul> <pre><code>root@10210100023:~# lsusb | grep Quectel\nBus 001 Device 007: ID 2c7c:030a Quectel Wireless Solutions Co., Ltd. Quectel EM05-G\n</code></pre>","tags":["Modem","HMX"]},{"location":"interfaces/hmx/modem/#production-settingsdefault","title":"Production settings(default)","text":"<ul> <li>Sim card detect </li> <li>AT+QSIMDET=1,1 <ul> <li>Needs a restart to take effect</li> </ul> </li> <li>AT+QSIMSTAT?<ul> <li>0 Off, 1 On first parameter</li> </ul> </li> <li>GPS (not confirmed)</li> <li>AT+QGPSCFG=\"autogps\",1</li> <li>AT+QGPSCFG=\"nmeasrc\",1</li> </ul>","tags":["Modem","HMX"]},{"location":"interfaces/hmx/modem/#test-sim-card","title":"Test SIM card","text":"","tags":["Modem","HMX"]},{"location":"interfaces/hmx/modem/#gps","title":"GPS","text":"","tags":["Modem","HMX"]},{"location":"interfaces/hmx/modem/#use-wvdial-to-get-a-broadband-connection","title":"Use WvDial to get a broadband connection","text":"","tags":["Modem","HMX"]},{"location":"interfaces/hmx/modem/#sleep-and-wake-up","title":"Sleep and wake up","text":"<p>When the modem has a URC to report, a WOWWAN# pin signal will wake up the host. To be able to power down the modem, set QSCLK to 1 ```bash echo -ne \"AT+QSCLK=1\\r\\n\" | microcom -X /dev/ttyUSB2 -t 100</p> <p>Note: Not verified to work, support case issued where this pin never goes from state low to high.</p>","tags":["Modem","HMX"]},{"location":"interfaces/hmx/start_signal/","title":"Host Monitor X start signals","text":"","tags":["Start signals","HMX"]},{"location":"interfaces/hmx/start_signal/#overview","title":"Overview","text":"<p>There are 5 start signals on different connectors. Start 1 to 4 is meant to be used to start the device and Start 5 is meant to be used with an external LED or an output for signal start.</p> <p>To start the device the current signal time needs to be at least 2-3 seconds long (in the future we might shorter the time) for the unit to start up and be able to hold the start signal internally.</p> <p>The internal signal is also used for the cut-off function.</p> <p>To shut down the unit, run <pre><code>shutdown -h now\n</code></pre> When cut-off is enabled the unit is back to same state as it was when you plugged it in and will start again when any of the start signals goes high.</p>","tags":["Start signals","HMX"]},{"location":"interfaces/hmx/start_signal/#read-start-signal","title":"Read start signal","text":"<p>To read this signal you must first unbind it from gpio-keys or read it from /dev/input/event0.</p> <p>Example read with unbind gpio-key Note: This will disable wake-up possibility on digital and start signals. <pre><code>echo gpio-keys &gt; /sys/bus/platform/drivers/gpio-keys/unbind\ngpioget $(gpiofind IN_START)\necho gpio-keys &gt; /sys/bus/platform/drivers/gpio-keys/bind\n</code></pre></p>","tags":["Start signals","HMX"]},{"location":"interfaces/hmx/usb/","title":"USB (HMX)","text":"","tags":["USB","HMX"]},{"location":"interfaces/hmx/usb/#overview","title":"Overview","text":"<p>The product has one USB-C 3.0 OTG and one USB-A 2.0 port. Both can be used to reprogram/reflash the unit (together with the USB_boot button; more about this later).</p>","tags":["USB","HMX"]},{"location":"interfaces/modem/gemalto/","title":"Gemalto PLS8 Modem","text":""},{"location":"interfaces/modem/gemalto/#production-settings","title":"Production settings","text":"<pre><code>- **In some cases the modem AT command channel is not set up. To do this manually send the commands below:**\n    - echo \"at^ssrvset=actsrvset\"                    &gt; /dev/ttyACM1\n    - echo \"^SSRVSET: 10\"                            &gt; /dev/ttyACM1\n    - echo \"at^scfg=MEShutdown/OnIgnition,on\"        &gt; /dev/ttyACM1\n    - echo \"AT^SSRVSET=usbcomp,10,0061\"              &gt; /dev/ttyACM1\n    - echo \"AT^SSRVSET=srvmap,10,RSA,USB0,MUX0\"      &gt; /dev/ttyACM1\n    - echo \"AT^SSRVSET=srvmap,10,NMEA,USB1,MUX1\"     &gt; /dev/ttyACM1\n    - echo \"AT^SSRVSET=srvmap,10,APP,USB2,MUX2\"      &gt; /dev/ttyACM1\n    - echo \"AT^SSRVSET=srvmap,10,MDM,USB3,MUX3\"      &gt; /dev/ttyACM1\n    - echo \"AT^SSRVSET=actSrvSet, 10\"                &gt; /dev/ttyACM1\n    - **Check the result.**\n        - echo \"AT^SSRVSET?\"                             &gt; /dev/ttyACM1\n    - **Reset the modem to activate the new settings.**\n        - echo \"AT+CFUN=1,1?\"                            &gt; /dev/ttyACM1\n- The result ACM map is:\n    - Radio /dev/ttyACM0\n    - GPS   /dev/ttyACM1\n    - AT commands  /dev/ttyACM2\n    - Modem /dev/ttyACM3\n</code></pre>"},{"location":"interfaces/modem/gemalto/#use-wvdial-to-get-a-broadband-connection","title":"Use WvDial to get a broadband connection","text":"<pre><code>- Optional *ln -s /dev/ttyACM2 /dev/modem*\n- Run wvdialconf\n- vi /etc/wvdial.conf\n    - Init1 = ATZ\n    - Init2 = AT+CFUN=1\n    - Init3 = ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0\n    - Init4 = AT+CGDCONT=1,\"IP\",\"internet.telenor.se\"\n    - Modem Type = USB Modem\n    - ISDN = 0\n    - Phone = *99#\n    - Modem = /dev/ttyACM3\n    - Username=;\n    - Password=;\n    - Baud = 460800\n    - Stupid Mode = yes\n    - Auto Reconnect = on\n    - New PPPD = yes\n    - Auto DNS = 1\n- Run *wvdial &amp;*\n- Test *ping 8.8.8.8*\n- Output could look like this:\n    +-----------------------------------------------------------+\n    |root@mx4-v61:~# wvdial &amp;                                   |\n    +-----------------------------------------------------------+\n    |[1] 599                                                    |\n    +-----------------------------------------------------------+\n    |root@mx4-v61:~# --&gt; WvDial: Internet dialer version 1.61   |\n    +-----------------------------------------------------------+\n    |--&gt; Initializing modem.                                    |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: ATZ                                           |\n    +-----------------------------------------------------------+\n    |ATZ                                                        |\n    +-----------------------------------------------------------+\n    |OK                                                         |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: AT+CFUN=1                                     |\n    +-----------------------------------------------------------+\n    |AT+CFUN=1                                                  |\n    +-----------------------------------------------------------+\n    |OK                                                         |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0             |\n    +-----------------------------------------------------------+\n    |ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0                          |\n    +-----------------------------------------------------------+\n    |OK                                                         |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: AT+CGDCONT=1,\"IP\",\"internet.telenor.se\"       |\n    +-----------------------------------------------------------+\n    |AT+CGDCONT=1,\"IP\",\"internet.telenor.se\"                    |\n    +-----------------------------------------------------------+\n    |OK                                                         |\n    +-----------------------------------------------------------+\n    |--&gt; Modem initialized.                                     |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: ATDT*99#                                      |\n    +-----------------------------------------------------------+\n    |--&gt; Waiting for carrier.                                   |\n    +-----------------------------------------------------------+\n    |ATDT*99#                                                   |\n    +-----------------------------------------------------------+\n    |CONNECT 100000000                                          |\n    +-----------------------------------------------------------+\n    |--&gt; Carrier detected.  Starting PPP immediately.           |\n    +-----------------------------------------------------------+\n    |--&gt; Starting pppd at Tue Feb  5 10:46:34 2019              |\n    +-----------------------------------------------------------+\n    |--&gt; Pid of pppd: 600                                       |\n    +-----------------------------------------------------------+\n    |--&gt; Using interface ppp0                                   |\n    +-----------------------------------------------------------+\n    |root@mx4-v61:~# --&gt; local  IP address 46.194.12.163        |\n    +-----------------------------------------------------------+\n    |--&gt; remote IP address 10.64.64.64                          |\n    +-----------------------------------------------------------+\n    |--&gt; primary   DNS address 195.54.122.211                   |\n    +-----------------------------------------------------------+\n    |--&gt; secondary DNS address 195.54.122.221                   |\n    +-----------------------------------------------------------+\n</code></pre>"},{"location":"interfaces/modem/gemalto/#gps","title":"GPS","text":"<p>Note: simple commands</p> <pre><code>- This is just one way of many to set up and get GPS position data..\n    - echo \"AT^SGPSC=?\"                      &gt; /dev/ttyACM2\n    - echo \"AT^SGPSC=\"Engine\",0\"             &gt; /dev/ttyACM2\n    - echo \"AT^SBNW=agps,-1\"                 &gt; /dev/ttyACM2\n    - echo \"AT^SGPSC=\"Nmea/Freq\",1\"          &gt; /dev/ttyACM2\n    - echo \"AT^SGPSC=\"Nmea/Glonasst\",on\"     &gt; /dev/ttyACM2\n    - echo \"AT^SGPSC=\"Nmea/Output\",on\"       &gt; /dev/ttyACM2\n    - echo \"AT^SGPSC=\"Nmea/Urc\",off\"         &gt; /dev/ttyACM2\n    - echo \"AT^SGPSC=\"Power/Antenna\",auto\"   &gt; /dev/ttyACM2\n    - echo \"AT^SGPSC=\"Engine\",1\"             &gt; /dev/ttyACM2\n    - echo \"AT^SGPSC?\"                       &gt; /dev/ttyACM2\n    - cat /dev/ttyACM1 &amp; **or**gps-parser /dev/ttyACM1\n    - Output example (gps-parser)\n    +-------------------------------------------------------------------------------+\n    |+GPRMC: Fix Time: 19222 12:37:9 Lat: 57.40.431402, Long: 12.0.831634 Speed: 0  |\n    +-------------------------------------------------------------------------------+\n    |+GPRMC: Fix Time: 19222 12:37:10 Lat: 57.40.431402, Long: 12.0.831650 Speed: 0 |\n    +-------------------------------------------------------------------------------+\n    |+GPRMC: Fix Time: 19222 12:37:11 Lat: 57.40.431401, Long: 12.0.831660 Speed: 0 |\n    +-------------------------------------------------------------------------------+\n</code></pre>"},{"location":"interfaces/modem/modem/","title":"Modem","text":"","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#overview","title":"Overview","text":"<p>The modems in Host Mobility's products typically provide support for both mobile (cellular) networks and Global Positioning System (GPS) functionality. Although communication methods with the modems may vary across our product range, this page highlights the shared common features among all the integrated modems in our products.</p>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#platform-specific","title":"Platform specific","text":"<p>HMX</p> <p>MX-V</p> <p>CT GL</p> <p>C61</p> <p>CT</p> <p>T30/T30fr</p>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#communication-channels","title":"Communication channels","text":"<ul> <li>Quectel<ul> <li>Radio /dev/ttyUSB0</li> <li>GPS   /dev/ttyUSB1</li> <li>AT commands  /dev/ttyUSB2</li> <li>4G/LTE /dev/ttyUSB3</li> </ul> </li> <li>Gemalto<ul> <li>Radio /dev/ttyACM0</li> <li>GPS   /dev/ttyACM1</li> <li>AT commands  /dev/ttyACM2</li> <li>4G/LTE /dev/ttyACM3</li> </ul> </li> </ul>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#controlling-the-modem-with-at-commands","title":"Controlling the modem with AT commands","text":"","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#simple-read-and-write","title":"Simple read and write","text":"<pre><code>cat /dev/ttyACM2\necho \"AT+CFUN?\" &gt; /dev/ttyACM2\n</code></pre>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#better-way-to-read-and-write","title":"Better way to read and write","text":"<p>Use microcom to connect to the modem. (Exit microcom with <code>CTRL-X</code>)</p> <pre><code>microcom /dev/ttyUSB2\n# or, for PLS8 modems\nmicrocom /dev/ttyACM2\n</code></pre>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#to-get-more-informative-error-messages-you-can-type","title":"To get more informative error messages, you can type:","text":"<pre><code>AT+CMEE=2\n</code></pre> <p>Expected reply <pre><code>OK\n</code></pre></p>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#mobile-network","title":"Mobile network","text":"","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#test-mobile-network","title":"Test mobile network","text":"<ul> <li> <p>List all current network operators: <pre><code>AT+COPS=?`\n</code></pre></p> </li> <li> <p>After 20--30 seconds, you get something similar to:</p> </li> </ul> <pre><code>+COPS: (1,\"3 SE\",\"3 SE\",\"24002\",7),(1,\"Telenor SE\",\"TelenorS\",\"24008\",7),(1,\"Tele2\",\"Tele2 SE\",\"24007\",7),(1,\"TELIA S\",\"TELIA\",\"24001\",7),(1,\"TELIA S\",\"TELIA)\n</code></pre>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#check-status-of-pin-code-protection","title":"Check status of PIN code protection","text":"<p>type <pre><code>AT+CPIN?\n</code></pre> expected: <pre><code>+CPIN: READY\n</code></pre> error: <pre><code>+CME ERROR: SIM not inserted\n</code></pre></p>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#global-positioning-system-gps","title":"Global Positioning System (GPS)","text":"","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/modem/#time","title":"Time","text":"<p>The GPS time can be extracted from the <code>$GPRMC</code> string outputted by the GPS.</p> <p>This time is backed up to facilitate faster GPS fix times, avoiding the need to restart from scratch with each GPS engine restart.</p> <p>Additionally, this backed-up time serves as a fallback for applications in case the system time cannot be synchronized from the Internet for any reason. Please note that our default BSPs currently do not utilize this feature.</p> <p>See also Real Time Clock (RTC).</p>","tags":["Modem","MX-V","T30","T30 FR","MX-4","CT","CT GL","C61","HMX"]},{"location":"interfaces/modem/quectel/","title":"Quectel EG25/EM05","text":""},{"location":"interfaces/modem/quectel/#test-sim-card","title":"Test SIM card","text":""},{"location":"interfaces/modem/quectel/#check-if-sim-is-detected","title":"Check if SIM is detected","text":"<p>type <pre><code>AT+QSIMSTAT?\n</code></pre></p> <p>expected reply</p> <p><pre><code>+QSIMSTAT: 0,1\n</code></pre> or <pre><code>+QSIMSTAT: 0,1\n</code></pre></p> <p>0,1 or 1,1 means that SIM is detected</p>"},{"location":"interfaces/modem/quectel/#gps","title":"GPS","text":""},{"location":"interfaces/modem/quectel/#enable","title":"Enable","text":"<p>Connect to the modem with <pre><code>microcom /dev/ttyUSB2\n</code></pre></p> <p>Enable GPS with the AT commands <pre><code>AT+QGPSCFG=\"autogps\",1\nAT+QGPS=1\n</code></pre></p>"},{"location":"interfaces/modem/quectel/#reading-values","title":"Reading values","text":"<ul> <li>Wait until the GPS receiver has found enough satellites to get a fix.</li> <li>Get the GPS position with <code>AT+QGPSLOC?</code></li> <li>If the GPS receiver has no fix, the Not fixed now error is shown.</li> </ul> <pre><code>AT+QGPSLOC?\n+CME ERROR: Not fixed now\n</code></pre> <ul> <li>GPS data can be continuously streamed from <code>/dev/ttyUSB1</code> <pre><code>microcom /dev/ttyUSB1\n</code></pre></li> </ul>"},{"location":"interfaces/modem/quectel/#use-wvdial-to-get-a-broadband-connection","title":"Use WvDial to get a broadband connection","text":"<pre><code>- Optional *ln -s /dev/ttyACM2 /dev/modem*\n- Run wvdialconf\n- vi /etc/wvdial.conf\n    - Init1 = ATZ\n    - Init2 = AT+CFUN=1\n    - Init3 = AT+CGDCONT=1,\"IP\",\"internet.telenor.se\"\n    - Modem Type = USB Modem\n    - ISDN = 0\n    - Phone = *99#\n    - Modem = /dev/ttyUSB2\n    - Username=;\n    - Password=;\n    - Baud = 9600\n    - Stupid Mode = yes\n    - Auto Reconnect = on\n    - New PPPD = yes\n    - Auto DNS = 1\n- Run *wvdial &amp;*\n- Test *ping 8.8.8.8*\n- Output could look like this:\n    +-----------------------------------------------------------+\n    |root@mx4:~# wvdial &amp;                                   |\n    +-----------------------------------------------------------+\n    |[1] 599                                                    |\n    +-----------------------------------------------------------+\n    |root@mx4-v61:~# --&gt; WvDial: Internet dialer version 1.61   |\n    +-----------------------------------------------------------+\n    |--&gt; Initializing modem.                                    |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: ATZ                                           |\n    +-----------------------------------------------------------+\n    |ATZ                                                        |\n    +-----------------------------------------------------------+\n    |OK                                                         |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: AT+CFUN=1                                     |\n    +-----------------------------------------------------------+\n    |AT+CFUN=1                                                  |\n    +-----------------------------------------------------------+\n    |OK                                                   |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: AT+CGDCONT=1,\"IP\",\"internet.telenor.se\"       |\n    +-----------------------------------------------------------+\n    |AT+CGDCONT=1,\"IP\",\"internet.telenor.se\"                    |\n    +-----------------------------------------------------------+\n    |OK                                                         |\n    +-----------------------------------------------------------+\n    |--&gt; Modem initialized.                                     |\n    +-----------------------------------------------------------+\n    |--&gt; Sending: ATDT*99#                                      |\n    +-----------------------------------------------------------+\n    |--&gt; Waiting for carrier.                                   |\n    +-----------------------------------------------------------+\n    |ATDT*99#                                                   |\n    +-----------------------------------------------------------+\n    |CONNECT 100000000                                          |\n    +-----------------------------------------------------------+\n    |--&gt; Carrier detected.  Starting PPP immediately.           |\n    +-----------------------------------------------------------+\n    |--&gt; Starting pppd at Mon Dec 16 12:43:43 2019              |\n    +-----------------------------------------------------------+\n    |--&gt; Pid of pppd: 1317                                      |\n    +-----------------------------------------------------------+\n    |--&gt; Using interface ppp0                                   |\n    +-----------------------------------------------------------+\n    |--&gt; local  IP address 46.194.155.114                       |\n    +-----------------------------------------------------------+\n    |--&gt; remote IP address 10.64.64.64                          |\n    +-----------------------------------------------------------+\n    |--&gt; primary   DNS address 195.54.122.211                   |\n    +-----------------------------------------------------------+\n    |--&gt; secondary DNS address 195.54.122.221                   |\n    +-----------------------------------------------------------+\n</code></pre> <ul> <li>ping 8.8.8.8<ul> <li>64 bytes from 8.8.8.8: seq=0 ttl=55 time=55.250 ms</li> </ul> </li> </ul> <p>Or using pppd   - see https://github.com/hostmobility/mx4-wiki#modem</p>"},{"location":"interfaces/modem/quectel/#gps_1","title":"GPS","text":"<pre><code>- This is just one way of many to set up and get GPS position data..\n    - AT+QGPS=1 (Turn on  GNSSengine)\n- AT+QGPSCFG=\"autogps\",1\n    - AT+QGPSEND (Turn off GNSSengine)\n    - Output example gps-parser /dev/ttyUSB1 or AT+QGPSLOC? (AT+QGPSLOC=latitude)\n    +-------------------------------------------------------------------------------+\n    |+GPRMC: Fix Time: 19222 12:37:9 Lat: 57.40.431402, Long: 12.0.831634 Speed: 0  |\n    +-------------------------------------------------------------------------------+\n    |+GPRMC: Fix Time: 19222 12:37:10 Lat: 57.40.431402, Long: 12.0.831650 Speed: 0 |\n    +-------------------------------------------------------------------------------+\n    |+GPRMC: Fix Time: 19222 12:37:11 Lat: 57.40.431401, Long: 12.0.831660 Speed: 0 |\n    +-------------------------------------------------------------------------------+\n</code></pre>"},{"location":"interfaces/modem/quectel/#audio","title":"Audio","text":""},{"location":"interfaces/modem/quectel/#loopback-audio-test","title":"Loopback Audio Test","text":"<ul> <li>AT+QSIDET=10000</li> <li>AT+QAUDLOOP=1</li> <li>AT+CLVL? </li> <li>Loudspeaker Volume LevelSelection</li> <li>AT+CLVL=4 Recommended</li> <li>Factory default AT+QDAI=5,0,0,4,0,1</li> <li>factory default AT+QMIC=20577,14567</li> </ul>"},{"location":"interfaces/modem/quectel/#answer-call","title":"Answer call","text":"<ul> <li>ATV1</li> <li>ATA</li> </ul>"},{"location":"interfaces/mx4/accelerometer/","title":"Accelerometer (MX-4)","text":"","tags":["Accelerometer","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/accelerometer/#overview","title":"Overview","text":"<p>The current path to find the device on linux 6.1 <code>/sys/bus/iio/devices/iio\\:device0/</code>. This product is using MMA8452Q sensor and more information can be found at NXP Semiconductors MMA8452Q Sensor</p>","tags":["Accelerometer","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/accelerometer/#wakeup-from-suspend","title":"Wakeup from suspend","text":"<p>Not yet supported in software.</p>","tags":["Accelerometer","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/accelerometer/#for-linux-31-system","title":"For Linux 3.1 system","text":"","tags":["Accelerometer","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/accelerometer/#wakeup-from-suspend_1","title":"Wakeup from suspend","text":"<p>Not yet supported in software.</p>","tags":["Accelerometer","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/accelerometer/#examples","title":"Examples","text":"<p>Path in sysfs: /sys/class/sensor/mma/  Read x,y,z: value_{x,y,z} </p> <p>Interrupts from the accelerometer are routed to two GPIOs on the Colibri module. The GPIOs are not exported. Data ready is routed to INT1, other interrupts are routed to INT2. INT1 is the first mma interrupt seen in /proc/interrupts.</p> <p>All data generated from interrupts are accessed via chardevs. lsinput and input-event are part of package input-utils. <pre><code>lsinput\n/dev/input/event0\n   bustype : (null)\n   vendor  : 0x0\n   product : 0x0\n   version : 0\n   name    : \"mma845x\"\n   bits ev : EV_SYN EV_ABS\n\n/dev/input/event1\n   bustype : (null)\n   vendor  : 0x0\n   product : 0x0\n   version : 0\n   name    : \"Accl1\"\n   bits ev : EV_SYN EV_KEY EV_ABS EV_MSC\n</code></pre> mma845x is for coordinate data. Accl1 is for configured interrupts.</p> <p>Most of the possibilities mentioned in the mma8452 datasheet are available for configuration via the driver sysfs interface.  </p> <p>Example for testing transient interrupts. <pre><code>cd /sys/class/sensor/mma/transitent_detection0\necho enable,enable,enable &gt; enable\necho 1 &gt; threshold # set lowest possible threshold for transient\ninput-events 1\n# Move the device to generate a movement transient\n# Output:\ndev/input/event1\n   bustype : (null)\n   vendor  : 0x0\n   product : 0x0\n   version : 0\n   name    : \"Accl1\"\n   bits ev : EV_SYN EV_KEY EV_ABS EV_MSC\n\nwaiting for events\n00:18:33.808626: EV_KEY KEY_LEFTSHIFT pressed\n00:18:33.808629: EV_KEY KEY_G pressed\n00:18:33.808633: EV_KEY KEY_G released\n00:18:33.808635: EV_KEY KEY_LEFTSHIFT released\n00:18:33.808639: EV_ABS ??? 96\n00:18:33.808643: EV_ABS ??? 0\n00:18:33.808644: EV_SYN code=0 value=0\n\nTest to set the auto_wakeup or change the sample rate\necho disable &gt; /sys/class/sensor/mma/auto_wakeup\ncat /sys/class/sensor/mma/auto_wakeup\necho enable &gt; /sys/class/sensor/mma/auto_wakeup\ncat /sys/class/sensor/mma/auto_wakeup\n\nsupported sample rate in 3.1.10\ncat /sys/class/sensor/mma/supported_odr\n800.0;400.0;200.0;100.0;50.0;12.500;6.250;1.560\n\ntest maximum and minimum\necho 800.0 &gt; /sys/class/sensor/mma/odr\ncat /sys/class/sensor/mma/odr\n\necho 1.560 &gt; /sys/class/sensor/mma/odr\ncat /sys/class/sensor/mma/odr\n</code></pre></p>","tags":["Accelerometer","C61","MX-4","MX-V","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/analog/","title":"Analog Inputs (ADC) (MX-4)","text":"","tags":["ADC","C61","CT","CT GL","T20","T30","T30 FR"]},{"location":"interfaces/mx4/analog/#overview","title":"Overview","text":"<p>The ADC conversions are managed by the co-processor and the values are exposed as sysfiles.</p> <ul> <li>C61<ul> <li>input_voltage</li> <li>analog_1</li> <li>analog_2</li> <li>Start signals</li> <li>More information see IIOs</li> </ul> </li> <li>CT and CT GL<ul> <li>input_voltage</li> <li>input_battery</li> <li>analog_1 (start signal, analog in 1A&amp;B)</li> <li>analog_2 (4-20mA)</li> <li>analog_3 (0-32V)</li> <li>analog_4 (0-32V)</li> <li>Start signals</li> </ul> </li> <li>T20, T30 and T30 FR<ul> <li>input_voltage</li> <li>input_battery</li> <li>analog_1</li> <li>Start signals</li> </ul> </li> </ul> <pre><code># ls /opt/hm/pic_attributes/ | grep -i analog\nanalog_1_calibration_u\nanalog_1_uA\nanalog_2_calibration_u\nanalog_2_uA\nanalog_3_calibration_u\nanalog_3\nanalog_4_calibration_u\nanalog_4\nroot@mx4-gtt:~# ls /opt/hm/pic_attributes/ | grep -i input\ninput_battery_calibration_u\ninput_battery\ninput_battery_threshold_high\ninput_battery_threshold_low\ninput_temperature_calibration_u\ninput_temperature_mC\ninput_voltage_calibration_u\ninput_voltage\ninput_voltage_threshold_high\ninput_voltage_threshold_low\n</code></pre> <p>Calibration files are not be used by end users.</p>","tags":["ADC","C61","CT","CT GL","T20","T30","T30 FR"]},{"location":"interfaces/mx4/analog/#example-reading-input-voltage","title":"Example reading input voltage","text":"<pre><code>cat /opt/hm/pic_attributes/input_voltage\n14917\n</code></pre>","tags":["ADC","C61","CT","CT GL","T20","T30","T30 FR"]},{"location":"interfaces/mx4/analog/#example-of-when-vref-adc-reference-voltage-is-turned-off","title":"Example of when Vref (ADC reference voltage) is turned off.","text":"<p>Vref should normally be always on but it is turned off when entering sleep (go_to_sleep.sh). If you poll ADC values while entering sleep you will get some errors after Vref has been turned off.  Note: Coprocesssor firmware 2.8.2 and later (CT and T30/T30 FR) vref and other power are turned off after main processor by the coprocessor so it should not be any errors even in late state of go_to_sleep.sh. </p> <pre><code># echo 0 &gt; /sys/class/gpio/gpio243/value\n# cat /opt/hm/pic_attributes/input_voltage\ncat: read error: Operation not permitted\n</code></pre>","tags":["ADC","C61","CT","CT GL","T20","T30","T30 FR"]},{"location":"interfaces/mx4/can/","title":"CAN (MX-4)","text":"","tags":["CAN","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/can/#overview-t30-and-t30-fr","title":"Overview T30 and T30 FR","text":"<ul> <li>6 CAN 2.0B channels, typically named <code>can0</code> to <code>can5</code></li> <li>Partial networking support for wakeup on specific CAN frame (configured with <code>can-xcvr</code> application)</li> </ul>","tags":["CAN","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/can/#can-xcvr","title":"can-xcvr","text":"<p>We are using the TJA1145T, so you will be able to read more about the registers from the data sheet.</p> <pre><code>root@mx4-t30-29009999:~# can-xcvr --help\n  -D --device   Tranceiver device to use (default can0)\n  -m --mode    1 = sleep with wake up on any frame\n    2 = normal\n    3 = sleep with wake up on dedicated CAN wake-up frames\n    4 = sleep with only WAKE pin as wakeup source\n  -w --wuf      wake-up frame(wake up on dedicated frame(s)),\n  Frame control(fc)\n    bit 7 = IDE = standard(11bit) 0, 1 (29bit) id\n     bit 6 = PNDM = 0, means data length code and data field are \u2018don\u2019t care\u2019 for wake-up\n      1, data length code and data field are evaluated at wake-up\n    bit 5 to 4 reserved\n    bit 3:0 = DLC number of data bytes expected in a CAN frame\n    Example fc=0x00,\n  Mask (11 bit)\n    Example mask=0x007,\n  ID (11 bit)\n    Example id=0x1A0,\n    Results in that any of eight different identifiers will be recognized\n   as valid in the received WUF (from 0x1A0 to 0x1A7)\n  CDR (can bit rates), 50 kbit/s, 100 kbit/s, 125 kbit/s, 250 kbit/s, 500 kbit/s and 1 Mbit/s are\nsupported during selective wake-up.\n    Example cdr=250  Additional Data mask(dm) banks if DLC != 0, start with DM7\n    Example dm7=0xFF if DLC = 1 this will result in 8 groups of nodes could be woken up\n     full example -m 3 -w fc=0x00,mask=0x007,id=0x1A0,cdr=250 -s\n  -s --status   status of transceiver\n</code></pre>","tags":["CAN","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/can/#overview-ct-and-ct-gl","title":"Overview CT and CT GL","text":"<p>3 CAN 2.0B channels, typically named <code>can0</code> to <code>can3</code>.</p>","tags":["CAN","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/digital_io/","title":"Digital I/O (MX-4)","text":"","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#overview","title":"Overview","text":"<p>Different parts of this list are available depending on the platform. Please consult the technical specification to find the supported IOs.</p>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#list-of-ios","title":"List of IOs","text":"<ul> <li>digital-out-1-source</li> <li>digital-out-2-source</li> <li>digital-out-3-source</li> <li>digital-out-4-source</li> <li>digital-out-5-source</li> <li>digital-out-6-sink </li> <li>digital-out-7-sink </li> <li>digital-out-1-sink </li> <li>digital-out-2-sink </li> <li>digital-out-3-sink </li> <li>digital-out-4-sink </li> <li>digital-out-5-sink </li> <li>digital-out-6-source</li> <li>digital-out-7-source</li> <li>digital-out-1<ul> <li>deprecated with digital out source 1</li> </ul> </li> <li>digital-out-2<ul> <li>deprecated with digital out source 2</li> </ul> </li> <li>digital-out-3<ul> <li>deprecated with digital out source 3</li> </ul> </li> <li>digital-out-4<ul> <li>deprecated with digital out source 4</li> </ul> </li> <li>digital-out-5 / 4-20<ul> <li>deprecated with digital out source 5</li> </ul> </li> <li>digital-out-6<ul> <li>deprecated with digital out sink 6</li> </ul> </li> <li>digital-in-1 / sc</li> <li>digital-in-2 / sc</li> <li>digital-in-3 / sc</li> <li>digital-in-4 / sc</li> <li>digital-in-5 / sc</li> <li>digital-in-6</li> <li>digital-in-7</li> <li>digital-in-8</li> <li>digital-out-7<ul> <li>depricated with digital out sink 7</li> </ul> </li> <li>digital-out-8<ul> <li>depricated with digital out source 7</li> </ul> </li> <li>digital-out-en <ul> <li>Only CT and CT GL</li> </ul> </li> </ul>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#set-digital-out","title":"Set Digital out","text":"<pre><code>gpioset $(gpiofind digital-out-1)=1\n</code></pre>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#read-digital-in","title":"Read Digital in","text":"<pre><code>gpioget $(gpiofind digital-in-1)\n</code></pre>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#systems-without-gpiolib","title":"Systems without gpiolib","text":"<p>Note: This is for BSP releases 1.6/1.5 and older</p> <p>For digital I/O we use the standard linux framework.</p> <p>See Linux Kernel GPIO documentation</p> <p>Note: GPIO numbers can differ depending on the exact MX-4 platform. This is just an example.</p> <pre><code>root@mx4-t30-29009999:~# cat /sys/kernel/debug/gpio | grep -i digital\nGPIOs 344-383, spi/spi0.0, mx4_digitals:\n gpio-344 (digital-out-1       ) out lo\n gpio-345 (digital-out-2       ) out lo\n gpio-346 (digital-out-3       ) out lo\n gpio-347 (digital-out-4       ) out lo\n gpio-348 (digital-out-5 / 4-20) out lo\n gpio-349 (digital-out-6       ) out lo\n gpio-356 (digital-in-1 / sc   ) in  hi\n gpio-357 (digital-in-2 / sc   ) in  hi\n gpio-358 (digital-in-3 / sc   ) in  hi\n gpio-359 (digital-in-4 / sc   ) in  hi\n gpio-360 (digital-in-5 / sc   ) in  lo\n gpio-361 (digital-in-6        ) in  lo\n gpio-380 (digital-in-7        ) in  lo\n gpio-381 (digital-in-8        ) in  lo\n gpio-382 (digital-out-7       ) out lo\n gpio-383 (digital-out-8       ) out lo\n</code></pre> <p><code>sc digital out</code> are inputs indicating short for each output. If a short is detected it goes HIGH (1).</p>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#read-gpio-value","title":"Read GPIO value","text":"<pre><code># Example reading status from Digital-In-2. 0 = LOW, 1 = HIGH\nroot@mx4-gtt:~# cat /sys/class/gpio/gpio23/value\n0\n</code></pre>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#write-gpio-value","title":"Write GPIO value","text":"<pre><code># Example setting Digital-Out-1 high\nroot@mx4-gtt:~# echo 1 &gt; /sys/class/gpio/gpio238/value\n</code></pre>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#set-input-as-interrupt","title":"Set input as interrupt","text":"<p>Each digital input can trigger an event on a specific change. The changes are rising, falling or both.</p> <pre><code># Trigger an event on rising edge.\nroot@mx4-gtt:~# echo rising &gt; /sys/class/gpio/gpio23/edge\n</code></pre> <p>It is also possible to set falling or both to <code>edge</code> file.</p> <p>To listen for events you need to run <code>poll(2) &lt;http://man7.org/linux/man-pages/man2/poll.2.html&gt;</code> on the value file of that specific input. See <code>example application &lt;https://github.com/hostmobility/file-poll&gt;</code>.</p>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/digital_io/#example-app-listening-for-gpio-events","title":"Example app listening for GPIO events","text":"<pre><code>    #include &lt;stdio.h&gt;\n    #include &lt;fcntl.h&gt;\n    #include &lt;poll.h&gt;\n\n    int main (int argc, char *argv[])\n    {\n        char* path;\n        struct pollfd fds;\n        int ret;\n\n        if (argc != 2){\n            printf(\"The file descriptor to listen is needed as first (and only) parameter\\n\");\n            return 1;\n        }\n\n        path = argv[1];\n\n        fds.fd = open (path, O_RDONLY);\n\n        if (!fds.fd){\n            printf(\"Unable to open file descriptor\\n\");\n            return 1;\n        }\n\n        fds.events = POLLERR | POLLPRI;\n        fds.revents = 0;\n        printf (\"listening for events in:%s\\n\", path);\n\n        char val;\n\n        while (1){\n            read (fds.fd, 0, 0);\n            if (poll (&amp;fds, 1, -1) &gt; 0) {\n                printf (\"event received\\n\");\n            }\n        }\n\n        printf (\"Finish\\n\");\n        return 0;\n    }\n</code></pre>","tags":["Digital I/O","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/ethernet/","title":"Ethernet (MX-4)","text":"","tags":["Ethernet","MX-4"]},{"location":"interfaces/mx4/ethernet/#overview","title":"Overview","text":"<p>The products MX-4 T30, T20, T30 FR, CT, and CT GL have two RJ45 Ethernet ports with support for 10BASE-T and 100BASE-TX.</p>","tags":["Ethernet","MX-4"]},{"location":"interfaces/mx4/ethernet/#default-ip-addresses-and-interface-names","title":"Default IP addresses and interface names","text":"<p>The <code>eth0</code> and <code>eth1</code> Ethernet interfaces are configured to request their IP addresses using DHCP with a fallback to static addresses 192.168.1.200 for eth0 and 192.168.2.200 for eth1.</p>","tags":["Ethernet","MX-4"]},{"location":"interfaces/mx4/ethernet/#controlling-network-with-if-up","title":"Controlling network with if-up","text":"<p>Note: For BSP release 1.6/1.5 mainly but would still work on some BSP 2.x machines.</p> <p>See scripts in <code>/etc/network/if-up.d</code> for details.</p>","tags":["Ethernet","MX-4"]},{"location":"interfaces/mx4/flexray/","title":"Flexray (MX-4)","text":"","tags":["Flexray","T30 FR"]},{"location":"interfaces/mx4/flexray/#overview","title":"Overview","text":"<p>The T30 FR platform supports Flexray RX (receive) only.</p>","tags":["Flexray","T30 FR"]},{"location":"interfaces/mx4/flexray/#interface-name","title":"Interface name","text":"<p>Flexray appears as a network interface with the default name <code>eth2</code>.</p> <p>Example output (abridged) from <code>ifconfig</code>:</p> <pre><code>eth2 Link encap:Ethernet HWaddr 00:0E:C6:00:1A:63\ninet addr:10.42.42.1 Bcast:10.42.42.255 Mask:255.255.255.0\ninet6 addr: fe80::20e:c6ff:fe00:1a63/64 Scope:Link\nUP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1\nRX packets:5 errors:0 dropped:0 overruns:0 frame:0\nTX packets:44 errors:0 dropped:0 overruns:0 carrier:0\ncollisions:0 txqueuelen:1000\nRX bytes:330 (330.0 B) TX bytes:5268 (5.1 KiB)\n\nvflexray0 Link encap:UNSPEC HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00\nUP RUNNING NOARP MTU:296 Metric:1\nRX packets:0 errors:0 dropped:0 overruns:0 frame:0\nTX packets:0 errors:0 dropped:0 overruns:0 carrier:0\ncollisions:0 txqueuelen:0\nRX bytes:0 (0.0 B) TX bytes:0 (0.0 B)\n</code></pre>","tags":["Flexray","T30 FR"]},{"location":"interfaces/mx4/flexray/#tools","title":"Tools","text":"<p>For debug purposes the following tools are available:</p> <ul> <li>flexrayctl</li> <li>flexraydump</li> </ul> <p>They are built from sources in Host Mobility's private mx-flexray-utils repository.</p>","tags":["Flexray","T30 FR"]},{"location":"interfaces/mx4/flexray/#flexrayctl-usage","title":"flexrayctl usage","text":"<p>The following options are available:</p> <pre><code># flexrayctl\nflexrayctl v0.0.1\n\nCopyright (C) Host Mobility AB 2017\n\nUsage: flexrayctl &lt;-ipvh&gt; [value]\n-i --ipaddress. IP adress for FlexRay node. Defaults to 10.42.42.2\n-p --port. Destination TCP port on FlexRay node. Defaults to 29050\n-c --command. Command to send to the target node.\n-l --list. List available commands.\n-v --verbose\n-h --help\n</code></pre> <p>A typical example usage would be: <code>flexrayctl -i 10.42.42.2 -p 29050 -c statistics</code>.</p>","tags":["Flexray","T30 FR"]},{"location":"interfaces/mx4/flexray/#flexraydump-usage","title":"flexraydump usage","text":"<pre><code># flexraydump --help\nUsage: flexraydump [] [Options]\n\nflexraydump receives and dumps FLEXRAY messages.\n\nOptions:\n-v, --verbose be verbose\n-h, --help this help\n-c, --frame-count N exit after N frames received\n-f, --file FILE optional binary dump FILE\n--version print version information and exit\nUse kill -SIGUSR1 to get statistics.\nHint: -SIGUSR1 is usually -10 if the signal name is not available.\n</code></pre>","tags":["Flexray","T30 FR"]},{"location":"interfaces/mx4/leds/","title":"LEDs (MX-4)","text":"","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#overview","title":"Overview","text":"<p>On the MX-4 platform the LEDs are configured under <code>/opt/hm/pic_attributes/LED</code>. See pic_attributes for a complete list of attributes.</p> <p>All LEDs except power can be controlled from within Linux (see Pre configured LED behavior).</p>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#wifi-leds","title":"WiFi LEDs","text":"<p>The green WiFi LED (mx4-wifi) is set up to be lit on netdev. You can overwrite this by setting it to none or another trigger. Some platforms do not have the mx4-wifi-red and this led is free to be used as you like. <pre><code>echo none &gt; /sys/class/leds/mx4-wifi/trigger\n# On\necho 1 &gt;  /sys/class/leds/mx4-wifi/brightness\necho 1 &gt;  /sys/class/leds/mx4-wifi-red/brightness\n# Off\necho 0 &gt;  /sys/class/leds/mx4-wifi/brightness\necho 0 &gt;  /sys/class/leds/mx4-wifi-red/brightness\n</code></pre></p>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#script-to-set-leds","title":"Script to set LEDs","text":"<p>You can use the script <code>/opt/hm/set_led_flash.sh</code>. <pre><code>root@mx4-t30-29009999:~# /opt/hm/set_led_flash.sh\nUsage: /opt/hm/set_led_flash.sh &lt;index&gt; &lt;color&gt; &lt;freq&gt;\n\nindex = 2 - GSM LED\nindex = 3 - GPS LED\nindex = 4 - FUNC LED\nindex = 5 - BUZZER\n\ncolor = 0 - led off\ncolor = 1 - blink off/green\ncolor = 2 - blink off/orange\ncolor = 3 - blink green/orange\n\nfreq = 0 - no blink\nfreq = 1-255 - Flashing with frequency; freq * 100 milliseconds\n</code></pre></p>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#pre-configured-led-behavior","title":"Pre configured LED behavior","text":"","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#pwr","title":"PWR","text":"<p>The power LED is is green or flashing green yellow/orange if charging an internal battery. Depending on the level of charge it will change speed between the flashing green \u2194 yellow until it is lit green. If the unit does not have a battery it will continue to flash green \u2194 yellow.</p> <ul> <li>Solid green when running on supply voltage and battery charge state is above 60 %.</li> <li>Flashing green/yellow 1 Hz: Battery charge status is 41-60 % and charging.</li> <li>Flashing green/yellow 2 Hz: Battery charge status is 21-40 % and charging.</li> <li>Flashing green/yellow 4 Hz: Battery charge status is 0-20 % and charging.</li> <li>Solid yellow when running on battery and the battery is above 60 %</li> <li>Flashing yellow/off 1 Hz: Battery charge status is 41-60 %.</li> <li>Flashing yellow/off 2 Hz: Battery charge status is 21-40 %.</li> <li>Flashing yellow/off 4 Hz: Battery charge status is 0-20 %.</li> <li>Flashing green/off 1 Hz: The unit is in boot process</li> </ul>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#standby-state","title":"STANDBY STATE","text":"<ul> <li>One-shot PWR LED green/off (on 30 ms) approximately every 20 seconds.</li> </ul>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#error-state","title":"ERROR STATE","text":"<ul> <li>All LEDs (except WiFi) flashing green/off 5 Hz: The unit is in an error state. Failing to boot operating system. This is the default state when the unit is powered on.</li> </ul>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#firmware-upgrade","title":"FIRMWARE UPGRADE","text":"<p>A firmware upgrade can be followed by monitoring the LED behavior.</p> <ol> <li>All LEDs (except WiFi) flashing green/off 1 Hz: The unit is loading/running an image (\"hmupdate.img\") from USB driver or /boot. DO NOT REMOVE POWER!</li> <li>When hmupdate.img is finished the system will start up. This will be indicated by PWR LED Flashing green/off in 1 Hz.</li> <li>First boot after hmupdate.img is run we also update the coprocessor firmware. This is indicated by the following sequence:</li> <li>FUNC LED Solid green and other LEDs off. Entered coprocessor bootloader and will load an application to update coprocessor bootloader.</li> <li>FUNC LED solid green, GPS solid green and other LEDs off. Bootloader application is loaded and will update coprocessor bootloader.</li> <li>FUNC LED Solid green and other LEDs off. Entered coprocessor bootloader and will load the final application.</li> <li>LED behavior returns to normal operation.</li> </ol> <p>During the above steps the GSM LED will flash when we are sending data to the coprocessor for upgrade.</p> <ol> <li>Done!</li> </ol>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#set-leds-the-hard-way","title":"Set LEDs (the hard way)","text":"<p>LED flashing is configured by writing 4 bytes to the corresponding led_-file in Linux.</p> <p>The configuration of the 4 bytes:</p> MSB Second MSB Second LSB LSB Frequency Spare Flash config Current LED","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#frequency","title":"Frequency","text":"<p>Frequency is configured according to:</p> <ul> <li>0 - Flashing off</li> <li>1-255 - Flashing with frequency; value * 100 milliseconds</li> </ul> <p>If only no alternative frequency is configured the time for each state will be the same. If different times are wanted also use alternative frequency.</p>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#alternative-frequency","title":"Alternative frequency","text":"<ul> <li>0 - No alternative frequency.</li> <li>1-255 - Flashing with frequency; value * 100 milliseconds</li> </ul>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#flash-config","title":"Flash config","text":"<p>A bitmask configures which states that shall be included in the flashing sequence.</p> <ul> <li>Bit 0 - LED is off.</li> <li>Bit 1 - LED first state.</li> <li>Bit 2 - LED second state.</li> </ul>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#current-led","title":"Current LED","text":"<p>Sets which LED shall be lit upon reception of the configuration value. If only this value is set the LED will not change state until a new configuration is received, or the MX-4 is restarted. This value can also be used to configure oneshot flashing.</p>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#oneshot","title":"Oneshot","text":"<p>Oneshot flashing is configured by only configuring the wanted finishing state in the flash config. In current LED the wanted starting state is configured. In frequency the wanted time for the oneshot is configured.</p>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#example-of-configuration","title":"Example of configuration","text":"","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#flashing-pattern-calculation","title":"Flashing pattern calculation","text":"<ul> <li>Frequency Calculation:</li> <li> <p>Byte 3, frequency byte: 1 second / 100 milliseconds = 10.</p> </li> <li> <p>Unused Byte:</p> </li> <li> <p>Byte 2: Not used, set to 0.</p> </li> <li> <p>Bits in Byte 1:</p> </li> <li>Bit 0 and bit 1 used: ( (1 &lt;&lt; 1) | (1 &lt;&lt; 0) = 3 ).</li> </ul>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#resultant-values","title":"Resultant values","text":"Byte 3 Byte 2 Byte 1 Byte 0 10 0 3 0","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#concatenating-bytes","title":"Concatenating bytes","text":"<ul> <li> <p>Full Value Calculation:</p> <ul> <li>10 &lt;&lt; (8 * 3) | ((1 &lt;&lt; 1) | (1 &lt;&lt; 0)) | (8 * 1) = 167772171</li> </ul> </li> <li> <p>Adjustment for Initial State:</p> <ul> <li>To start the flashing at state 0: ( 167772171 )</li> <li>To start the flashing at state 1: Add 1 to the value in Byte 0.</li> </ul> </li> </ul>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#flashing-between-state-1-and-state-2","title":"Flashing between State 1 and State 2","text":"<p>State 1 lit for 2 seconds and state 2 lit for 500 milliseconds.</p> <ul> <li>Frequency calculations:<ul> <li>Byte 3, frequency byte for State 1: ( 500ms/ 100ms = 5 )</li> <li>Byte 2, frequency byte for State 2: ( 2 seconds /100ms = 20 )</li> <li>Byte 1, bits 1 and 2 used: ( (1 &lt;&lt; 2) | (1 &lt;&lt; 1) = 6 )</li> <li>Byte 0, initial state configured as State 2: Set to 2 in this case.</li> </ul> </li> </ul>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#resultant-configuration","title":"Resultant configuration","text":"Byte 3 Byte 2 Byte 1 Byte 0 5 20 6 2","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#calculation","title":"Calculation","text":"<p>5 &lt;&lt; (8 * 3) | 20 &lt;&lt; (8 * 2) | 6 &lt;&lt; 8 | 2 = 85198338</p>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/leds/#one-shot-flash-configuration","title":"One-shot flash configuration","text":"<p>To configure a one-shot flash, an initial state and a finishing state are set with the time for the initial state configured in Byte 3.</p> <p>The initial state is specified in Byte 0, and the finishing state is specified in Byte 1.</p> <p>This means that in Byte 1, only one state needs to be defined, and that state will persist until a new value is sent to the LED.</p>","tags":["LED","C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/lin/","title":"LIN (MX-4)","text":"","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#deactivate-lin","title":"Deactivate LIN","text":"<p>Local Interconnect Network (LIN) is enabled by default but you can disable it by writing a zero to <code>LIN enabled</code> and/or <code>LIN2 enabled</code>. See Digital IO on how use the Linux GPIO API.</p>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#how-to-control-lin-via-serial-interface","title":"How to control LIN via serial interface","text":"<p>The LIN interface in the coprocessor can be accessed via the serial console with baud rate 115200.</p> <ul> <li>T30 and T30 FR<ul> <li>LIN 1: /dev/ttyHS1</li> <li>LIN 2: /dev/ttyHS3</li> </ul> </li> <li>T20<ul> <li>LIN 1: /dev/ttyHS1</li> <li>LIN 2: /dev/ttyHS3</li> </ul> </li> <li>V61<ul> <li>LIN 1: /dev/ttyLP2</li> <li>LIN 2: /dev/ttyLP1 (CRTSCTS must NOT be enabled or the communication will lock)</li> </ul> </li> </ul> <p>The LIN interface is controled via a set of predefined frames, mostly used to alter the LIN schedule table.</p>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#format","title":"Format","text":"<p>All frames sent to the coprocessor is on the format</p> <pre><code>start of transmission | message length | message type | data | checksum\n</code></pre> <ul> <li>Start of transmission (4 bytes)</li> </ul> <p>This is a byte sequence used to indicate the start of a frame. It consists of the 4-byte sequence <code>0x7e 0x7e 0x7e 0xa7</code>.</p> <ul> <li>Message length (1 byte)</li> </ul> <p>The length of <code>message type</code> (1 byte) + <code>data</code> (variable) + <code>checksum</code> (1 byte). The byte for message length is not included in the message length.</p> <ul> <li>Message type (1 byte)</li> </ul> <p>Indicates the type of operation requested. Values start at 1 and are sequentially increased.</p> <ol> <li> <p>Received response. The message contains data received from the LIN slave unit. Direction from coprocessor to Linux.</p> </li> <li> <p>Set schedule. Set up the LIN schedule.</p> </li> <li> <p>Set frame. Set up a LIN frame.</p> </li> <li> <p>Set item. Set up a LIN schedule item.</p> </li> <li> <p>Set baudrate. Set up LIN baud rate.</p> </li> <li> <p>Set master. Set up master/listen mode.</p> </li> <li> <p>Listen message</p> </li> <li> <p>Overflow messages</p> </li> </ol> <p>Defined in lin_general.h as: <pre><code>#define MSG_RECV_RESPONSE 1\n#define MSG_SET_SCHEDULE 2\n#define MSG_SET_FRAME 3\n#define MSG_SET_ITEM 4\n#define MSG_SET_BAUDRATE 5\n#define MSG_SET_MASTER 6\n#define MSG_LISTEN_MSG 7\n</code></pre></p> <p>data (variable): Bytes of data that each message type may contain.</p> <p>checksum: A simple XOR checksum of all bytes in the message including message length.</p>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#message-types","title":"Message types","text":"","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#received-response","title":"Received response","text":"<pre><code>If a frame that requests a response from a slave unit is configured to\nforward the response, the response is forwarded from coprocessor to Linux in a\nframe of this format:\nmessage start | length of message | message type 1 | data (revc status 1\nbyte, frame id 1 byte, response length 1 byte, response data) | checksum\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#set-schedule","title":"Set schedule","text":"<pre><code>This frame sets the start, end and current item to handle and\nenables/disables the schedule. Start, end and current can be any value\nfrom 0 to 255. Start cannot be after end. Current must be within start and end interval.\nEnabled i any value greater than 0.\nFormat:\nmessage start | length of message | message type 2 | data (start slot 1\nbyte, end slot 1 byte, current slot 1 byte, enabled 1 byte) | checksum\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#set-frame","title":"Set frame","text":"<pre><code>This frame type is used to set up a specific LIN frame.\nFormat:\nmessage start | length of message | message type 3 | data (LIN id 1 byte,\nframe options 1 byte, frame flags 1 byte, data length 1 byte, data\n0-LIN_MAX_DATABYTES) | checksum\n\nLIN id can be any valid LIN id. from 0 to 64.\nframe options:\n    Specifies if frame is send/receive. Bit 0 -- unset specifies frame is\n    send; bit 1 -- if response shall be forwarded; bit 3 - if frame is\n    one-shot.\n\nframe flags:\n    Specifies the version of the LIN protocol to be used. Bit 0 -- unset\n    specifies that protocol 1 is used for this frame.\n\ndata length:\n    Length of data to be sent or received. For receive frames, the expected\n    data length must be set.\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#set-item","title":"Set item","text":"<pre><code>This frame type is used to set up an item in the schedule.\nIt specifies a position in the schedule where a given LIN id shall be\nhandled (multiple items with the same id can exist), how many LIN ticks\nthe item shall use and if the item is enabled.\nFormat:\nmessage start | length of message | message type 4 | data (frame number 1\nbyte, LIN id 1 byte, LIN ticks 1 byte, enabled 1 byte) | checksum\n\nframe number:\n    Which slot in the schedule. Value 0 -- LIN_SCHEDULE_TABLE_ENTRIES (256)\n\nLIN id:\n    Any valid LIN id.\n\nLIN ticks:\n    How much time the item occupies. One tick is 10ms long.\n\nEnable:\n    Any value &gt;0 to enable.\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#set-baudrate","title":"Set baudrate","text":"<pre><code>The defualt baud rate of this LIN implementation is 9600. The LIN\nspecification states that the baud rates 2400, 9600 and 19200 are supported.\nAll of the these rates are supported in addition to 4800 and 10400.\nFormat:\nmessage start | length of message | message type 5 | data (baudrate\nenumerator 1 byte) | checksum\n\nbaudrate enumeration:\n    2400 - 1\n    4800 - 2\n    9600 - 3\n    10400 - 4\n    19200 - 5\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#set-master","title":"Set master","text":"<pre><code>Configures LIN bus for either acting as master or just listening for LIN\ndata on the bus. The LIN bus is configured as master by default.\nWhen configured as listener all valid messages will be forwarded.\nFormat:\nmessage start | length of message | message type 6 | data (master/listen 1\nbyte) | checksum\n\nmaster - 1\nlisten - 0\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#listen-message","title":"Listen message","text":"<pre><code>When the LIN bus is in listen mode messages will be sent to Linux user space when data are found on the bus.\nFormat:\nmessage start | length of message | message type 7 | status| data | checksum\n\nstatus:\nDefined statuses:\n</code></pre> <p><pre><code>#define STATUS_OK 0\n#define STATUS_RECV_ERROR 1\n#define STATUS_RECV_NO_DATA 2\n#define STATUS_MASTER_REQUEST 3\n</code></pre>     STATUS_RECV_ERROR indicates that data has been read on the bus, but no valid LIN frame were found. Just all the data is returned for debugging purposes.     STATUS_RECV_NO_DATA activity on the bus but no data found.     STATUS_MASTER_REQUEST message with only one byte data found. This is a     master request.</p> <pre><code>data:\nThe LIN frame.\nid | data | LIN checksum\nid: With parity omit bit 7 and 6 for id without parity\nLIN checksum: If it is a valid frame the checksum is here\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#overflow-message","title":"Overflow message","text":"<pre><code>If an overflow occurs at any of the LIN buses, a report of the bus ID\nand the overflow count are sent to the Linux system.\nFormat:\nmessage start | length of message | message type (8-11) | count\nEach typ of overflow has its own message type:\n</code></pre> <pre><code>#define MSG_LIN_RX_OF 8\n#define MSG_LIN_TX_OF 9\n#define MSG_TX_OF 10\n#define MSG_RX_OF 11\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#status-message","title":"Status message","text":"<pre><code>All commands sent to the coprocessor, except listen which is no command, will return a status message.\nFormat:\nmessage start | status\nstatus: One byte status, 0 status ok\n</code></pre> <pre><code>#define ERROR_ARGUMENT_COUNT 1\n#define ERROR_START_NOT_VALID 2\n#define ERROR_STOP_NOT_VALID 3\n#define ERROR_START_AFTER_STOP 4\n#define ERROR_SLOT_NOT_VALID 5\n#define ERROR_NOT_VALID_ENTRY 6\n#define ERROR_INVALID_LIN_ID 7\n#define ERROR_TO_LONG_FRAME 8\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#sample-application-for-sending-frames-and-receiving-responses-in-linux","title":"Sample application for sending frames and receiving responses in Linux","text":"<pre><code>#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;termios.h&gt;\n\n/* The application reads from arguments which kind of operation to perform and\n * all data associated with that operation. */\n\nint main(int argc, char *argv[]) {\n    int fd;\n    int res;\n    int fflags;\n    char i;\n    char msg_len;\n    char listen;\n    struct termios tio;\n    char buff[255];\n\n    fd = open(\"/dev/ttyHS2\", O_RDWR | O_NOCTTY);\n    if (fd &lt; 0) {\n        fprintf(stderr, \"Error open tty\\n\");\n        return -1;\n    }\n\n    tio.c_cflag = B115200 | CRTSCTS | CS8 | CLOCAL | CREAD;\n    tio.c_iflag = IGNPAR;\n    tio.c_oflag = 0;\n    tio.c_lflag = 0;\n    tio.c_cc[VTIME] = 0;\n\n    tcflush(fd, TCIFLUSH);\n    tcsetattr(fd, TCSANOW, &amp;tio);\n\n    buff[0] = 0x7E;\n    buff[1] = 0x7E;\n    buff[2] = 0x7E;\n    buff[3] = 0xA7;\n\n    listen = !strcmp(argv[1], \"listen\");\n\n    if (!listen) {\n        if (!strcmp(argv[1], \"schedule\")) {\n            buff[5] = 2;\n        }\n        if (!strcmp(argv[1], \"frame\")) {\n            buff[5] = 3;\n        }\n        if (!strcmp(argv[1], \"item\")) {\n            buff[5] = 4;\n        }\n        if (!strcmp(argv[1], \"baudrate\")) {\n            buff[5] = 5;\n        }\n        if (!strcmp(argv[1], \"master\")) {\n            buff[5] = 6;\n        }\n\n        if (!buff[5]) {\n            fprintf(stderr, \"No valid command.\\n\");\n            return 1;\n        }\n\n        for (i = 2; i &lt; argc; i++) {\n            sscanf(argv[i], \"%d\", &amp;buff[4 + i]);\n        }\n\n        /* Checksum */\n        msg_len = argc; /* Length of message is length of data + 1 for checksum */\n        buff[4] = msg_len;\n        for (i = 0; i &lt; buff[4]; i++) {\n            buff[4 + msg_len] ^= buff[4 + i];\n        }\n\n        write(fd, buff, 4 + 1 + msg_len); /* Bytes to send are: start of message bytes + length + (type, data, chksum) */\n\n        sleep(1);\n    }\n\n    do {\n        fflags = fcntl(fd, F_GETFL, 0);\n        if (fflags &lt; 0) {\n            fprintf(stderr, \"Could not get fd flags\\n\");\n            return -1;\n        }\n        fcntl(fd, F_SETFL, fflags | O_NONBLOCK);\n\n        res = read(fd, buff, 255);\n        if (res &gt; 0) {\n            for (i = 0; i &lt; res; i++) {\n                printf(\"%x, \", buff[i]);\n            }\n            printf(\"\\n\");\n        }\n        usleep(10000);\n    } while (listen);\n\n    return 0;\n}\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/lin/#example-of-usage-of-application","title":"Example of usage of application","text":"<pre><code># Setup frame 10 to send data to slaves using protocol 1 with 3 data bytes (1,\n# 2, 3)\n./lin_send frame 10 0 0 3 1 2 3\n# Setup frame 16 to request a response from slaves using protocol 1 and expect\n# 4 bytes long answer.\n./lin_send frame 16 3 0 4\n# Schedule created frames in slot 0 and 1, both using 60 ticks each and enable\n# both.\n./lin_send item 0 10 60 1\n./lin_send item 1 16 60 1\n# Enable the schedule to use items 0-1 start with item 0.\n./lin_send schedule 0 1 0 1\n# Start to listen for forwarded responses.\n./lin_send listen\n</code></pre>","tags":["LIN","MX-4","T20","T30","T30 FR","V61"]},{"location":"interfaces/mx4/modem/","title":"MX4 Modem","text":"","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#overview","title":"Overview","text":"<p>The Mx4 has a modem from Gemalto pls8-e Europe or pls8-us USA.</p> <p>Note: CT GL has Quectel called EG25-G with a GPS receiver so see C61 for more information.</p>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#startingenabling","title":"Starting/Enabling","text":"<p>Note:  The modem is turned off by default. <pre><code>echo 1 &gt; /opt/hm/pic_attributes/ctrl_modem_on\n</code></pre> * The modem takes about 10 seconds to start and register itself with the kernel. And thakes up to one minutes before it is registered in the linux usb list.</p> <ul> <li>Check USB TTY device to see if it has shown up.</li> </ul> <pre><code>find /dev -name \"ttyACM*\"\n</code></pre> <pre><code>/dev/ttyACM4\n/dev/ttyACM3\n/dev/ttyACM2\n/dev/ttyACM1\n/dev/ttyACM0\n</code></pre>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#status-on","title":"Status ON","text":"<p>Example showing a modem start and running.</p> <pre><code>/opt/hm/modem_status.sh\n******* MODEM STATUS DUMP *******\n\nctrl_modem_status: 1342177491\n\nModem state     ON\nCtrl state:     ON\n\nSLED:           0\nSLED Mon:       ON\n\nModem EMG/reset:        0\n\nCurrent state:  on\nPrev state:     turn_on_timeout\n\nPrev RC:        unexpected_shutdown\n\nStart cnt:      0\nReset cnt:      0\n\nEMG used:       NO\n</code></pre>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#shutdownreset","title":"Shutdown/Reset","text":"<p>To disable it, set ctrl_modem_on to 0</p> <p>To reset it use ctrl_modem_emg (reset signal) and set it to 0 then back to 1 after a second.</p> <pre><code>echo 0 &gt; /opt/hm/pic_attributes/ctrl_modem_on\n# or (not to be used regulary because it could effect the memory)\necho 0 &gt; /opt/hm/pic_attributes/ctrl_modem_emg\n</code></pre>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#production-settings","title":"Production settings","text":"","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#gps","title":"GPS","text":"","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#use-wvdial-to-get-a-broadband-connection","title":"Use WvDial to get a broadband connection","text":"","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#linux-31","title":"Linux 3.1","text":"<p>Note: for bsp release 1.6(1.5) and older</p>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#modem","title":"Modem","text":"<p>The MX-4 board is equipped with a 3G modem. It is not started by default when the unit is powered one but has to be explicitly turned on with the following command:</p> <pre><code> root@mx4-gtt:~# echo 1 &gt; /opt/hm/pic_attributes/ctrl_modem_on\n</code></pre> <p>if PH8 is powered on, following ports will be created * /dev/ttyUSB0 --&gt; Reserved port (not usable) * /dev/ttyUSB1 --&gt; NMEA port * /dev/ttyUSB2 --&gt; Application port * /dev/ttyUSB3 --&gt; Modem port * /dev/ttyUSB4 --&gt; WWAN port (not usable, Windows only)</p> <p>You should get an output similar to the following:</p> <pre><code> root@mx4-gtt:~# dmesg | tail\n [ 5034.642693] option 3-1:1.0: GSM modem (1-port) converter detected\n [ 5034.644177] usb 3-1: GSM modem (1-port) converter now attached to ttyUSB0\n [ 5034.646047] option 3-1:1.1: GSM modem (1-port) converter detected\n [ 5034.647351] usb 3-1: GSM modem (1-port) converter now attached to ttyUSB1\n [ 5034.649150] option 3-1:1.2: GSM modem (1-port) converter detected\n [ 5034.650337] usb 3-1: GSM modem (1-port) converter now attached to ttyUSB2\n [ 5034.652141] option 3-1:1.3: GSM modem (1-port) converter detected\n [ 5034.653759] usb 3-1: GSM modem (1-port) converter now attached to ttyUSB3\n [ 5034.655688] option 3-1:1.4: GSM modem (1-port) converter detected\n [ 5034.657306] usb 3-1: GSM modem (1-port) converter now attached to ttyUSB4\n</code></pre> <p>The modem can also be turned off with this command.</p> <pre><code>root@mx4-gtt:~# echo 0 &gt; /opt/hm/pic_attributes/ctrl_modem_on\n</code></pre>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#creating-a-ppp-connection","title":"Creating a PPP connection","text":"<p>First off we need to install <code>pppd</code> if it does not exist on target.</p> <pre><code>opkg update\nopkg install ppp\n</code></pre> <p>File structure needed for ppp to work: <pre><code>/etc/ppp\n\u251c\u2500\u2500 chap-secrets\n\u251c\u2500\u2500 ip-down.d\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 # Custom down script\n\u251c\u2500\u2500 ip-up.d\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 # Custom up script\n\u251c\u2500\u2500 operators\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 apn\n\u251c\u2500\u2500 pap-secrets\n\u251c\u2500\u2500 peers\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 provider\n\u251c\u2500\u2500 pppd_connect-chat\n\u2514\u2500\u2500 pppd_disconnect-chat\n</code></pre></p> <p>Contest of above files: /etc/ppp/operators/apn <pre><code>AT+CGDCONT=1,\"IP\",\"openroamer.com\",\"\",0,0\n</code></pre> Replace \"openroamer.com\" with your operator APN</p> <p>/etc/ppp/peers/provider <pre><code># File: /etc/ppp/options\n# We set defualt remote ip adress.\n#:192.168.255.1\n#Some GPRS phones don't reply to LCP echo's\nlcp-echo-failure 0\nlcp-echo-interval 0\n# Keep pppd attached to the terminal:\n# Comment this to get daemon mode pppd\n#nodetach\n# Debug info from pppd:\n# Comment this off, if you don't need more info\ndebug\npersist\nholdoff 5\nmaxfail 0\n# Show password in debug messages\nshow-password\n# Connect script:\n# scripts to initialize the GPRS modem and start the connection,\n#connect /etc/pppd_connect-chat\nconnect '/usr/sbin/chat -v -f /etc/ppp/pppd_connect-chat'\n# Disconnect script:\n# AT commands used to 'hangup' the GPRS connection.\n#disconnect /etc/pppd_disconnect-chat\ndisconnect '/usr/sbin/chat -v -f /etc/ppp/pppd_disconnect-chat'\n# Serial device to which the GPRS phone is connected:\n/dev/ttyUSB3\n# Serial port line speed\n115200 # fast enough\n# Hardware flow control:\n# Use hardware flow control with cable, Bluetooth and USB but not with IrDA.\ncrtscts # serial cable, Bluetooth and USB, on some occations with IrDA too\n# Ignore carrier detect signal from the modem:\nlocal\n# IP addresses:\n# - accept peers idea of our local address and set address peer as 10.0.0.1\n# (any address would do, since IPCP gives 0.0.0.0 to it)\n# - if you use the 10. network at home or something and pppd rejects it,\n# change the address to something else\n#0.0.0.0:0.0.0.0\n# pppd must not propose any IP address to the peer!\nnoipdefault\n# Accept peers idea of our local address\nipcp-accept-local\nipcp-accept-remote\n# Add the ppp interface as default route to the IP routing table\ndefaultroute\n# DNS servers from the phone:\n# some phones support this, some don't.\nusepeerdns\n# ppp compression:\n# ppp compression may be used between the phone and the pppd, but the\n# serial connection is usually not the bottleneck in GPRS, so the\n# compression is useless (and with some phones need to disabled before\n# the LCP negotiations succeed).\nnovj\nnobsdcomp\nnovjccomp\nnopcomp\nnoaccomp\n\n# The phone is not required to authenticate:\nnoauth\n\n# Username and password:\n# If username and password are required by the APN, put here the username\n# and put the username-password combination to the secrets file:\n# /etc/ppp/pap-secrets for PAP and /etc/ppp/chap-secrets for CHAP\n# authentication. See pppd man pages for details.\n#user mirza\n#password 123456\n\nmru 1500\nmtu 1400\n</code></pre> /etc/ppp/pppd_connect-chat <pre><code>#!/bin/sh\n#\n# File: /etc/ppp/pppd_connect-chat\n TIMEOUT 5\n ECHO ON\n ABORT '\\nBUSY\\r'\n ABORT '\\nERROR\\r'\n ABORT '\\nNO ANSWER\\r'\n ABORT '\\nNO CARRIER\\r'\n ABORT '\\nNO DIALTONE\\r'\n ABORT '\\nRINGING\\r\\n\\r\\nRINGING\\r'\n '' \\rATZ\n TIMEOUT 12\n SAY \"Press CTRL-C to close the connection at any stage!\"\n SAY \"\\ndefining PDP context...\\n\"\n OK ATH\n OK ATE1\n OK-AT-OK @/etc/ppp/operators/apn\n OK ATD*99#\n TIMEOUT 22\n SAY \"\\nwaiting for connect...\\n\"\n CONNECT \"\"\n SAY \"\\nConnected.\"\n SAY \"\\nIf the following ppp negotiations fail,\\n\"\n SAY \"try restarting the phone.\\n\"\n</code></pre></p> <p>/etc/ppp/pppd_disconnect-chat <pre><code>at\nABORT \"BUSY\"\nABORT \"ERROR\"\nABORT \"NO DIALTONE\"\nSAY \"n\\Sending break to the modem\\n\"\n\"\" \"\\K\"\n\"\" \"\\K\"\n\"\" \"\\K\"\n\"\" \"+++ATH\"\n\"\" \"+++ATH\"\n\"\" \"+++ATH\"\nSAY \"\\nModem context detached\\n\"\n</code></pre></p> <p><code>/etc/ppp/pap-secrets</code> and <code>/etc/ppp/chap-secrets</code> are empty and do not really need to exist unless you need to use one of these methods to auth with network provider.</p> <p>When you have the above structure correctly setup you can then start and stop pppd connections with <code>pon</code> and <code>poff</code> commands.</p> <p>One tip is to start up syslogd and run <code>tail -f /var/log/messages &amp;</code>, this way you will get some output during the connection process and makes it easier to debug in case of connection errors.</p> <p>Here is an example.</p> <pre><code>root@mx4-gtt:~# syslogd\nroot@mx4-gtt:~# tail -f /var/log/messages &amp;\nroot@mx4-gtt:/etc/ppp/operators# pon\nroot@mx4-gtt:/etc/ppp/operators# Dec 20 10:35:27 mx4-gtt daemon.notice pppd[564]: pppd\n2.4.5 started by root, uid 0\nDec 20 10:35:27 mx4-gtt local2.info chat[565]: timeout set to 5 seconds\nDec 20 10:35:27 mx4-gtt local2.info chat[565]: abort on (\\nBUSY\\r)\nDec 20 10:35:27 mx4-gtt local2.info chat[565]: abort on (\\nERROR\\r)\nDec 20 10:35:27 mx4-gtt local2.info chat[565]: abort on (\\nNO ANSWER\\r)\nDec 20 10:35:27 mx4-gtt local2.info chat[565]: abort on (\\nNO CARRIER\\r)\nDec 20 10:35:27 mx4-gtt local2.info chat[565]: abort on (\\nNO DIALTONE\\r)\nDec 20 10:35:27 mx4-gtt local2.info chat[565]: abort on (\\nRINGING\\r\\n\\r\\nRINGING\\r)\nDec 20 10:35:27 mx4-gtt local2.info chat[565]: send (^MATZ^M)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: timeout set to 12 seconds\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: expect (OK)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: ATZ^M^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: OK\nDec 20 10:35:28 mx4-gtt local2.info chat[565]:  -- got it\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: send (ATH^M)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: expect (OK)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: ^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: ATH^M^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: OK\nDec 20 10:35:28 mx4-gtt local2.info chat[565]:  -- got it\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: send (ATE1^M)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: expect (OK)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: ^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: ATE1^M^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: OK\nDec 20 10:35:28 mx4-gtt local2.info chat[565]:  -- got it\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: send (AT+CGDCONT=1,\"IP\",\"internet.tele2.\nse\",\"\",0,0^M)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: expect (OK)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: ^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: AT+CGDCONT=1,\"IP\",\"internet.tele2.se\",\"\"\n,0,0^M^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: OK\nDec 20 10:35:28 mx4-gtt local2.info chat[565]:  -- got it\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: send (ATD*99#^M)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: timeout set to 22 seconds\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: expect (CONNECT)\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: ^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: ATD*99#^M^M\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: CONNECT\nDec 20 10:35:28 mx4-gtt local2.info chat[565]:  -- got it\nDec 20 10:35:28 mx4-gtt local2.info chat[565]: send (^M)\nDec 20 10:35:28 mx4-gtt daemon.debug pppd[564]: Script /usr/sbin/chat -v -f /etc/ppp/pp\npd_connect-chat finished (pid 565), status = 0x0\nDec 20 10:35:28 mx4-gtt daemon.info pppd[564]: Serial connection established.\nDec 20 10:35:28 mx4-gtt daemon.debug pppd[564]: using channel 2\nDec 20 10:35:28 mx4-gtt daemon.info pppd[564]: Using interface ppp0\nDec 20 10:35:28 mx4-gtt daemon.notice pppd[564]: Connect: ppp0 &lt;--&gt; /dev/ttyUSB3\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: sent [LCP ConfReq id=0x1 &lt;asyncmap 0x0&gt;\n &lt;magic 0x6d4845a0&gt;]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: rcvd [LCP ConfReq id=0x0 &lt;asyncmap 0x0&gt;\n &lt;auth chap MD5&gt; &lt;magic 0xc558301e&gt; &lt;pcomp&gt; &lt;accomp&gt;]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: No auth is possible\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: sent [LCP ConfRej id=0x0 &lt;auth chap MD5\n&gt; &lt;pcomp&gt; &lt;accomp&gt;]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: rcvd [LCP ConfAck id=0x1 &lt;asyncmap 0x0&gt;\n &lt;magic 0x6d4845a0&gt;]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: rcvd [LCP ConfReq id=0x1 &lt;asyncmap 0x0&gt;\n &lt;magic 0xc558301e&gt;]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: sent [LCP ConfAck id=0x1 &lt;asyncmap 0x0&gt;\n &lt;magic 0xc558301e&gt;]\nDec 20 10:35:29 mx4-gtt daemon.warn pppd[564]: kernel does not support PPP filtering\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: sent [CCP ConfReq id=0x1 &lt;deflate 15&gt; &lt;deflate(old#) 15&gt;]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: sent [IPCP ConfReq id=0x1 &lt;addr 0.0.0.0\n&gt; &lt;ms-dns1 0.0.0.0&gt; &lt;ms-dns2 0.0.0.0&gt;]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: rcvd [LCP DiscReq id=0x2 magic=0xc558301e]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: rcvd [LCP ProtRej id=0x3 80 fd 01 01 00\n 0c 1a 04 78 00 18 04 78 00]\nDec 20 10:35:29 mx4-gtt daemon.debug pppd[564]: Protocol-Reject for 'Compression Contro\nl Protocol' (0x80fd) received\nDec 20 10:35:30 mx4-gtt daemon.debug pppd[564]: rcvd [IPCP ConfNak id=0x1]\nDec 20 10:35:30 mx4-gtt daemon.debug pppd[564]: sent [IPCP ConfReq id=0x2 &lt;addr 0.0.0.0&gt; &lt;ms-dns1 0.0.0.0&gt; &lt;ms-dns2 0.0.0.0&gt;]\nDec 20 10:35:31 mx4-gtt daemon.debug pppd[564]: rcvd [IPCP ConfNak id=0x2]\nDec 20 10:35:31 mx4-gtt daemon.debug pppd[564]: sent [IPCP ConfReq id=0x3 &lt;addr 0.0.0.0&gt; &lt;ms-dns1 0.0.0.0&gt; &lt;ms-dns2 0.0.0.0&gt;]\nDec 20 10:35:32 mx4-gtt daemon.debug pppd[564]: rcvd [IPCP ConfNak id=0x3]\nDec 20 10:35:32 mx4-gtt daemon.debug pppd[564]: sent [IPCP ConfReq id=0x4 &lt;addr 0.0.0.0&gt; &lt;ms-dns1 0.0.0.0&gt; &lt;ms-dns2 0.0.0.0&gt;]\nDec 20 10:35:33 mx4-gtt daemon.debug pppd[564]: rcvd [IPCP ConfNak id=0x4]\nDec 20 10:35:33 mx4-gtt daemon.debug pppd[564]: sent [IPCP ConfReq id=0x5 &lt;addr 0.0.0.0&gt; &lt;ms-dns1 0.0.0.0&gt; &lt;ms-dns2 0.0.0.0&gt;]\nDec 20 10:35:34 mx4-gtt daemon.debug pppd[564]: rcvd [IPCP ConfReq id=0x0]\nDec 20 10:35:34 mx4-gtt daemon.debug pppd[564]: sent [IPCP ConfNak id=0x0 &lt;addr 0.0.0.0&gt;]\nDec 20 10:35:34 mx4-gtt daemon.debug pppd[564]: rcvd [IPCP ConfNak id=0x5 &lt;addr 10.49.1\n19.16&gt; &lt;ms-dns1 130.244.127.161&gt; &lt;ms-dns2 130.244.127.169&gt;]\nDec 20 10:35:34 mx4-gtt daemon.debug pppd[564]: sent [IPCP ConfReq id=0x6 &lt;addr 10.49.1\n19.16&gt; &lt;ms-dns1 130.244.127.161&gt; &lt;ms-dns2 130.244.127.169&gt;]\nDec 20 10:35:34 mx4-gtt daemon.debug pppd[564]: rcvd [IPCP ConfReq id=0x1]\nDec 20 10:35:34 mx4-gtt daemon.debug pppd[564]: sent [IPCP ConfAck id=0x1]\nDec 20 10:35:34 mx4-gtt daemon.debug pppd[564]: rcvd [IPCP ConfAck id=0x6 &lt;addr 10.49.1\n19.16&gt; &lt;ms-dns1 130.244.127.161&gt; &lt;ms-dns2 130.244.127.169&gt;]\nDec 20 10:35:34 mx4-gtt daemon.warn pppd[564]: Could not determine remote IP address: d\nefaulting to 10.64.64.64\nDec 20 10:35:34 mx4-gtt daemon.notice pppd[564]: local  IP address 10.49.119.16\nDec 20 10:35:34 mx4-gtt daemon.notice pppd[564]: remote IP address 10.64.64.64\nDec 20 10:35:34 mx4-gtt daemon.notice pppd[564]: primary   DNS address 130.244.127.161\nDec 20 10:35:34 mx4-gtt daemon.notice pppd[564]: secondary DNS address 130.244.127.169\nDec 20 10:35:34 mx4-gtt daemon.debug pppd[564]: Script /etc/ppp/ip-up started (pid 569)\n\nroot@mx4-gtt:/etc/ppp/operators# Dec 20 10:35:43 mx4-gtt daemon.err ntpdate[576]: no se\nrver suitable for synchronization found\nDec 20 10:35:43 mx4-gtt daemon.debug pppd[564]: Script /etc/ppp/ip-up finished (pid 569\n), status = 0x1\n</code></pre> <p>You can now also see with <code>ifconfig</code> that you got a ppp connection</p> <pre><code>root@mx4-gtt:~# ifconfig ppp0\nppp0      Link encap:Point-to-Point Protocol\n          inet addr:10.49.119.16  P-t-P:10.64.64.64  Mask:255.255.255.255\n          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1400  Metric:1\n          RX packets:10 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:27 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:3\n          RX bytes:662 (662.0 B)  TX bytes:1490 (1.4 KiB)\n</code></pre>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#gps_1","title":"GPS","text":"<p>The GPS chip is integrated in the modem module. Default it is turned off. To turn on the GPS chip send following AT command to the application port. This is not a persistent setting so one has to enable GPS each time modem restarts if GPS data is desired.</p> <pre><code>root@mx4-gtt:~# printf 'at^sgpsc=\"Engine\",\"1\"\\r' &gt; /dev/ttyUSB2\n</code></pre> <p>The NMEA output can be read out of /dev/ttyUSB1</p> <pre><code>root@mx4-gtt:~# cat /dev/ttyUSB1\n$GPGSV,4,1,16,24,,,,05,,,,18,,,,22,,,*71\n$GPGSV,4,2,16,04,,,,11,,,,17,,,,03,,,*79\n$GPGSV,4,3,16,12,,,,30,,,,01,,,,23,,,*79\n$GPGSV,4,4,16,15,,,,27,,,,07,,,,31,,,*7A\n$GPGGA,,,,,,0,,,,,,,,*66\n$GPVTG,,T,,M,,N,,K,N*2C\n$GPRMC,,V,,,,,,,,,,N*53\n$GPGSA,A,1,,,,,,,,,,,,,,,*1E\n</code></pre>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#gps-for-some-other-versions","title":"GPS for some other versions","text":"<p>On some units the /dev/ttyACM2 and /dev/ttyACM1 is used instead.</p> <p>First activate the modem(if it is not already activated)</p> <pre>echo 1 &gt; /opt/hm/pic_attributes/ctrl_modem_on</pre> <p>Wait a few seconds for the modem to turn on. You should see /dev/ttyACM2 and /dev/ttyACM1 if you do </p> <pre>ls /dev</pre> <p>Connect to ACM2 using microcom(or other serial port program) so you can send commands</p> <pre>microcom /dev/ttyACM2</pre> <p>in microcom for ttyACM2 run these 2 commands to enable the Engine and enable GPS data output</p> <pre>at^sgpsc=\"Engine\",\"1\"\nat^sgpsc=\"Nmea/Output\",\"on\"</pre> <p>in microcom for ttyACM1 all GPS data output should now be displayed:</p> <pre>microcom /dev/ttyACM1</pre>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/modem/#watchdog","title":"Watchdog","text":"<p>The co-processor acts as a watchdog of the modem. It monitors the power indicator signal by default. If it should detect that the modem is for some reason turned off even though it should be on it will attempt to restart it at first via a soft reset signal and after a few attempts it will do a hard-reset of modem.</p> <p>To enable monitoring of SLED signal which is an output from modem which reports current status one has to enable this signal. This signal should always toggle on/off, depending on state it toggles in different frequency. Should the co-cpu detect that it stops toggling which is an ERROR state it will attempt to soft restart modem first and if that fails a hard-reset.</p> <p>To start monitoring of SLED signal input following command to modem. This is not a persistent setting so one has to do this each time modem starts up. <pre><code>root@mx4-gtt:~# printf \"AT^SLED=2\\r\" &gt; /dev/ttyUSB3\n</code></pre></p>","tags":["Modem","CT","T30","T30 FR"]},{"location":"interfaces/mx4/pic_attributes/","title":"PIC attributes (coprocessor) (MX-4)","text":"","tags":["C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/pic_attributes/#list-of-all-pic_attributes","title":"List of all pic_attributes","text":"<ul> <li>analog_1</li> <li>analog_1_calibration_u</li> <li>analog_1_offset</li> <li>analog_1_threshold_high</li> <li>analog_1_threshold_low</li> <li>analog_2</li> <li>analog_2_calibration_u</li> <li>analog_2_offset</li> <li>analog_2_threshold_high</li> <li>analog_2_threshold_low</li> <li>analog_3</li> <li>analog_3_calibration_u</li> <li>analog_3_offset</li> <li>analog_3_threshold_high</li> <li>analog_3_threshold_low</li> <li>analog_4</li> <li>analog_4_calibration_u</li> <li>analog_4_offset</li> <li>analog_4_threshold_high</li> <li>analog_4_threshold_low</li> <li>analog_5</li> <li>analog_5_calibration_u</li> <li>analog_5_offset</li> <li>analog_5_threshold_high</li> <li>analog_5_threshold_low</li> <li>analog_out_1</li> <li>analog_out_1_calibration_u</li> <li>analog_out_1_offset</li> <li>analog_out_2</li> <li>analog_out_2_calibration_u</li> <li>analog_out_2_offset</li> <li>analog_out_3</li> <li>analog_out_3_calibration_u</li> <li>analog_out_3_offset</li> <li>analog_out_4</li> <li>analog_out_4_calibration_u</li> <li>analog_out_4_offset</li> <li>buzzer</li> <li>c3_counter</li> <li>ctrl_bl_version</li> <li>ctrl_goto_sleep</li> <li>ctrl_gpio_suspend_state</li> <li>ctrl_hw_rev</li> <li>ctrl_j1708_enable</li> <li>ctrl_led_power_off</li> <li>ctrl_modem_emg</li> <li>ctrl_modem_ign</li> <li>ctrl_modem_on</li> <li>ctrl_modem_status</li> <li>ctrl_on_4v</li> <li>ctrl_on_battery</li> <li>ctrl_pic_reset_cause</li> <li>ctrl_power_state</li> <li>ctrl_product_id</li> <li>ctrl_reset_pic_sw</li> <li>ctrl_rs422_loopback</li> <li>ctrl_rs422_mode</li> <li>ctrl_rs485_enable</li> <li>ctrl_serial_nr</li> <li>ctrl_system_state</li> <li>ctrl_version</li> <li>ctrl_wakeup_cause</li> <li>ctrl_wakeup_sources_register</li> <li>debug_data</li> <li>debug_k_line</li> <li>driver/</li> <li>drv_remove_exported_gpios</li> <li>fuse</li> <li>fuse_calibration_u</li> <li>fuse_offset</li> <li>fuse_threshold_high</li> <li>fuse_threshold_low</li> <li>gpio/</li> <li>input_battery</li> <li>input_battery_calibration_u</li> <li>input_battery_offset</li> <li>input_battery_threshold_high</li> <li>input_battery_threshold_low</li> <li>input_temperature_calibration_u</li> <li>input_temperature_mC</li> <li>input_voltage</li> <li>input_voltage_2</li> <li>input_voltage_2_calibration_u</li> <li>input_voltage_2_offset</li> <li>input_voltage_calibration_u</li> <li>input_voltage_offset</li> <li>input_voltage_threshold_high</li> <li>input_voltage_threshold_low</li> <li>led_2</li> <li>led_3</li> <li>led_4</li> <li>legacy_input_voltage_a_calibration_u</li> <li>legacy_input_voltage_b_calibration_u</li> <li>modalias</li> <li>pin_select_can2_h</li> <li>pin_select_can2_l</li> <li>pin_select_can3_h</li> <li>pin_select_can3_l</li> <li>pin_select_k_line</li> <li>pin_select_l_line</li> <li>pin_select_register</li> <li>power/</li> <li>power_5v_perm</li> <li>rtc_day</li> <li>rtc_dow</li> <li>rtc_hour</li> <li>rtc_minute</li> <li>rtc_month</li> <li>rtc_second</li> <li>rtc_year</li> <li>start_pic_bootloader_mode</li> <li>start_signal</li> <li>start_signal_calibration_u</li> <li>start_signal_offset</li> <li>start_signal_threshold_high</li> <li>start_signal_threshold_low</li> <li>subsystem/</li> <li>super_cap</li> <li>super_cap_calibration_u</li> <li>super_cap_offset</li> <li>trap_iec_trace</li> <li>trap_ifs_trace</li> <li>trap_location</li> <li>trap_location_prev</li> <li>uevent</li> <li>usb_port_otg</li> </ul>","tags":["C61","MX-4","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/rtc_alarm/","title":"MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script","text":"<p>On MX-4 platforms, wake on RTC can be configured using the <code>/opt/hm/go_to_sleep.sh</code> script.</p> <pre><code>/opt/hm/go_to_sleep.sh -h\nUsage: go_to_sleep.sh options (t:hdcCnsaD)\n        -t &lt;time in seconds&gt; - Setup wakealarm (rtc)\n        -d - Disable wake on DIGITAL-IN-2\n        -a - Disable wake on START-SIGNAL\n        -l &lt;mV level&gt; - START-SIGNAL wake-up volt level\n        -c - Wake on CAN\n        -n - Will renew dhcp lease\n        -C - Disable suspend CAN for quicker wakeup-time\n        -s - Will suspend modem (turn off), Will not restore on wake up\n        -D &lt;time in seconds&gt; - Will enter deep sleep.\n            Power to main CPU will be cut after specified time and it\n            will restart with a cold reboot on wake up. The application\n            is responsible of shutting down the system properly before\n            the power is cut.\n        -p &lt;wake up mask&gt; - Mask to enable/disable wakeup sources\n        -h - Print this text\n</code></pre>","tags":["MX-4","C61","T30","T30 FR"]},{"location":"interfaces/mx4/serial/","title":"Serial communication (CT)","text":"","tags":["RS-232","RS-485","CT","CT GL"]},{"location":"interfaces/mx4/serial/#overview","title":"Overview","text":"<p>The CT has one RS-485 (<code>/dev/ttyHS1</code>) and two RS-232 ports (<code>/dev/ttyHS2</code> and <code>/dev/ttyHS3</code>).</p> <ul> <li>Rs232-1   <code>/dev/ttyHS2</code><ul> <li>supports RTS and CTS</li> </ul> </li> <li>Rs232-2   <code>/dev/ttyHS3</code></li> </ul>","tags":["RS-232","RS-485","CT","CT GL"]},{"location":"interfaces/mx4/start_signal/","title":"MX-4 Start signals","text":"","tags":["Start signals","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/start_signal/#read-start-signal","title":"Read start signal","text":"<p>All products based on the MX-4 platform can read the start signal. The output is in millivolt. <pre><code>root@mx4-t30-29009999:~# cat /opt/hm/pic_attributes/start_signal\n21351\n</code></pre></p>","tags":["Start signals","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/start_signal/#t30-and-t30-fr","title":"T30 and T30 FR","text":"<p>These machines have two external start signals and one \"Start Signal Slide Switch\" located between two D-sub connectors. The Start Signal Slide Switch is marked INT (internal) and EXT (external). Sliding the switch to INT enables start at power on, without the need of an external start signal. This switch can also be read from Linux user space. ```</p>","tags":["Start signals","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/start_signal/#modern-way","title":"Modern way:","text":"<p>gpioget $(gpiofind 'start switch')</p>","tags":["Start signals","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/start_signal/#old-way","title":"Old way:","text":"<p>cat /sys/class/gpio/gpio$( grep 'start switch' /sys/kernel/debug/gpio | cut -d '-' -f2 | cut -d ' ' -f1 )/value</p>","tags":["Start signals","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/start_signal/#ct-and-ct-gl","title":"CT and CT GL","text":"<p>The majority of units have two start signals. The older ones, HMP069-5(3,1), have only one. The signal names are ANALOG-IN-1 and ANALOG-IN-2 on the connector. See the technical specification for more details.</p>","tags":["Start signals","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/start_signal/#c61","title":"C61","text":"<p>This product has one start signal located on the D-sub 15.</p>","tags":["Start signals","T30","T30 FR","MX-4","CT","CT GL","C61"]},{"location":"interfaces/mx4/usb/","title":"USB (MX-4)","text":"","tags":["USB","MX-4"]},{"location":"interfaces/mx4/usb/#overview","title":"Overview","text":"<p>Two USB-A 2.0, one is a USB OTG(usb0) and the other is USB host.</p>","tags":["USB","MX-4"]},{"location":"interfaces/mx4/wifi/","title":"WiFi (MX-4)","text":"","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#overview","title":"Overview","text":"","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#t30-fr","title":"T30 FR","text":"<ul> <li>This product is using Texas Instruments WL1837MOD (wlink8) WL1837MOD. </li> <li>Interface name is wlan0</li> <li>Standard: IEEE 802.11b/g/n </li> </ul>","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#t30-and-ct","title":"T30 and CT","text":"<ul> <li>This product is using Zcomax Technologies ZCN-722M (ath9k). </li> <li>Interface name is wlan0</li> <li>Standard: IEEE 802.11b/g/n</li> </ul>","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#for-linux-31-system","title":"For Linux 3.1 system","text":"<p>Note: for bsp release 1.6(1.5) and older</p>","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#usage","title":"Usage","text":"<p>All that is required to start Wifi moudule is <code>ifup wlan0</code>.</p> <pre><code>#/etc/networking/interfaces\nauto wlan0\niface wlan0 inet dhcp\n    wpa-driver nl80211\n    wpa-conf /etc/wpa_supplicant.conf\n</code></pre> <p>One has to edit <code>/etc/wpa_supplicant.conf</code> to add new networks which the module should connect to. <pre><code>#/etc/wpa_supplicant.conf\nctrl_interface=/var/run/wpa_supplicant\nctrl_interface_group=0\nupdate_config=1\n\nnetwork={\n        ssid=\"HostMobility-Guest\"\n        psk=\"*************\"\n        scan_ssid=1\n}\n</code></pre></p> <p>See more configuration examples at http://linux.die.net/man/5/wpa_supplicant.conf</p>","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#scan-wifi-networks","title":"scan wifi networks","text":"<pre><code>iw dev $WIFI_INTERFACE scan \n</code></pre>","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#wifi-as-access-point","title":"Wifi as Access Point","text":"","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#target-setup","title":"Target setup","text":"<p>Run  <pre><code>opkg update\nopkg install hostap-daemon\nopkg install iperf\nopkg install dhcp-client\n</code></pre></p>","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mx4/wifi/#example-script","title":"Example script","text":"<p>This example include a way to test diffrent channels and diffrent WLAN modes and messure it with iperf. conect to the SSID test and setup a iperf server with <code>iperf -s</code> on the connected PC.  <pre><code>#!/bin/bash\n\nSEND_TIME_IN_SEC=$1\n\nHOSTAP_CONFIG_FILE=/tmp/hostapd.conf\nUDHCPD_CONFIG_FILE=/tmp/udhcpd.conf\nHOSTAPD_PID=0\n# Add or remove channel or hw_mode\nCHANNEL=(\"1\" \"7\" \"11\")\nHW_MODE=(\"b\" \"g\")\n#\n\nif [[ -z $SEND_TIME_IN_SEC ]]; then\n    SEND_TIME_IN_SEC=120\nfi\n\nip link set wlan0 down\npkill udhcpd\npkill hostapd\n############################################\nif [[ -f \"/etc/init.d/hostapd\" ]]; then\n    echo \"/etc/init.d/hostapd file exist continue test\"\nelse\n      echo \"Install hostap-daemon again\"\n      exit 1\nfi\n\nip addr add 192.168.20.100/24 dev wlan0\nip route add default via 192.168.20.1\n\ncat &gt; $UDHCPD_CONFIG_FILE &lt;&lt;'EOF'\n\n# The start and end of the IP lease block\nstart       192.168.20.20\nend     192.168.20.254  \n# The interface that udhcpd will use\nopt    router  192.168.20.100\ninterface   wlan0\n\npidfile /var/run/udhcpd-wlan0.pid   \n\nEOF\n\nudhcpd -S ${UDHCPD_CONFIG_FILE}\nif [ $? != \"0\" ]; then\n    echo \"Install udhcpd server again(dhcp-client)\"\n    exit 1\n\nelse\n    echo \"udhcpd server initialized\"\nfi\n############################################\n\n\n\nfor hw_mode in ${HW_MODE[@]}; do\n    echo hw_mode:$hw_mode\n    for channel in ${CHANNEL[@]}; do\n        echo channel:$channel\n\n\n        #set script\n        cat &gt; $HOSTAP_CONFIG_FILE &lt;&lt;'EOF'\n##### hostapd configuration file ##############################################\n# Empty lines and lines starting with # are ignored\n\n# AP netdevice name (without 'ap' postfix, i.e., wlan0 uses wlan0ap for\n# management frames); ath0 for madwifi\ninterface=wlan0\n\n# In case of madwifi, atheros, and nl80211 driver interfaces, an additional\n# configuration parameter, bridge, may be used to notify hostapd if the\n# interface is included in a bridge. This parameter is not used with Host AP\n# driver. If the bridge parameter is not set, the drivers will automatically\n# figure out the bridge interface (assuming sysfs is enabled and mounted to\n# /sys) and this parameter may not be needed.\n#\n# For nl80211, this parameter can be used to request the AP interface to be\n# added to the bridge automatically (brctl may refuse to do this before hostapd\n# has been started to change the interface mode). If needed, the bridge\n# interface is also created.\n#bridge=br0\n\n# Driver interface type (hostap/wired/madwifi/test/none/nl80211/bsd);\n# default: hostap). nl80211 is used with all Linux mac80211 drivers.\n# Use driver=none if building hostapd as a standalone RADIUS server that does\n# not control any wireless/wired driver.\n# driver=hostap\n\n# hostapd event logger configuration\n#\n# Two output method: syslog and stdout (only usable if not forking to\n# background).\n#\n# Module bitfield (ORed bitfield of modules that will be logged; -1 = all\n# modules):\n# bit 0 (1) = IEEE 802.11\n# bit 1 (2) = IEEE 802.1X\n# bit 2 (4) = RADIUS\n# bit 3 (8) = WPA\n# bit 4 (16) = driver interface\n# bit 5 (32) = IAPP\n# bit 6 (64) = MLME\n#\n# Levels (minimum value for logged events):\n#  0 = verbose debugging\n#  1 = debugging\n#  2 = informational messages\n#  3 = notification\n#  4 = warning\n#\nlogger_syslog=-1\nlogger_syslog_level=2\nlogger_stdout=-1\nlogger_stdout_level=2\n\n# Dump file for state information (on SIGUSR1)\ndump_file=/tmp/hostapd.dump\n\n# Interface for separate control program. If this is specified, hostapd\n# will create this directory and a UNIX domain socket for listening to requests\n# from external programs (CLI/GUI, etc.) for status information and\n# configuration. The socket file will be named based on the interface name, so\n# multiple hostapd processes/interfaces can be run at the same time if more\n# than one interface is used.\n# /var/run/hostapd is the recommended directory for sockets and by default,\n# hostapd_cli will use it when trying to connect with hostapd.\nctrl_interface=/var/run/hostapd\n\n# Access control for the control interface can be configured by setting the\n# directory to allow only members of a group to use sockets. This way, it is\n# possible to run hostapd as root (since it needs to change network\n# configuration and open raw sockets) and still allow GUI/CLI components to be\n# run as non-root users. However, since the control interface can be used to\n# change the network configuration, this access needs to be protected in many\n# cases. By default, hostapd is configured to use gid 0 (root). If you\n# want to allow non-root users to use the contron interface, add a new group\n# and change this value to match with that group. Add users that should have\n# control interface access to this group.\n#\n# This variable can be a group name or gid.\n#ctrl_interface_group=wheel\nctrl_interface_group=0\n\n\n##### IEEE 802.11 related configuration #######################################\n\n# SSID to be used in IEEE 802.11 management frames\nssid=test\n\n# Country code (ISO/IEC 3166-1). Used to set regulatory domain.\n# Set as needed to indicate country in which device is operating.\n# This can limit available channels and transmit power.\n#country_code=US\n\n# Enable IEEE 802.11d. This advertises the country_code and the set of allowed\n# channels and transmit power levels based on the regulatory limits. The\n# country_code setting must be configured with the correct country for\n# IEEE 802.11d functions.\n# (default: 0 = disabled)\n#ieee80211d=1\n\n# Operation mode (a = IEEE 802.11a, b = IEEE 802.11b, g = IEEE 802.11g,\n# Default: IEEE 802.11b\n\n\n# Channel number (IEEE 802.11)\n# (default: 0, i.e., not set)\n# Please note that some drivers do not use this value from hostapd and the\n# channel will need to be configured separately with iwconfig.\n\n\n# Beacon interval in kus (1.024 ms) (default: 100; range 15..65535)\nbeacon_int=100\n\n# DTIM (delivery traffic information message) period (range 1..255):\n# number of beacons between DTIMs (1 = every beacon includes DTIM element)\n# (default: 2)\ndtim_period=2\n\n# Maximum number of stations allowed in station table. New stations will be\n# rejected after the station table is full. IEEE 802.11 has a limit of 2007\n# different association IDs, so this number should not be larger than that.\n# (default: 2007)\nmax_num_sta=255\n\n# RTS/CTS threshold; 2347 = disabled (default); range 0..2347\n# If this field is not included in hostapd.conf, hostapd will not control\n# RTS threshold and 'iwconfig wlan# rts &lt;val&gt;' can be used to set it.\nrts_threshold=2347\n\n# Fragmentation threshold; 2346 = disabled (default); range 256..2346\n# If this field is not included in hostapd.conf, hostapd will not control\n# fragmentation threshold and 'iwconfig wlan# frag &lt;val&gt;' can be used to set\n# it.\nfragm_threshold=2346\n\n# Rate configuration\n# Default is to enable all rates supported by the hardware. This configuration\n# item allows this list be filtered so that only the listed rates will be left\n# in the list. If the list is empty, all rates are used. This list can have\n# entries that are not in the list of rates the hardware supports (such entries\n# are ignored). The entries in this list are in 100 kbps, i.e., 11 Mbps = 110.\n# If this item is present, at least one rate have to be matching with the rates\n# hardware supports.\n# default: use the most common supported rate setting for the selected\n# hw_mode (i.e., this line can be removed from configuration file in most\n# cases)\n#supported_rates=10 20 55 110 60 90 120 180 240 360 480 540\n\n# Basic rate set configuration\n# List of rates (in 100 kbps) that are included in the basic rate set.\n# If this item is not included, usually reasonable default set is used.\n#basic_rates=10 20\n#basic_rates=10 20 55 110\n#basic_rates=60 120 240\n\n# Short Preamble\n# This parameter can be used to enable optional use of short preamble for\n# frames sent at 2 Mbps, 5.5 Mbps, and 11 Mbps to improve network performance.\n# This applies only to IEEE 802.11b-compatible networks and this should only be\n# enabled if the local hardware supports use of short preamble. If any of the\n# associated STAs do not support short preamble, use of short preamble will be\n# disabled (and enabled when such STAs disassociate) dynamically.\n# 0 = do not allow use of short preamble (default)\n# 1 = allow use of short preamble\n#preamble=1\n\n# Station MAC address -based authentication\n# Please note that this kind of access control requires a driver that uses\n# hostapd to take care of management frame processing and as such, this can be\n# used with driver=hostap or driver=nl80211, but not with driver=madwifi.\n# 0 = accept unless in deny list\n# 1 = deny unless in accept list\n# 2 = use external RADIUS server (accept/deny lists are searched first)\nmacaddr_acl=0\n\n# Accept/deny lists are read from separate files (containing list of\n# MAC addresses, one per line). Use absolute path name to make sure that the\n# files can be read on SIGHUP configuration reloads.\n#accept_mac_file=/etc/hostapd.accept\n#deny_mac_file=/etc/hostapd.deny\n\n# IEEE 802.11 specifies two authentication algorithms. hostapd can be\n# configured to allow both of these or only one. Open system authentication\n# should be used with IEEE 802.1X.\n# Bit fields of allowed authentication algorithms:\n# bit 0 = Open System Authentication\n# bit 1 = Shared Key Authentication (requires WEP)\nauth_algs=3\n\n# Send empty SSID in beacons and ignore probe request frames that do not\n# specify full SSID, i.e., require stations to know SSID.\n# default: disabled (0)\n# 1 = send empty (length=0) SSID in beacon and ignore probe request for\n#     broadcast SSID\n# 2 = clear SSID (ASCII 0), but keep the original length (this may be required\n#     with some clients that do not support empty SSID) and ignore probe\n#     requests for broadcast SSID\nignore_broadcast_ssid=0\n\n# TX queue parameters (EDCF / bursting)\n# tx_queue_&lt;queue name&gt;_&lt;param&gt;\n# queues: data0, data1, data2, data3, after_beacon, beacon\n#       (data0 is the highest priority queue)\n# parameters:\n#   aifs: AIFS (default 2)\n#   cwmin: cwMin (1, 3, 7, 15, 31, 63, 127, 255, 511, 1023)\n#   cwmax: cwMax (1, 3, 7, 15, 31, 63, 127, 255, 511, 1023); cwMax &gt;= cwMin\n#   burst: maximum length (in milliseconds with precision of up to 0.1 ms) for\n#          bursting\n#\n# Default WMM parameters (IEEE 802.11 draft; 11-03-0504-03-000e):\n# These parameters are used by the access point when transmitting frames\n# to the clients.\n#\n# Low priority / AC_BK = background\n#tx_queue_data3_aifs=7\n#tx_queue_data3_cwmin=15\n#tx_queue_data3_cwmax=1023\n#tx_queue_data3_burst=0\n# Note: for IEEE 802.11b mode: cWmin=31 cWmax=1023 burst=0\n#\n# Normal priority / AC_BE = best effort\n#tx_queue_data2_aifs=3\n#tx_queue_data2_cwmin=15\n#tx_queue_data2_cwmax=63\n#tx_queue_data2_burst=0\n# Note: for IEEE 802.11b mode: cWmin=31 cWmax=127 burst=0\n#\n# High priority / AC_VI = video\n#tx_queue_data1_aifs=1\n#tx_queue_data1_cwmin=7\n#tx_queue_data1_cwmax=15\n#tx_queue_data1_burst=3.0\n# Note: for IEEE 802.11b mode: cWmin=15 cWmax=31 burst=6.0\n#\n# Highest priority / AC_VO = voice\n#tx_queue_data0_aifs=1\n#tx_queue_data0_cwmin=3\n#tx_queue_data0_cwmax=7\n#tx_queue_data0_burst=1.5\n# Note: for IEEE 802.11b mode: cWmin=7 cWmax=15 burst=3.3\n\n# 802.1D Tag (= UP) to AC mappings\n# WMM specifies following mapping of data frames to different ACs. This mapping\n# can be configured using Linux QoS/tc and sch_pktpri.o module.\n# 802.1D Tag    802.1D Designation  Access Category WMM Designation\n# 1     BK          AC_BK       Background\n# 2     -           AC_BK       Background\n# 0     BE          AC_BE       Best Effort\n# 3     EE          AC_BE       Best Effort\n# 4     CL          AC_VI       Video\n# 5     VI          AC_VI       Video\n# 6     VO          AC_VO       Voice\n# 7     NC          AC_VO       Voice\n# Data frames with no priority information: AC_BE\n# Management frames: AC_VO\n# PS-Poll frames: AC_BE\n\n# Default WMM parameters (IEEE 802.11 draft; 11-03-0504-03-000e):\n# for 802.11a or 802.11g networks\n# These parameters are sent to WMM clients when they associate.\n# The parameters will be used by WMM clients for frames transmitted to the\n# access point.\n#\n# note - txop_limit is in units of 32microseconds\n# note - acm is admission control mandatory flag. 0 = admission control not\n# required, 1 = mandatory\n# note - here cwMin and cmMax are in exponent form. the actual cw value used\n# will be (2^n)-1 where n is the value given here\n#\nwmm_enabled=1\n#\n# WMM-PS Unscheduled Automatic Power Save Delivery [U-APSD]\n# Enable this flag if U-APSD supported outside hostapd (eg., Firmware/driver)\n#uapsd_advertisement_enabled=1\n#\n# Low priority / AC_BK = background\nwmm_ac_bk_cwmin=4\nwmm_ac_bk_cwmax=10\nwmm_ac_bk_aifs=7\nwmm_ac_bk_txop_limit=0\nwmm_ac_bk_acm=0\n# Note: for IEEE 802.11b mode: cWmin=5 cWmax=10\n#\n# Normal priority / AC_BE = best effort\nwmm_ac_be_aifs=3\nwmm_ac_be_cwmin=4\nwmm_ac_be_cwmax=10\nwmm_ac_be_txop_limit=0\nwmm_ac_be_acm=0\n# Note: for IEEE 802.11b mode: cWmin=5 cWmax=7\n#\n# High priority / AC_VI = video\nwmm_ac_vi_aifs=2\nwmm_ac_vi_cwmin=3\nwmm_ac_vi_cwmax=4\nwmm_ac_vi_txop_limit=94\nwmm_ac_vi_acm=0\n# Note: for IEEE 802.11b mode: cWmin=4 cWmax=5 txop_limit=188\n#\n# Highest priority / AC_VO = voice\nwmm_ac_vo_aifs=2\nwmm_ac_vo_cwmin=2\nwmm_ac_vo_cwmax=3\nwmm_ac_vo_txop_limit=47\nwmm_ac_vo_acm=0\n# Note: for IEEE 802.11b mode: cWmin=3 cWmax=4 burst=102\n\n# Static WEP key configuration\n#\n# The key number to use when transmitting.\n# It must be between 0 and 3, and the corresponding key must be set.\n# default: not set\n#wep_default_key=0\n# The WEP keys to use.\n# A key may be a quoted string or unquoted hexadecimal digits.\n# The key length should be 5, 13, or 16 characters, or 10, 26, or 32\n# digits, depending on whether 40-bit (64-bit), 104-bit (128-bit), or\n# 128-bit (152-bit) WEP is used.\n# Only the default key must be supplied; the others are optional.\n# default: not set\n#wep_key0=123456789a\n#wep_key1=\"vwxyz\"\n#wep_key2=0102030405060708090a0b0c0d\n#wep_key3=\".2.4.6.8.0.23\"\n\n# Station inactivity limit\n#\n# If a station does not send anything in ap_max_inactivity seconds, an\n# empty data frame is sent to it in order to verify whether it is\n# still in range. If this frame is not ACKed, the station will be\n# disassociated and then deauthenticated. This feature is used to\n# clear station table of old entries when the STAs move out of the\n# range.\n#\n# The station can associate again with the AP if it is still in range;\n# this inactivity poll is just used as a nicer way of verifying\n# inactivity; i.e., client will not report broken connection because\n# disassociation frame is not sent immediately without first polling\n# the STA with a data frame.\n# default: 300 (i.e., 5 minutes)\n#ap_max_inactivity=300\n\n# Disassociate stations based on excessive transmission failures or other\n# indications of connection loss. This depends on the driver capabilities and\n# may not be available with all drivers.\n#disassoc_low_ack=1\n\n# Maximum allowed Listen Interval (how many Beacon periods STAs are allowed to\n# remain asleep). Default: 65535 (no limit apart from field size)\n#max_listen_interval=100\n\n# WDS (4-address frame) mode with per-station virtual interfaces\n# (only supported with driver=nl80211)\n# This mode allows associated stations to use 4-address frames to allow layer 2\n# bridging to be used.\n#wds_sta=1\n\n# If bridge parameter is set, the WDS STA interface will be added to the same\n# bridge by default. This can be overridden with the wds_bridge parameter to\n# use a separate bridge.\n#wds_bridge=wds-br0\n\n# Client isolation can be used to prevent low-level bridging of frames between\n# associated stations in the BSS. By default, this bridging is allowed.\n#ap_isolate=1\n\n##### IEEE 802.11n related configuration ######################################\n\n# ieee80211n: Whether IEEE 802.11n (HT) is enabled\n# 0 = disabled (default)\n# 1 = enabled\n# Note: You will also need to enable WMM for full HT functionality.\n#ieee80211n=1\n\n# ht_capab: HT capabilities (list of flags)\n# LDPC coding capability: [LDPC] = supported\n# Supported channel width set: [HT40-] = both 20 MHz and 40 MHz with secondary\n#   channel below the primary channel; [HT40+] = both 20 MHz and 40 MHz\n#   with secondary channel below the primary channel\n#   (20 MHz only if neither is set)\n#   Note: There are limits on which channels can be used with HT40- and\n#   HT40+. Following table shows the channels that may be available for\n#   HT40- and HT40+ use per IEEE 802.11n Annex J:\n#   freq        HT40-       HT40+\n#   2.4 GHz     5-13        1-7 (1-9 in Europe/Japan)\n#   5 GHz       40,48,56,64 36,44,52,60\n#   (depending on the location, not all of these channels may be available\n#   for use)\n#   Please note that 40 MHz channels may switch their primary and secondary\n#   channels if needed or creation of 40 MHz channel maybe rejected based\n#   on overlapping BSSes. These changes are done automatically when hostapd\n#   is setting up the 40 MHz channel.\n# Spatial Multiplexing (SM) Power Save: [SMPS-STATIC] or [SMPS-DYNAMIC]\n#   (SMPS disabled if neither is set)\n# HT-greenfield: [GF] (disabled if not set)\n# Short GI for 20 MHz: [SHORT-GI-20] (disabled if not set)\n# Short GI for 40 MHz: [SHORT-GI-40] (disabled if not set)\n# Tx STBC: [TX-STBC] (disabled if not set)\n# Rx STBC: [RX-STBC1] (one spatial stream), [RX-STBC12] (one or two spatial\n#   streams), or [RX-STBC123] (one, two, or three spatial streams); Rx STBC\n#   disabled if none of these set\n# HT-delayed Block Ack: [DELAYED-BA] (disabled if not set)\n# Maximum A-MSDU length: [MAX-AMSDU-7935] for 7935 octets (3839 octets if not\n#   set)\n# DSSS/CCK Mode in 40 MHz: [DSSS_CCK-40] = allowed (not allowed if not set)\n# PSMP support: [PSMP] (disabled if not set)\n# L-SIG TXOP protection support: [LSIG-TXOP-PROT] (disabled if not set)\n#ht_capab=[HT40-][SHORT-GI-20][SHORT-GI-40]\n\n# Require stations to support HT PHY (reject association if they do not)\n#require_ht=1\n\n##### IEEE 802.1X-2004 related configuration ##################################\n\n# Require IEEE 802.1X authorization\n#ieee8021x=1\n\n# IEEE 802.1X/EAPOL version\n# hostapd is implemented based on IEEE Std 802.1X-2004 which defines EAPOL\n# version 2. However, there are many client implementations that do not handle\n# the new version number correctly (they seem to drop the frames completely).\n# In order to make hostapd interoperate with these clients, the version number\n# can be set to the older version (1) with this configuration value.\n#eapol_version=2\n\n# Optional displayable message sent with EAP Request-Identity. The first \\0\n# in this string will be converted to ASCII-0 (nul). This can be used to\n# separate network info (comma separated list of attribute=value pairs); see,\n# e.g., RFC 4284.\n#eap_message=hello\n#eap_message=hello\\0networkid=netw,nasid=foo,portid=0,NAIRealms=example.com\n\n# WEP rekeying (disabled if key lengths are not set or are set to 0)\n# Key lengths for default/broadcast and individual/unicast keys:\n# 5 = 40-bit WEP (also known as 64-bit WEP with 40 secret bits)\n# 13 = 104-bit WEP (also known as 128-bit WEP with 104 secret bits)\n#wep_key_len_broadcast=5\n#wep_key_len_unicast=5\n# Rekeying period in seconds. 0 = do not rekey (i.e., set keys only once)\n#wep_rekey_period=300\n\n# EAPOL-Key index workaround (set bit7) for WinXP Supplicant (needed only if\n# only broadcast keys are used)\neapol_key_index_workaround=0\n\n# EAP reauthentication period in seconds (default: 3600 seconds; 0 = disable\n# reauthentication).\n#eap_reauth_period=3600\n\n# Use PAE group address (01:80:c2:00:00:03) instead of individual target\n# address when sending EAPOL frames with driver=wired. This is the most common\n# mechanism used in wired authentication, but it also requires that the port\n# is only used by one station.\n#use_pae_group_addr=1\n\n##### Integrated EAP server ###################################################\n\n# Optionally, hostapd can be configured to use an integrated EAP server\n# to process EAP authentication locally without need for an external RADIUS\n# server. This functionality can be used both as a local authentication server\n# for IEEE 802.1X/EAPOL and as a RADIUS server for other devices.\n\n# Use integrated EAP server instead of external RADIUS authentication\n# server. This is also needed if hostapd is configured to act as a RADIUS\n# authentication server.\neap_server=0\n\n# Path for EAP server user database\n#eap_user_file=/etc/hostapd.eap_user\n\n# CA certificate (PEM or DER file) for EAP-TLS/PEAP/TTLS\n#ca_cert=/etc/hostapd.ca.pem\n\n# Server certificate (PEM or DER file) for EAP-TLS/PEAP/TTLS\n#server_cert=/etc/hostapd.server.pem\n\n# Private key matching with the server certificate for EAP-TLS/PEAP/TTLS\n# This may point to the same file as server_cert if both certificate and key\n# are included in a single file. PKCS#12 (PFX) file (.p12/.pfx) can also be\n# used by commenting out server_cert and specifying the PFX file as the\n# private_key.\n#private_key=/etc/hostapd.server.prv\n\n# Passphrase for private key\n#private_key_passwd=secret passphrase\n\n# Enable CRL verification.\n# Note: hostapd does not yet support CRL downloading based on CDP. Thus, a\n# valid CRL signed by the CA is required to be included in the ca_cert file.\n# This can be done by using PEM format for CA certificate and CRL and\n# concatenating these into one file. Whenever CRL changes, hostapd needs to be\n# restarted to take the new CRL into use.\n# 0 = do not verify CRLs (default)\n# 1 = check the CRL of the user certificate\n# 2 = check all CRLs in the certificate path\n#check_crl=1\n\n# dh_file: File path to DH/DSA parameters file (in PEM format)\n# This is an optional configuration file for setting parameters for an\n# ephemeral DH key exchange. In most cases, the default RSA authentication does\n# not use this configuration. However, it is possible setup RSA to use\n# ephemeral DH key exchange. In addition, ciphers with DSA keys always use\n# ephemeral DH keys. This can be used to achieve forward secrecy. If the file\n# is in DSA parameters format, it will be automatically converted into DH\n# params. This parameter is required if anonymous EAP-FAST is used.\n# You can generate DH parameters file with OpenSSL, e.g.,\n# \"openssl dhparam -out /etc/hostapd.dh.pem 1024\"\n#dh_file=/etc/hostapd.dh.pem\n\n# Fragment size for EAP methods\n#fragment_size=1400\n\n# Configuration data for EAP-SIM database/authentication gateway interface.\n# This is a text string in implementation specific format. The example\n# implementation in eap_sim_db.c uses this as the UNIX domain socket name for\n# the HLR/AuC gateway (e.g., hlr_auc_gw). In this case, the path uses \"unix:\"\n# prefix.\n#eap_sim_db=unix:/tmp/hlr_auc_gw.sock\n\n# Encryption key for EAP-FAST PAC-Opaque values. This key must be a secret,\n# random value. It is configured as a 16-octet value in hex format. It can be\n# generated, e.g., with the following command:\n# od -tx1 -v -N16 /dev/random | colrm 1 8 | tr -d ' '\n#pac_opaque_encr_key=000102030405060708090a0b0c0d0e0f\n\n# EAP-FAST authority identity (A-ID)\n# A-ID indicates the identity of the authority that issues PACs. The A-ID\n# should be unique across all issuing servers. In theory, this is a variable\n# length field, but due to some existing implementations requiring A-ID to be\n# 16 octets in length, it is strongly recommended to use that length for the\n# field to provid interoperability with deployed peer implementations. This\n# field is configured in hex format.\n#eap_fast_a_id=101112131415161718191a1b1c1d1e1f\n\n# EAP-FAST authority identifier information (A-ID-Info)\n# This is a user-friendly name for the A-ID. For example, the enterprise name\n# and server name in a human-readable format. This field is encoded as UTF-8.\n#eap_fast_a_id_info=test server\n\n# Enable/disable different EAP-FAST provisioning modes:\n#0 = provisioning disabled\n#1 = only anonymous provisioning allowed\n#2 = only authenticated provisioning allowed\n#3 = both provisioning modes allowed (default)\n#eap_fast_prov=3\n\n# EAP-FAST PAC-Key lifetime in seconds (hard limit)\n#pac_key_lifetime=604800\n\n# EAP-FAST PAC-Key refresh time in seconds (soft limit on remaining hard\n# limit). The server will generate a new PAC-Key when this number of seconds\n# (or fewer) of the lifetime remains.\n#pac_key_refresh_time=86400\n\n# EAP-SIM and EAP-AKA protected success/failure indication using AT_RESULT_IND\n# (default: 0 = disabled).\n#eap_sim_aka_result_ind=1\n\n# Trusted Network Connect (TNC)\n# If enabled, TNC validation will be required before the peer is allowed to\n# connect. Note: This is only used with EAP-TTLS and EAP-FAST. If any other\n# EAP method is enabled, the peer will be allowed to connect without TNC.\n#tnc=1\n\n\n##### IEEE 802.11f - Inter-Access Point Protocol (IAPP) #######################\n\n# Interface to be used for IAPP broadcast packets\n#iapp_interface=eth0\n\n\n##### RADIUS client configuration #############################################\n# for IEEE 802.1X with external Authentication Server, IEEE 802.11\n# authentication with external ACL for MAC addresses, and accounting\n\n# The own IP address of the access point (used as NAS-IP-Address)\nown_ip_addr=127.0.0.1\n\n# Optional NAS-Identifier string for RADIUS messages. When used, this should be\n# a unique to the NAS within the scope of the RADIUS server. For example, a\n# fully qualified domain name can be used here.\n# When using IEEE 802.11r, nas_identifier must be set and must be between 1 and\n# 48 octets long.\n#nas_identifier=ap.example.com\n\n# RADIUS authentication server\n#auth_server_addr=127.0.0.1\n#auth_server_port=1812\n#auth_server_shared_secret=secret\n\n# RADIUS accounting server\n#acct_server_addr=127.0.0.1\n#acct_server_port=1813\n#acct_server_shared_secret=secret\n\n# Secondary RADIUS servers; to be used if primary one does not reply to\n# RADIUS packets. These are optional and there can be more than one secondary\n# server listed.\n#auth_server_addr=127.0.0.2\n#auth_server_port=1812\n#auth_server_shared_secret=secret2\n#\n#acct_server_addr=127.0.0.2\n#acct_server_port=1813\n#acct_server_shared_secret=secret2\n\n# Retry interval for trying to return to the primary RADIUS server (in\n# seconds). RADIUS client code will automatically try to use the next server\n# when the current server is not replying to requests. If this interval is set,\n# primary server will be retried after configured amount of time even if the\n# currently used secondary server is still working.\n#radius_retry_primary_interval=600\n\n\n# Interim accounting update interval\n# If this is set (larger than 0) and acct_server is configured, hostapd will\n# send interim accounting updates every N seconds. Note: if set, this overrides\n# possible Acct-Interim-Interval attribute in Access-Accept message. Thus, this\n# value should not be configured in hostapd.conf, if RADIUS server is used to\n# control the interim interval.\n# This value should not be less 600 (10 minutes) and must not be less than\n# 60 (1 minute).\n#radius_acct_interim_interval=600\n\n# Dynamic VLAN mode; allow RADIUS authentication server to decide which VLAN\n# is used for the stations. This information is parsed from following RADIUS\n# attributes based on RFC 3580 and RFC 2868: Tunnel-Type (value 13 = VLAN),\n# Tunnel-Medium-Type (value 6 = IEEE 802), Tunnel-Private-Group-ID (value\n# VLANID as a string). vlan_file option below must be configured if dynamic\n# VLANs are used. Optionally, the local MAC ACL list (accept_mac_file) can be\n# used to set static client MAC address to VLAN ID mapping.\n# 0 = disabled (default)\n# 1 = option; use default interface if RADIUS server does not include VLAN ID\n# 2 = required; reject authentication if RADIUS server does not include VLAN ID\n#dynamic_vlan=0\n\n# VLAN interface list for dynamic VLAN mode is read from a separate text file.\n# This list is used to map VLAN ID from the RADIUS server to a network\n# interface. Each station is bound to one interface in the same way as with\n# multiple BSSIDs or SSIDs. Each line in this text file is defining a new\n# interface and the line must include VLAN ID and interface name separated by\n# white space (space or tab).\n#vlan_file=/etc/hostapd.vlan\n\n# Interface where 802.1q tagged packets should appear when a RADIUS server is\n# used to determine which VLAN a station is on.  hostapd creates a bridge for\n# each VLAN.  Then hostapd adds a VLAN interface (associated with the interface\n# indicated by 'vlan_tagged_interface') and the appropriate wireless interface\n# to the bridge.\n#vlan_tagged_interface=eth0\n\n\n##### RADIUS authentication server configuration ##############################\n\n# hostapd can be used as a RADIUS authentication server for other hosts. This\n# requires that the integrated EAP server is also enabled and both\n# authentication services are sharing the same configuration.\n\n# File name of the RADIUS clients configuration for the RADIUS server. If this\n# commented out, RADIUS server is disabled.\n#radius_server_clients=/etc/hostapd.radius_clients\n\n# The UDP port number for the RADIUS authentication server\n#radius_server_auth_port=1812\n\n# Use IPv6 with RADIUS server (IPv4 will also be supported using IPv6 API)\n#radius_server_ipv6=1\n\n\n##### WPA/IEEE 802.11i configuration ##########################################\n\n# Enable WPA. Setting this variable configures the AP to require WPA (either\n# WPA-PSK or WPA-RADIUS/EAP based on other configuration). For WPA-PSK, either\n# wpa_psk or wpa_passphrase must be set and wpa_key_mgmt must include WPA-PSK.\n# For WPA-RADIUS/EAP, ieee8021x must be set (but without dynamic WEP keys),\n# RADIUS authentication server must be configured, and WPA-EAP must be included\n# in wpa_key_mgmt.\n# This field is a bit field that can be used to enable WPA (IEEE 802.11i/D3.0)\n# and/or WPA2 (full IEEE 802.11i/RSN):\n# bit0 = WPA\n# bit1 = IEEE 802.11i/RSN (WPA2) (dot11RSNAEnabled)\n#wpa=1\n\n# WPA pre-shared keys for WPA-PSK. This can be either entered as a 256-bit\n# secret in hex format (64 hex digits), wpa_psk, or as an ASCII passphrase\n# (8..63 characters) that will be converted to PSK. This conversion uses SSID\n# so the PSK changes when ASCII passphrase is used and the SSID is changed.\n# wpa_psk (dot11RSNAConfigPSKValue)\n# wpa_passphrase (dot11RSNAConfigPSKPassPhrase)\n#wpa_psk=0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\n#wpa_passphrase=secret passphrase\n\n# Optionally, WPA PSKs can be read from a separate text file (containing list\n# of (PSK,MAC address) pairs. This allows more than one PSK to be configured.\n# Use absolute path name to make sure that the files can be read on SIGHUP\n# configuration reloads.\n#wpa_psk_file=/etc/hostapd.wpa_psk\n\n# Set of accepted key management algorithms (WPA-PSK, WPA-EAP, or both). The\n# entries are separated with a space. WPA-PSK-SHA256 and WPA-EAP-SHA256 can be\n# added to enable SHA256-based stronger algorithms.\n# (dot11RSNAConfigAuthenticationSuitesTable)\n#wpa_key_mgmt=WPA-PSK WPA-EAP\n\n# Set of accepted cipher suites (encryption algorithms) for pairwise keys\n# (unicast packets). This is a space separated list of algorithms:\n# CCMP = AES in Counter mode with CBC-MAC [RFC 3610, IEEE 802.11i/D7.0]\n# TKIP = Temporal Key Integrity Protocol [IEEE 802.11i/D7.0]\n# Group cipher suite (encryption algorithm for broadcast and multicast frames)\n# is automatically selected based on this configuration. If only CCMP is\n# allowed as the pairwise cipher, group cipher will also be CCMP. Otherwise,\n# TKIP will be used as the group cipher.\n# (dot11RSNAConfigPairwiseCiphersTable)\n# Pairwise cipher for WPA (v1) (default: TKIP)\n#wpa_pairwise=TKIP CCMP\n# Pairwise cipher for RSN/WPA2 (default: use wpa_pairwise value)\n#rsn_pairwise=CCMP\n\n# Time interval for rekeying GTK (broadcast/multicast encryption keys) in\n# seconds. (dot11RSNAConfigGroupRekeyTime)\n#wpa_group_rekey=600\n\n# Rekey GTK when any STA that possesses the current GTK is leaving the BSS.\n# (dot11RSNAConfigGroupRekeyStrict)\n#wpa_strict_rekey=1\n\n# Time interval for rekeying GMK (master key used internally to generate GTKs\n# (in seconds).\n#wpa_gmk_rekey=86400\n\n# Maximum lifetime for PTK in seconds. This can be used to enforce rekeying of\n# PTK to mitigate some attacks against TKIP deficiencies.\n#wpa_ptk_rekey=600\n\n# Enable IEEE 802.11i/RSN/WPA2 pre-authentication. This is used to speed up\n# roaming be pre-authenticating IEEE 802.1X/EAP part of the full RSN\n# authentication and key handshake before actually associating with a new AP.\n# (dot11RSNAPreauthenticationEnabled)\n#rsn_preauth=1\n#\n# Space separated list of interfaces from which pre-authentication frames are\n# accepted (e.g., 'eth0' or 'eth0 wlan0wds0'. This list should include all\n# interface that are used for connections to other APs. This could include\n# wired interfaces and WDS links. The normal wireless data interface towards\n# associated stations (e.g., wlan0) should not be added, since\n# pre-authentication is only used with APs other than the currently associated\n# one.\n#rsn_preauth_interfaces=eth0\n\n# peerkey: Whether PeerKey negotiation for direct links (IEEE 802.11e) is\n# allowed. This is only used with RSN/WPA2.\n# 0 = disabled (default)\n# 1 = enabled\n#peerkey=1\n\n# ieee80211w: Whether management frame protection (MFP) is enabled\n# 0 = disabled (default)\n# 1 = optional\n# 2 = required\n#ieee80211w=0\n\n# Association SA Query maximum timeout (in TU = 1.024 ms; for MFP)\n# (maximum time to wait for a SA Query response)\n# dot11AssociationSAQueryMaximumTimeout, 1...4294967295\n#assoc_sa_query_max_timeout=1000\n\n# Association SA Query retry timeout (in TU = 1.024 ms; for MFP)\n# (time between two subsequent SA Query requests)\n# dot11AssociationSAQueryRetryTimeout, 1...4294967295\n#assoc_sa_query_retry_timeout=201\n\n# disable_pmksa_caching: Disable PMKSA caching\n# This parameter can be used to disable caching of PMKSA created through EAP\n# authentication. RSN preauthentication may still end up using PMKSA caching if\n# it is enabled (rsn_preauth=1).\n# 0 = PMKSA caching enabled (default)\n# 1 = PMKSA caching disabled\n#disable_pmksa_caching=0\n\n# okc: Opportunistic Key Caching (aka Proactive Key Caching)\n# Allow PMK cache to be shared opportunistically among configured interfaces\n# and BSSes (i.e., all configurations within a single hostapd process).\n# 0 = disabled (default)\n# 1 = enabled\n#okc=1\n\n\n##### IEEE 802.11r configuration ##############################################\n\n# Mobility Domain identifier (dot11FTMobilityDomainID, MDID)\n# MDID is used to indicate a group of APs (within an ESS, i.e., sharing the\n# same SSID) between which a STA can use Fast BSS Transition.\n# 2-octet identifier as a hex string.\n#mobility_domain=a1b2\n\n# PMK-R0 Key Holder identifier (dot11FTR0KeyHolderID)\n# 1 to 48 octet identifier.\n# This is configured with nas_identifier (see RADIUS client section above).\n\n# Default lifetime of the PMK-RO in minutes; range 1..65535\n# (dot11FTR0KeyLifetime)\n#r0_key_lifetime=10000\n\n# PMK-R1 Key Holder identifier (dot11FTR1KeyHolderID)\n# 6-octet identifier as a hex string.\n#r1_key_holder=000102030405\n\n# Reassociation deadline in time units (TUs / 1.024 ms; range 1000..65535)\n# (dot11FTReassociationDeadline)\n#reassociation_deadline=1000\n\n# List of R0KHs in the same Mobility Domain\n# format: &lt;MAC address&gt; &lt;NAS Identifier&gt; &lt;128-bit key as hex string&gt;\n# This list is used to map R0KH-ID (NAS Identifier) to a destination MAC\n# address when requesting PMK-R1 key from the R0KH that the STA used during the\n# Initial Mobility Domain Association.\n#r0kh=02:01:02:03:04:05 r0kh-1.example.com 000102030405060708090a0b0c0d0e0f\n#r0kh=02:01:02:03:04:06 r0kh-2.example.com 00112233445566778899aabbccddeeff\n# And so on.. One line per R0KH.\n\n# List of R1KHs in the same Mobility Domain\n# format: &lt;MAC address&gt; &lt;R1KH-ID&gt; &lt;128-bit key as hex string&gt;\n# This list is used to map R1KH-ID to a destination MAC address when sending\n# PMK-R1 key from the R0KH. This is also the list of authorized R1KHs in the MD\n# that can request PMK-R1 keys.\n#r1kh=02:01:02:03:04:05 02:11:22:33:44:55 000102030405060708090a0b0c0d0e0f\n#r1kh=02:01:02:03:04:06 02:11:22:33:44:66 00112233445566778899aabbccddeeff\n# And so on.. One line per R1KH.\n\n# Whether PMK-R1 push is enabled at R0KH\n# 0 = do not push PMK-R1 to all configured R1KHs (default)\n# 1 = push PMK-R1 to all configured R1KHs whenever a new PMK-R0 is derived\n#pmk_r1_push=1\n\n##### Neighbor table ##########################################################\n# Maximum number of entries kept in AP table (either for neigbor table or for\n# detecting Overlapping Legacy BSS Condition). The oldest entry will be\n# removed when adding a new entry that would make the list grow over this\n# limit. Note! WFA certification for IEEE 802.11g requires that OLBC is\n# enabled, so this field should not be set to 0 when using IEEE 802.11g.\n# default: 255\n#ap_table_max_size=255\n\n# Number of seconds of no frames received after which entries may be deleted\n# from the AP table. Since passive scanning is not usually performed frequently\n# this should not be set to very small value. In addition, there is no\n# guarantee that every scan cycle will receive beacon frames from the\n# neighboring APs.\n# default: 60\n#ap_table_expiration_time=3600\n\n\n##### Wi-Fi Protected Setup (WPS) #############################################\n\n# WPS state\n# 0 = WPS disabled (default)\n# 1 = WPS enabled, not configured\n# 2 = WPS enabled, configured\n#wps_state=2\n\n# AP can be configured into a locked state where new WPS Registrar are not\n# accepted, but previously authorized Registrars (including the internal one)\n# can continue to add new Enrollees.\n#ap_setup_locked=1\n\n# Universally Unique IDentifier (UUID; see RFC 4122) of the device\n# This value is used as the UUID for the internal WPS Registrar. If the AP\n# is also using UPnP, this value should be set to the device's UPnP UUID.\n# If not configured, UUID will be generated based on the local MAC address.\n#uuid=12345678-9abc-def0-1234-56789abcdef0\n\n# Note: If wpa_psk_file is set, WPS is used to generate random, per-device PSKs\n# that will be appended to the wpa_psk_file. If wpa_psk_file is not set, the\n# default PSK (wpa_psk/wpa_passphrase) will be delivered to Enrollees. Use of\n# per-device PSKs is recommended as the more secure option (i.e., make sure to\n# set wpa_psk_file when using WPS with WPA-PSK).\n\n# When an Enrollee requests access to the network with PIN method, the Enrollee\n# PIN will need to be entered for the Registrar. PIN request notifications are\n# sent to hostapd ctrl_iface monitor. In addition, they can be written to a\n# text file that could be used, e.g., to populate the AP administration UI with\n# pending PIN requests. If the following variable is set, the PIN requests will\n# be written to the configured file.\n#wps_pin_requests=/var/run/hostapd_wps_pin_requests\n\n# Device Name\n# User-friendly description of device; up to 32 octets encoded in UTF-8\n#device_name=Wireless AP\n\n# Manufacturer\n# The manufacturer of the device (up to 64 ASCII characters)\n#manufacturer=Company\n\n# Model Name\n# Model of the device (up to 32 ASCII characters)\n#model_name=WAP\n\n# Model Number\n# Additional device description (up to 32 ASCII characters)\n#model_number=123\n\n# Serial Number\n# Serial number of the device (up to 32 characters)\n#serial_number=12345\n\n# Primary Device Type\n# Used format: &lt;categ&gt;-&lt;OUI&gt;-&lt;subcateg&gt;\n# categ = Category as an integer value\n# OUI = OUI and type octet as a 4-octet hex-encoded value; 0050F204 for\n#       default WPS OUI\n# subcateg = OUI-specific Sub Category as an integer value\n# Examples:\n#   1-0050F204-1 (Computer / PC)\n#   1-0050F204-2 (Computer / Server)\n#   5-0050F204-1 (Storage / NAS)\n#   6-0050F204-1 (Network Infrastructure / AP)\n#device_type=6-0050F204-1\n\n# OS Version\n# 4-octet operating system version number (hex string)\n#os_version=01020300\n\n# Config Methods\n# List of the supported configuration methods\n# Available methods: usba ethernet label display ext_nfc_token int_nfc_token\n#   nfc_interface push_button keypad virtual_display physical_display\n#   virtual_push_button physical_push_button\n#config_methods=label virtual_display virtual_push_button keypad\n\n# WPS capability discovery workaround for PBC with Windows 7\n# Windows 7 uses incorrect way of figuring out AP's WPS capabilities by acting\n# as a Registrar and using M1 from the AP. The config methods attribute in that\n# message is supposed to indicate only the configuration method supported by\n# the AP in Enrollee role, i.e., to add an external Registrar. For that case,\n# PBC shall not be used and as such, the PushButton config method is removed\n# from M1 by default. If pbc_in_m1=1 is included in the configuration file,\n# the PushButton config method is left in M1 (if included in config_methods\n# parameter) to allow Windows 7 to use PBC instead of PIN (e.g., from a label\n# in the AP).\n#pbc_in_m1=1\n\n# Static access point PIN for initial configuration and adding Registrars\n# If not set, hostapd will not allow external WPS Registrars to control the\n# access point. The AP PIN can also be set at runtime with hostapd_cli\n# wps_ap_pin command. Use of temporary (enabled by user action) and random\n# AP PIN is much more secure than configuring a static AP PIN here. As such,\n# use of the ap_pin parameter is not recommended if the AP device has means for\n# displaying a random PIN.\n#ap_pin=12345670\n\n# Skip building of automatic WPS credential\n# This can be used to allow the automatically generated Credential attribute to\n# be replaced with pre-configured Credential(s).\n#skip_cred_build=1\n\n# Additional Credential attribute(s)\n# This option can be used to add pre-configured Credential attributes into M8\n# message when acting as a Registrar. If skip_cred_build=1, this data will also\n# be able to override the Credential attribute that would have otherwise been\n# automatically generated based on network configuration. This configuration\n# option points to an external file that much contain the WPS Credential\n# attribute(s) as binary data.\n#extra_cred=hostapd.cred\n\n# Credential processing\n#   0 = process received credentials internally (default)\n#   1 = do not process received credentials; just pass them over ctrl_iface to\n#   external program(s)\n#   2 = process received credentials internally and pass them over ctrl_iface\n#   to external program(s)\n# Note: With wps_cred_processing=1, skip_cred_build should be set to 1 and\n# extra_cred be used to provide the Credential data for Enrollees.\n#\n# wps_cred_processing=1 will disabled automatic updates of hostapd.conf file\n# both for Credential processing and for marking AP Setup Locked based on\n# validation failures of AP PIN. An external program is responsible on updating\n# the configuration appropriately in this case.\n#wps_cred_processing=0\n\n# AP Settings Attributes for M7\n# By default, hostapd generates the AP Settings Attributes for M7 based on the\n# current configuration. It is possible to override this by providing a file\n# with pre-configured attributes. This is similar to extra_cred file format,\n# but the AP Settings attributes are not encapsulated in a Credential\n# attribute.\n#ap_settings=hostapd.ap_settings\n\n# WPS UPnP interface\n# If set, support for external Registrars is enabled.\n#upnp_iface=br0\n\n# Friendly Name (required for UPnP)\n# Short description for end use. Should be less than 64 characters.\n#friendly_name=WPS Access Point\n\n# Manufacturer URL (optional for UPnP)\n#manufacturer_url=http://www.example.com/\n\n# Model Description (recommended for UPnP)\n# Long description for end user. Should be less than 128 characters.\n#model_description=Wireless Access Point\n\n# Model URL (optional for UPnP)\n#model_url=http://www.example.com/model/\n\n# Universal Product Code (optional for UPnP)\n# 12-digit, all-numeric code that identifies the consumer package.\n#upc=123456789012\n\n##### Wi-Fi Direct (P2P) ######################################################\n\n# Enable P2P Device management\n#manage_p2p=1\n\n# Allow cross connection\n#allow_cross_connection=1\n\n#### TDLS (IEEE 802.11z-2010) #################################################\n\n# Prohibit use of TDLS in this BSS\n#tdls_prohibit=1\n\n# Prohibit use of TDLS Channel Switching in this BSS\n#tdls_prohibit_chan_switch=1\n\n##### IEEE 802.11v-2011 #######################################################\n\n# Time advertisement\n# 0 = disabled (default)\n# 2 = UTC time at which the TSF timer is 0\n#time_advertisement=2\n\n# Local time zone as specified in 8.3 of IEEE Std 1003.1-2004:\n# stdoffset[dst[offset][,start[/time],end[/time]]]\n#time_zone=EST5\n\n##### IEEE 802.11u-2011 #######################################################\n\n# Enable Interworking service\n#interworking=1\n\n# Access Network Type\n# 0 = Private network\n# 1 = Private network with guest access\n# 2 = Chargeable public network\n# 3 = Free public network\n# 4 = Personal device network\n# 5 = Emergency services only network\n# 14 = Test or experimental\n# 15 = Wildcard\n#access_network_type=0\n\n# Whether the network provides connectivity to the Internet\n# 0 = Unspecified\n# 1 = Network provides connectivity to the Internet\n#internet=1\n\n# Additional Step Required for Access\n# Note: This is only used with open network, i.e., ASRA shall ne set to 0 if\n# RSN is used.\n#asra=0\n\n# Emergency services reachable\n#esr=0\n\n# Unauthenticated emergency service accessible\n#uesa=0\n\n# Venue Info (optional)\n# The available values are defined in IEEE Std 802.11u-2011, 7.3.1.34.\n# Example values (group,type):\n# 0,0 = Unspecified\n# 1,7 = Convention Center\n# 1,13 = Coffee Shop\n# 2,0 = Unspecified Business\n# 7,1  Private Residence\n#venue_group=7\n#venue_type=1\n\n# Homogeneous ESS identifier (optional; dot11HESSID)\n# If set, this shall be identifical to one of the BSSIDs in the homogeneous\n# ESS and this shall be set to the same value across all BSSs in homogeneous\n# ESS.\n#hessid=02:03:04:05:06:07\n\n# Roaming Consortium List\n# Arbitrary number of Roaming Consortium OIs can be configured with each line\n# adding a new OI to the list. The first three entries are available through\n# Beacon and Probe Response frames. Any additional entry will be available only\n# through ANQP queries. Each OI is between 3 and 15 octets and is configured a\n# a hexstring.\n#roaming_consortium=021122\n#roaming_consortium=2233445566\n\n##### Multiple BSSID support ##################################################\n#\n# Above configuration is using the default interface (wlan#, or multi-SSID VLAN\n# interfaces). Other BSSIDs can be added by using separator 'bss' with\n# default interface name to be allocated for the data packets of the new BSS.\n#\n# hostapd will generate BSSID mask based on the BSSIDs that are\n# configured. hostapd will verify that dev_addr &amp; MASK == dev_addr. If this is\n# not the case, the MAC address of the radio must be changed before starting\n# hostapd (ifconfig wlan0 hw ether &lt;MAC addr&gt;). If a BSSID is configured for\n# every secondary BSS, this limitation is not applied at hostapd and other\n# masks may be used if the driver supports them (e.g., swap the locally\n# administered bit)\n#\n# BSSIDs are assigned in order to each BSS, unless an explicit BSSID is\n# specified using the 'bssid' parameter.\n# If an explicit BSSID is specified, it must be chosen such that it:\n# - results in a valid MASK that covers it and the dev_addr\n# - is not the same as the MAC address of the radio\n# - is not the same as any other explicitly specified BSSID\n#\n# Please note that hostapd uses some of the values configured for the first BSS\n# as the defaults for the following BSSes. However, it is recommended that all\n# BSSes include explicit configuration of all relevant configuration items.\n#\n#bss=wlan0_0\n#ssid=test2\n# most of the above items can be used here (apart from radio interface specific\n# items, like channel)\n\n#bss=wlan0_1\n#bssid=00:13:10:95:fe:0b\n# ...\n\nEOF\n\n#append settings\necho hw_mode=${hw_mode} &gt;&gt; $HOSTAP_CONFIG_FILE\necho channel=${channel} &gt;&gt; $HOSTAP_CONFIG_FILE\n############################################\n        GREEN='\\033[1;32m'\n        NC='\\033[0m' # No Color\n        sync\n        sleep 1\n\n        hostapd ${HOSTAP_CONFIG_FILE} &amp;\n        HOSTAPD_PID=$!\n        sleep 5\n        echo -e \"${GREEN}Transmit started on mode when ready:$hw_mode and channel:$channel!${NC}\"\n        read -p \"Press any key to continue, but first connect a PC to this machines ssid(test) network or the test_script will wait forever in iperf\\n\"\n\n        iperf -B 192.168.20.100 -c 192.168.20.20 -u -b 100M -t $SEND_TIME_IN_SEC\n        echo -e \"${GREEN}transmit end${NC}\"\n        ifconfig wlan0\n\n         kill -0 \"$HOSTAPD_PID\"\n          if [  $? == 0 ]; then\n            echo -e \"${GREEN}stop hostapd start${NC}\"\n            kill -9 \"$HOSTAPD_PID\"\n            ip link set mon.wlan0 down\n            ip link set wlan0 down\n            echo -e  \"${GREEN}stop hostapd end${NC}\"\n          fi \n        sleep 1\n        sync\n        echo -e \"${GREEN}killed $HOSTAPD_PID and start over${NC}\"\n\n\n    done\ndone\n</code></pre></p>","tags":["WiFi","T30","T30 FR","CT","CT GL"]},{"location":"interfaces/mxv/analog/","title":"Analog Inputs (ADC) (MX-V)","text":"","tags":["ADC","MX-V"]},{"location":"interfaces/mxv/analog/#overview","title":"Overview","text":"<p>This platform uses IIO for read adc. The raw value is in mili volt and the list of supported input voltage.</p>","tags":["ADC","MX-V"]},{"location":"interfaces/mxv/analog/#list-of-supported-analog-inputs","title":"List of supported Analog inputs","text":"<p>DIG is also digital input, KL15 is start signals, and KL30 is input power.</p> <ul> <li>in_voltage0_AN_IN_AN_1_label</li> <li>in_voltage0_AN_IN_AN_1_offset</li> <li>in_voltage0_AN_IN_AN_1_raw</li> <li>in_voltage0_AN_IN_AN_1_scale</li> <li>in_voltage10_DIG_IN_AN_4_label</li> <li>in_voltage10_DIG_IN_AN_4_offset</li> <li>in_voltage10_DIG_IN_AN_4_raw</li> <li>in_voltage10_DIG_IN_AN_4_scale</li> <li>in_voltage11_DIG_IN_AN_5_label</li> <li>in_voltage11_DIG_IN_AN_5_offset</li> <li>in_voltage11_DIG_IN_AN_5_raw</li> <li>in_voltage11_DIG_IN_AN_5_scale</li> <li>in_voltage12_DIG_IN_AN_6_label</li> <li>in_voltage12_DIG_IN_AN_6_offset</li> <li>in_voltage12_DIG_IN_AN_6_raw</li> <li>in_voltage12_DIG_IN_AN_6_scale</li> <li>in_voltage13_DIG_IN_AN_7_label</li> <li>in_voltage13_DIG_IN_AN_7_offset</li> <li>in_voltage13_DIG_IN_AN_7_raw</li> <li>in_voltage13_DIG_IN_AN_7_scale</li> <li>in_voltage14_DIG_IN_AN_8_label</li> <li>in_voltage14_DIG_IN_AN_8_offset</li> <li>in_voltage14_DIG_IN_AN_8_raw</li> <li>in_voltage14_DIG_IN_AN_8_scale</li> <li>in_voltage15_DIGITAL_IN_1_label</li> <li>in_voltage15_DIGITAL_IN_1_offset</li> <li>in_voltage15_DIGITAL_IN_1_raw</li> <li>in_voltage15_DIGITAL_IN_1_scale</li> <li>in_voltage16_DIGITAL_IN_2_label</li> <li>in_voltage16_DIGITAL_IN_2_offset</li> <li>in_voltage16_DIGITAL_IN_2_raw</li> <li>in_voltage16_DIGITAL_IN_2_scale</li> <li>in_voltage17_DIGITAL_IN_3_label</li> <li>in_voltage17_DIGITAL_IN_3_offset</li> <li>in_voltage17_DIGITAL_IN_3_raw</li> <li>in_voltage17_DIGITAL_IN_3_scale</li> <li>in_voltage18_DIGITAL_IN_4_label</li> <li>in_voltage18_DIGITAL_IN_4_offset</li> <li>in_voltage18_DIGITAL_IN_4_raw</li> <li>in_voltage18_DIGITAL_IN_4_scale</li> <li>in_voltage19_DIGITAL_IN_5_label</li> <li>in_voltage19_DIGITAL_IN_5_offset</li> <li>in_voltage19_DIGITAL_IN_5_raw</li> <li>in_voltage19_DIGITAL_IN_5_scale</li> <li>in_voltage1_AN_IN_AN_2_label</li> <li>in_voltage1_AN_IN_AN_2_offset</li> <li>in_voltage1_AN_IN_AN_2_raw</li> <li>in_voltage1_AN_IN_AN_2_scale</li> <li>in_voltage20_DIGITAL_IN_6_label</li> <li>in_voltage20_DIGITAL_IN_6_offset</li> <li>in_voltage20_DIGITAL_IN_6_raw</li> <li>in_voltage20_DIGITAL_IN_6_scale</li> <li>in_voltage21_DIGITAL_IN_7_label</li> <li>in_voltage21_DIGITAL_IN_7_offset</li> <li>in_voltage21_DIGITAL_IN_7_raw</li> <li>in_voltage21_DIGITAL_IN_7_scale</li> <li>in_voltage22_DIGITAL_IN_8_label</li> <li>in_voltage22_DIGITAL_IN_8_offset</li> <li>in_voltage22_DIGITAL_IN_8_raw</li> <li>in_voltage22_DIGITAL_IN_8_scale</li> <li>in_voltage2_AN_IN_AN_3_label</li> <li>in_voltage2_AN_IN_AN_3_offset</li> <li>in_voltage2_AN_IN_AN_3_raw</li> <li>in_voltage2_AN_IN_AN_3_scale</li> <li>in_voltage3_AN_IN_AN_4_label</li> <li>in_voltage3_AN_IN_AN_4_offset</li> <li>in_voltage3_AN_IN_AN_4_raw</li> <li>in_voltage3_AN_IN_AN_4_scale</li> <li>in_voltage4_AN_IN_AN_5_label</li> <li>in_voltage4_AN_IN_AN_5_offset</li> <li>in_voltage4_AN_IN_AN_5_raw</li> <li>in_voltage4_AN_IN_AN_5_scale</li> <li>in_voltage5_KL15_AN_label</li> <li>in_voltage5_KL15_AN_offset</li> <li>in_voltage5_KL15_AN_raw</li> <li>in_voltage5_KL15_AN_scale</li> <li>in_voltage6_KL30_AN_label</li> <li>in_voltage6_KL30_AN_offset</li> <li>in_voltage6_KL30_AN_raw</li> <li>in_voltage6_KL30_AN_scale</li> <li>in_voltage7_DIG_IN_AN_1_label</li> <li>in_voltage7_DIG_IN_AN_1_offset</li> <li>in_voltage7_DIG_IN_AN_1_raw</li> <li>in_voltage7_DIG_IN_AN_1_scale</li> <li>in_voltage8_DIG_IN_AN_2_label</li> <li>in_voltage8_DIG_IN_AN_2_offset</li> <li>in_voltage8_DIG_IN_AN_2_raw</li> <li>in_voltage8_DIG_IN_AN_2_scale</li> <li>in_voltage9_DIG_IN_AN_3_label</li> <li>in_voltage9_DIG_IN_AN_3_offset</li> <li>in_voltage9_DIG_IN_AN_3_raw</li> <li>in_voltage9_DIG_IN_AN_3_scale</li> </ul>","tags":["ADC","MX-V"]},{"location":"interfaces/mxv/can/","title":"CAN (MX-V)","text":"","tags":["CAN","MX-V"]},{"location":"interfaces/mxv/can/#overview","title":"Overview","text":"<p>3 CAN 2.0B channels, typically named <code>can0</code> to <code>can2</code>. </p>","tags":["CAN","MX-V"]},{"location":"interfaces/mxv/digital_io/","title":"Digital I/O (MX-V)","text":"","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#overview","title":"Overview","text":"<p>MX-V has 8 digital out that can be used as either sink or source on the same pin: digital-out-source or digital-out-sink with a number.</p>","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#gpiodetect","title":"Gpiodetect","text":"<p>By using gpiodetect, a list of the GPIO chips in the system is shown.</p> <pre><code>root@mxv-pt:~# gpiodetect\ngpiochip0 [209c000.gpio] (32 lines)\ngpiochip1 [20a0000.gpio] (32 lines)\ngpiochip10 [digital_in] (13 lines)\ngpiochip2 [20a4000.gpio] (32 lines)\ngpiochip3 [20a8000.gpio] (32 lines)\ngpiochip4 [20ac000.gpio] (32 lines)\ngpiochip5 [20b0000.gpio] (32 lines)\ngpiochip6 [20b4000.gpio] (32 lines)\ngpiochip7 [modem_control] (4 lines)\ngpiochip8 [ncv7751] (32 lines)\ngpiochip9 [gpio_overlay] (25 lines)\n</code></pre>","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#digital-out","title":"Digital out","text":"","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#overview_1","title":"Overview","text":"<p>The digital out channels (lines) have been collected in an <code>overlay</code> virtual chip that also restricts the user from changing the direction of the signal (which can usually be done for these generic I/Os).</p> <p>With the <code>gpioinfo</code> command, the available channels are listed.</p> <pre><code>root@mxv-pt:~# gpioinfo gpio_overlay\ngpiochip9 - 25 lines:\n        line   0: \"digital-out-source-0\" unused input active-high\n        line   1: \"digital-out-source-1\" unused input active-high\n        line   2: \"digital-out-source-2\" unused input active-high\n        line   3: \"digital-out-source-3\" unused input active-high\n        line   4: \"digital-out-source-4\" unused input active-high\n        line   5: \"digital-out-source-5\" unused input active-high\n        line   6: \"digital-out-source-6\" unused input active-high\n        line   7: \"digital-out-source-7\" unused input active-high\n        line   8: \"digital-out-oc-0\" unused input active-high\n        line   9: \"digital-out-oc-1\" unused input active-high\n        line  10: \"digital-out-oc-2\" unused input active-high\n        line  11: \"digital-out-oc-3\" unused input active-high\n        line  12: \"digital-out-oc-4\" unused input active-high\n        line  13: \"digital-out-oc-5\" unused input active-high\n        line  14: \"digital-out-oc-6\" unused input active-high\n        line  15: \"digital-out-oc-7\" unused input active-high\n        line  16: \"digital-out-sink-0\" unused input active-high\n        line  17: \"digital-out-sink-1\" unused input active-high\n        line  18: \"digital-out-sink-2\" unused input active-high\n        line  19: \"digital-out-sink-3\" unused input active-high\n        line  20: \"digital-out-sink-4\" unused input active-high\n        line  21: \"digital-out-sink-5\" unused input active-high\n        line  22: \"digital-out-sink-6\" unused input active-high\n        line  23: \"digital-out-sink-7\" unused input active-high\n        line  24: \"digital-out-enable\" unused input active-high\n</code></pre> <p>To find a specific signal, the <code>gpiofind</code> command can be used:</p> <pre><code>root@mxv-pt:~# gpiofind digital-out-enable\ngpiochip9 24\n</code></pre>","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#enable-digital-out","title":"Enable digital out","text":"<p>To enable digital out, the <code>digital-out-enable</code> line needs to be set to high.</p> <p>We can use the <code>gpioset</code> command in combination with <code>gpiofind</code> in <code>bash</code>.</p> <pre><code>root@mxv-pt:~# gpioset $(gpiofind digital-out-enable)=1\n</code></pre>","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#digital-out-high-and-low","title":"Digital out high and low","text":"<p>The digital out drivers can both source and sink current. The 8 source drivers are controlled with <code>digital-out-source-0..7</code> and the sink drivers with <code>digital-out-sink-0..7</code>. For a specific channel, the source and sink drivers cannot be used at the same time.</p> <pre><code>root@mxv-pt:~# gpioset $(gpiofind digital-out-source-0)=1\n</code></pre>","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#over-current-sense","title":"Over-current sense","text":"<p>For each digital-out-source-n there is a digital-out-oc-n which can be read to detect short-circuits.</p> <pre><code>root@mxv-pt:~# gpioget $(gpiofind digital-out-oc-0)\n</code></pre>","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#debugging","title":"Debugging","text":"<p><code>/sys/kernel/debug/gpio</code> can be read to get the kernel's view of the GPIO status.</p> <pre><code>root@mxv-pt:~# cat /sys/kernel/debug/gpio | grep -i dig\n gpio-48  (DIG_OUT_LO_1        |DIG-OUT-LO          ) out hi\n gpio-49  (DIG_OUT_EN          |DIG-OUT-EN          ) out hi\n gpio-64  (DIG_OUT_HI_1        |DIG-OUT-HI          ) out hi\n gpio-65  (DIG_OUT_HI_2        |DIG-OUT-HI          ) out lo\n gpio-66  (DIG_OUT_HI_3        |DIG-OUT-HI          ) out lo\n gpio-67  (DIG_OUT_HI_4        |DIG-OUT-HI          ) out lo\n gpio-68  (DIG_OUT_HI_5        |DIG-OUT-HI          ) out lo\n gpio-69  (DIG_OUT_HI_6        |DIG-OUT-HI          ) out lo\n gpio-70  (DIG_OUT_HI_7        |DIG-OUT-HI          ) out lo\n gpio-71  (DIG_OUT_HI_8        |DIG-OUT-HI          ) out lo\n gpio-72  (DIG_OUT_HI_OC_1     |DIG-OUT-HI-OC       ) in  hi\n gpio-73  (DIG_OUT_HI_OC_2     |DIG-OUT-HI-OC       ) in  lo\n gpio-74  (DIG_OUT_HI_OC_3     |DIG-OUT-HI-OC       ) in  lo\n gpio-75  (DIG_OUT_HI_OC_4     |DIG-OUT-HI-OC       ) in  lo\n gpio-76  (DIG_OUT_HI_OC_5     |DIG-OUT-HI-OC       ) in  hi\n gpio-77  (DIG_OUT_HI_OC_6     |DIG-OUT-HI-OC       ) in  lo\n gpio-78  (DIG_OUT_HI_OC_7     |DIG-OUT-HI-OC       ) in  hi\n gpio-79  (DIG_OUT_HI_OC_8     |DIG-OUT-HI-OC       ) in  lo\n gpio-166 (DIG_OUT_LO_2        |DIG-OUT-LO          ) out hi\n gpio-493 (digital-out-source-0|gpioset             ) in  hi\n gpio-494 (digital-out-source-1)\n gpio-495 (digital-out-source-2)\n gpio-496 (digital-out-source-3)\n gpio-497 (digital-out-source-4)\n gpio-498 (digital-out-source-5)\n gpio-499 (digital-out-source-6)\n gpio-500 (digital-out-source-7)\n gpio-501 (digital-out-oc-0    )\n gpio-502 (digital-out-oc-1    )\n gpio-503 (digital-out-oc-2    )\n gpio-504 (digital-out-oc-3    )\n gpio-505 (digital-out-oc-4    )\n gpio-506 (digital-out-oc-5    )\n gpio-507 (digital-out-oc-6    )\n gpio-508 (digital-out-oc-7    )\n gpio-509 (digital-out-sink-0  )\n gpio-510 (digital-out-sink-1  )\n gpio-511 (digital-out-enable  )\n</code></pre>","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/digital_io/#digital-in","title":"Digital in","text":"<p>This unit has 13 digital and analog in (adc) channels using iio devices.</p> <pre><code> gpioget $(gpiofind digital-in-1)\n gpioget $(gpiofind digital-in-2)\n gpioget $(gpiofind digital-in-3)\n gpioget $(gpiofind digital-in-4)\n gpioget $(gpiofind digital-in-5)\n gpioget $(gpiofind digital-in-6)\n gpioget $(gpiofind digital-in-7)\n gpioget $(gpiofind digital-in-8)\n\n # analog way to access the value\n cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_0_raw\n cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_1_raw\n cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_2_raw\n cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_3_raw\n cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_4_raw\n cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_5_raw\n cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_6_raw\n cat /sys/bus/iio/devices/iio:device0/*DIG_IN_AN_7_raw\n\n cat /sys/bus/iio/devices/iio:device0/*AN_IN_AN_1_raw\n cat /sys/bus/iio/devices/iio:device0/*AN_IN_AN_2_raw\n cat /sys/bus/iio/devices/iio:device0/*AN_IN_AN_3_raw\n cat /sys/bus/iio/devices/iio:device0/*AN_IN_AN_4_raw\n cat /sys/bus/iio/devices/iio:device0/*AN_IN_AN_5_raw\n</code></pre>","tags":["Digital I/O","MX-V"]},{"location":"interfaces/mxv/ethernet/","title":"Ethernet (MX-V)","text":"","tags":["Ethernet","MX-V"]},{"location":"interfaces/mxv/ethernet/#overview","title":"Overview","text":"<p>This product has two RJ45 Ethernet ports: <code>eth0</code> with support for 100BASE-TX and 1000BASE-T. and <code>eth1</code> with support for 10BASE-T and 100BASE-TX.</p>","tags":["Ethernet","MX-V"]},{"location":"interfaces/mxv/ethernet/#default-ip-addresses-and-interface-names","title":"Default IP addresses and interface names","text":"<p>Ethernet interfaces are configured to request their IP addresses using DHCP with a fallback to static addresses (192.168.1.200 for eth0 and 192.168.2.200 for eth1). </p>","tags":["Ethernet","MX-V"]},{"location":"interfaces/mxv/ethernet/#controlling-network-with-if-up","title":"Controlling network with if-up","text":"<p>Note: For BSP release 1.6/1.5 and older but will work for MX-V</p> <p>See scripts in <code>/etc/network/if-up.d</code> for details.</p>","tags":["Ethernet","MX-V"]},{"location":"interfaces/mxv/leds/","title":"LEDs (MX-V)","text":"","tags":["LED","MX-V"]},{"location":"interfaces/mxv/leds/#overview","title":"Overview","text":"<p>This platform has red and greed LEDs.</p> <p>Warning: Uncontrolled behavior of the GNSS red LED, after power on and which doesn't disappear in less than one second, indicates that the main CPU has been hanged. The coprocessor will then restart the system. If the problem persists, the platform has no working internal flash or BOR level is set to low for the coprocessor. If this happens, contact us at support@hostmobility.com and we will help you.</p> <p>When power up the \"func LED\" red is lit when the main processor has enter u-boot state and will be turned off by linux system.</p> <p>The power LED is controlled by the coprocessor and the func LED green is set up from device tree with heartbeat trigger and will blink if the system is running (average CPU load). The power led is lit green when co-cpu is running and sometimes the co-cpu lit the red led short it is currently some debug prints and if it is solid lit it has an error.</p>","tags":["LED","MX-V"]},{"location":"interfaces/mxv/leds/#the-following-leds-are-available-on-the-mx-v","title":"The following LEDs are available on the MX-V","text":"Name Use Case func_led_green Functional LED (Green) func_led_red Functional LED (Red) gps_led_green GNSS LED (Green) gps_led_red GNSS LED (Red) modem_led_green LTE LED (Green) modem_led_red LTE LED (Red) wifi_led_green Wi-Fi LED (Green) wifi_led_red Wi-Fi LED (Red)","tags":["LED","MX-V"]},{"location":"interfaces/mxv/modem/","title":"MX-V Modem","text":"","tags":["Modem","MX-V"]},{"location":"interfaces/mxv/modem/#overview","title":"Overview","text":"<p>The MX-V has a modem from Quectel called EG25 with a GPS receiver.</p>","tags":["Modem","MX-V"]},{"location":"interfaces/mxv/modem/#startingenabling-modem","title":"Starting/Enabling modem","text":"<p>The modem is turned off by default. To enable it, set the GPIO control line to 1.</p> <pre><code>root@mxv-pt:~# gpioinfo modem_control\ngpiochip8 - 4 lines:\n    line   0: \"MODEM_ENABLE_ON\" unused input active-high\n    line   1: \"MODEM_RESET\" unused input active-high\n    line   2: \"MODEM_POWER_ENABLE\" unused input active-high\n    line   3: \"MODEM_STATUS_ON\" unused input active-high\n</code></pre> <p>To find out if the modem is on, read the <code>MODEM_STATUS_ON</code> GPIO.</p> <pre><code>root@mxv-pt:~# gpioget $(gpiofind MODEM_STATUS_ON)\n0\n</code></pre> <p>Set <code>MODEM_ENABLE_ON</code> to 1: <pre><code>gpioset $(gpiofind MODEM_ENABLE_ON)=1\n</code></pre></p> <ul> <li>The modem takes about 10 seconds to start and register itself with the kernel. It then takes up to one minute before it is registered in the linux usb list.</li> <li>Check USB TTY device to see if it has shown up.</li> </ul> <pre><code>find /dev -name \"ttyUSB*\"\n</code></pre> <pre><code>/dev/ttyUSB3\n/dev/ttyUSB2\n/dev/ttyUSB1\n/dev/ttyUSB0\n</code></pre> <ul> <li>The modem also shows up with the <code>lsusb</code> command.</li> </ul> <pre><code>root@mxv-pt:~# lsusb | grep Quectel\nBus 001 Device 006: ID 2c7c:0125 Quectel Wireless Solutions Co., Ltd. EC25 LTE modem\n</code></pre>","tags":["Modem","MX-V"]},{"location":"interfaces/mxv/modem/#production-settingsdefault","title":"Production settings(default)","text":"<ul> <li>Sim card detect </li> <li>AT+QSIMDET=1,1 <ul> <li>Need restart to take affect</li> </ul> </li> <li>AT+QSIMSTAT?<ul> <li>0 Off, 1 On first parameter</li> </ul> </li> <li>Audio codec (TLV320AIC3104)</li> <li>AT+QDAI=5,0,0,4,0,1</li> <li>GPS (not confirmed)</li> <li>AT+QGPSCFG=\"autogps\",1</li> <li>AT+QGPSCFG=\"nmeasrc\",1</li> <li>Activate diversity antenna  </li> <li>AT+QCFG=\"diversity\" 1</li> </ul>","tags":["Modem","MX-V"]},{"location":"interfaces/mxv/modem/#test-sim-card","title":"Test SIM card","text":"","tags":["Modem","MX-V"]},{"location":"interfaces/mxv/modem/#gps","title":"GPS","text":"","tags":["Modem","MX-V"]},{"location":"interfaces/mxv/modem/#use-wvdial-to-get-a-broadband-connection","title":"Use WvDial to get a broadband connection","text":"","tags":["Modem","MX-V"]},{"location":"interfaces/mxv/modem/#audio","title":"Audio","text":"","tags":["Modem","MX-V"]},{"location":"interfaces/mxv/serial/","title":"Serial communication (MX-V)","text":"","tags":["RS-232","RS-485","MX-V"]},{"location":"interfaces/mxv/serial/#overview","title":"Overview","text":"<p>The MX-V features one RS-485 port (<code>/dev/ttymxc3</code>) and four RS-232 ports (<code>/dev/ttymxc0</code> for debug, <code>/dev/ttymxc1</code>, <code>/dev/ttymxc2</code>, <code>/dev/ttymxc4</code>).</p> <ul> <li>Console   <code>/dev/ttymxc0</code></li> <li>Rs232-1   <code>/dev/ttymxc4</code><ul> <li>supports RTS and CTS</li> </ul> </li> <li>Rs232-2   <code>/dev/ttymxc1</code></li> <li>Rs232-3   <code>/dev/ttymxc2</code></li> <li>RS-485     <code>/dev/ttymxc3</code></li> </ul>","tags":["RS-232","RS-485","MX-V"]},{"location":"interfaces/mxv/start_signal/","title":"Start signals","text":"","tags":["Start signals","MX-V"]},{"location":"interfaces/mxv/start_signal/#overview","title":"Overview","text":"<p>This unit has two start signals named KL15 and only one is needed to start the unit. Read the start signal and the output is in millivoltage.</p> <pre><code>cat /sys/bus/iio/devices/iio:device0/in_voltage5_KL15_AN_raw\n24234\n</code></pre>","tags":["Start signals","MX-V"]},{"location":"interfaces/mxv/usb/","title":"USB (MX-V)","text":"","tags":["USB","MX-V"]},{"location":"interfaces/mxv/usb/#overview","title":"Overview","text":"<p>This product features two USB-A 2.0 ports: one is a USB OTG (usb0) and another (usb1) functioning as USB host.</p>","tags":["USB","MX-V"]},{"location":"interfaces/mxv/wifi/","title":"WiFi (MX-V)","text":"","tags":["WiFi","MX-V"]},{"location":"interfaces/mxv/wifi/#overview","title":"Overview","text":"<ul> <li>Chip: SPB209A H&amp;D wireless</li> <li>Interface name: mlan0</li> <li>Available protocols: 802.11 b/g/n/ac with bluetooth</li> </ul>","tags":["WiFi","MX-V"]},{"location":"product/host-monitor-x/","title":"Platform Host Monitor X","text":"","tags":["HMX"]},{"location":"product/host-monitor-x/#abstract","title":"Abstract","text":"<p>Host Monitor X is the next generation telematics computer for modern automotive development.</p>","tags":["HMX"]},{"location":"product/host-monitor-x/#feature-summary-for-hm010-1","title":"Feature summary for HM010-****1","text":"<p>See Production Variant Definition</p> Feature Summary CPU NXP i.MX 8M Plus (64 bit) with Cortex M7 co-processor Accelerometer 3-axis Buzzer Internal and power for external CAN 6x CAN-FD Ethernet 2x 100/1000 Base-T1 (Rosenberger), 2x 100-BaseTx (RJ45 and MX34) External Logging \u00b5SD Card GPS Included in modem, external antenna Housing Aluminium/plastic Start Signals External input, 2.5-36V (5 inputs) Internal Storage 64 GB eMMC LEDs 5 red+green (yellow in combination), 1 RGB Modem 5G or 4G, M2 connector Nominal Voltage 12-24V Operating Temperature -40C to +65C Operating System Yocto Kirkstone, Linux kernel 6.1 Power Consumption @12V &lt; 1 mA in \"Off\", 25 mA  in \"Suspend to RAM\" Protection IP30 RAM 4 GB DDR4 Real Time Clock Yes, backed up by CR2032 coin cell battery SIM nanoSIM Low power mode Suspend to RAM. Wakes on CAN, digital inputs, accelerometer, RTC, and start signals Size without connectors 164x164x30mm UPS 3 seconds supercap power USB USB 3.0 OTG type C, USB 2.0 host type A Sleep-Mode Low power sleep mode","tags":["HMX"]},{"location":"product/host-monitor-x/#production-variant-definition","title":"Production variant definition","text":"<p>The production part numbers start with HM010-*****-revision, read from left to right. For the first variant number, the processor module is followed by the modem. If no other parameters are stated, the part number will be HM010-00011-revision.</p>","tags":["HMX"]},{"location":"product/host-monitor-x/#processor-module","title":"Processor module","text":"Processor ID Module Part Number Description 0 No module 1 hMOD0009-R1A (Arena) i.MX 8M Plus with Quad Core CPU, 4GB DRAM and 64GB EMMC 2 TBD (Arena) i.MX 8M Plus with Quad Core CPU, 4GB DRAM, 64GB EMMC and Wi-Fi.","tags":["HMX"]},{"location":"product/host-monitor-x/#modem-module","title":"Modem module","text":"Modem ID Module Part Number Description 0 No module 1 hMOD0010-03 (Arena) 4G global modem 2 TBD (Arena) 5G global modem n\u2026","tags":["HMX"]},{"location":"product/host-monitor-x/#micro-sd-card-module","title":"Micro SD Card module","text":"Micro SD Card ID Module Part Number Description 0 No SD card 1 hBMT0003 (Arena) Samsung uSDHC EVO 32GB Class 10 2 hBMT0002 (Arena) 32GB Sandisk UHS Class 1","tags":["HMX"]},{"location":"product/host-monitor-x/#sim-card-module","title":"SIM Card module","text":"SIM Card ID Module Part Number Description 0 No module 1 Reserved for customer","tags":["HMX"]},{"location":"product/host-monitor-x/#customer-customization","title":"Customer customization","text":"<p>This is for customers that want extra installation of software, additional labels or similar within design limitations.</p> Customer ID Customer Tweaks Description 0 Default No customization, only delivered with our reference BSP 1 Reserved for customer","tags":["HMX"]},{"location":"product/host-monitor-x/#list-of-known-products","title":"List of known products","text":"Products Product part number Description Default HM010-00111-V6B 4G modem and SD card, only delivered with our reference BSP HM010-11111-V6B Reserved for customer with 4G modem, SIM card, SD card and customization <p>Note: For Host Mobility employees, update this page after making changes to internal document FILE-000768 (800155-HMX-Product label spec).</p>","tags":["HMX"]},{"location":"product/host-monitor-x/#connectors-and-buttons","title":"Connectors and buttons","text":"","tags":["HMX"]},{"location":"product/host-monitor-x/#technical-specification","title":"Technical specification","text":"<p>Please contact support to receive detailed technical specification for this hardware.</p>","tags":["HMX"]},{"location":"product/mx-v/","title":"Platform MX-V","text":"","tags":["MX-V"]},{"location":"product/mx-v/#overview-and-installation","title":"Overview and installation","text":"","tags":["MX-V"]},{"location":"product/mx-v/#connectors","title":"Connectors","text":"<p>The MX-V has the following connectors accessible from the outside.</p> <p></p> <ol> <li>DVI connector for display</li> <li>two RJ45 Ethernet ports</li> <li>two USB type A connectors</li> <li>antenna connectors for GPS, WiFi and mobile</li> <li>34-pin I/O connector, including serial interfaces, see below</li> <li>34-pin I/O connector, including power and CAN, see below</li> <li>SDHC card slot</li> <li>SIM card slot</li> <li>Optional M12 connectors for ethernet (can not be combine with RJ45 ports)</li> </ol>","tags":["MX-V"]},{"location":"product/mx-v/#io-connectors","title":"I/O connectors","text":"","tags":["MX-V"]},{"location":"product/mx-v/#power","title":"Power","text":"<p>KL30 is positive power terminal (red) and KL31 is negative (black). The units start when KL15 (yellow ignition input) is connected to positive input (e.g. battery voltage).</p>","tags":["MX-V"]},{"location":"product/mx-v/#digital-out","title":"Digital out","text":"<p>The digital out channels can both source and sink a load. When sourcing, enabling the channel (output pin) connects it to battery voltage, while sinking connects the channel to ground.</p>","tags":["MX-V"]},{"location":"product/mx-v/#analogdigital-in","title":"Analog/Digital in","text":"<p>The (5+8) analog/digital in channels can measure voltages up to 32V. The difference lies in the hardware filtering where analog is filtered at 25Hz and digital at 250Hz.</p>","tags":["MX-V"]},{"location":"product/mx-v/#initial-setup","title":"Initial setup","text":"<ul> <li> <p>Connect either Ethernet connector to a router to get an IP address   through DHCP. Alternatively, connect a male to male USB-A cable between   the MX-V and your workstation for direct network access.</p> </li> <li> <p>You can also access the machine without a workstation by connecting   a computer monitor along with a keyboard.</p> </li> <li> <p>Connect the MX-V harness to a power supply in the range 9 to   32V. Then nominal voltage is 24V.</p> </li> </ul> <p>The MX-V boots automatically when power and ignition are applied. The boot time depends on the configuration. For the current development build with a lot of things enabled it takes about 15 seconds.</p>","tags":["MX-V"]},{"location":"product/mx-v/#operating-system","title":"Operating system","text":"<p>The Host Mobility MX-V platform runs a custom built GNU/Linux operating system. The current kernel version is 4.19. To load the kernel, the U-Boot bootloader is used. The operating system for the MX-V is installed on the on-board eMMC memory. It contains the U-boot, kernel image plus device tree as well as the root file system.</p> <p>The MX-V is delivered with the operating system installed and you can login through a secure shell (SSH).</p>","tags":["MX-V"]},{"location":"product/mx4-c61/","title":"Platform MX-4 C61","text":"","tags":["C61"]},{"location":"product/mx4-c61/#abstract","title":"Abstract","text":"<p>MX-4 C61 is a small form factor and low cost telematics computer for remote diagnostics and fleet management.</p>","tags":["C61"]},{"location":"product/mx4-c61/#feature-summary-for-hm005-1","title":"Feature summary for HM005-1","text":"<p>See Production variant definition.</p> Feature Summary CPU (main) ARM Cortex-A5, 500 MHz single core CPU ARM Cortex-M4, 167 MHz single core Coprocessor PIC24 RAM 512 MB flash, 256 MB RAM Operating System Yocto Kirkstone, Linux kernel 4.19 Modem Global 4G module GPS Included in modem, external antenna Aux-Linux 1x 3pol aux for Linux Headphone L and R with mic Ethernet 10BASE-T and 100BASE-TX Ethernet USB 1 x USB 2.0 high-speed host/device (auto detect) CAN 3 x CAN 2.0 B RS485/J1708 1 x Rs-485 (or 1x J1708), product selection RS-232 1 x Rs-232 DIO-Analog Combine digital in, out and analog in Start Signals 1 x Start signal input (to boot the system using external signal) uSD-card \u00b5SD-card interface SuperCap Super Capacitor Operating Temperature Wide operating temperature: -40 to +85\u00b0C Operating voltage Wide input voltage range, 8-36 VDC Nominal Voltage 12-24V Sleep-Mode Low power sleep mode Real Time Clock Yes, backed up by rechargeable coin cell battery","tags":["C61"]},{"location":"product/mx4-c61/#production-variant-definition","title":"Production Variant Definition","text":"","tags":["C61"]},{"location":"product/mx4-c61/#list-of-known-products","title":"List of known products","text":"Products Product part number Description Default HM005-1 4G modem and SD card, only delivered with our reference BSP","tags":["C61"]},{"location":"product/mx4-c61/#connectors-and-buttons","title":"Connectors and buttons","text":"","tags":["C61"]},{"location":"product/mx4-c61/#dsub-15-connector","title":"Dsub 15 connector","text":"Pin Function Comment 1 CAN-1-H 2 CAN-1-L 3 CAN-2-H 4 CAN-2-L 5 CAN-3-H 6 CAN-3-L 7 INPUT-POWER 8 GND Reference for INPUT-POWER 9 DIG-IO-1 Output with source and sink and/or analog in and/or digital in 10 RS-485 or J1708 RS-485A or J1708A (default variant is RS-485 not J1708) 11 DIG-IO-2 Output with source and sink and/or analog in and/or digital in 12 RS-485 or J1708 RS-485B or J1708B (default variant is RS-485 not J1708) 13 START-SIGNAL Must be tied to INPUT-POWER for the unit to start 14 RS-232_RXD Rs-232 receive from pc (default debug) 15 RS-232_TXD Rs-232 transmit from device to pc (default debug) S GND The shield acts as a general-purpose GND","tags":["C61"]},{"location":"product/mx4-c61/#other-connector-and-buttons","title":"Other connector and buttons","text":"<ul> <li>Fakra red LTE/4G</li> <li>Fakra blue GPS</li> <li>RJ45</li> <li>Audio &amp; mic</li> <li>Reset button</li> <li>LEDs</li> </ul>","tags":["C61"]},{"location":"product/mx4-c61/#technical-specification","title":"Technical specification","text":"<p>Contact support to receive the technical specification (1301-HM005-Technical-description) for this hardware.</p>","tags":["C61"]},{"location":"product/mx4-ct-gl/","title":"Platform CT GL","text":"","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#abstract","title":"Abstract","text":"<p>MX-4 CT GL is a telematics computer for remote diagnostics and fleet management. This product can no longer be bought and similar functionality can be found on other products from us. So this page is for those that already have bought the CT GL product.</p>","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#feature-summary-for-hm001-ct-gl","title":"Feature summary for HM001 (CT GL)","text":"<p>See Production variant definition.</p> Feature Summary CPU (main) ARM Cortex-A9 CPU, Up to 1 GHz, dual Core Coprocessor PIC24 RAM 1GB SLC NAND flash, 512 MB RAM Operating System \u00c5ngstrom distribution built with yocto , Linux kernel  3.1.10 HDMI 1920x1080 VGA 1400x1050 Modem Global modem 4G (or for CT Europa or USA 4G module) GPS Included in modem, external antenna Modem audio Modem Headphone L and R and mono mic Linux audio Linux Headphone L and R and mono mic WIFI 802.11 b/g/n WiFi Ethernet 1x 10BASE-T and 100BASE-TX Ethernet Ethernet 1x 100BASE-TX and 1000BASE-T Ethernet, limit by USB 2.0 transfer USB 1 x USB 2.0 high-speed host/device (auto detect) USB 1 x USB 2.0 high-speed host CAN 3 x CAN 2.0 B J1708 1 x J1708 bus RS-232 2 x RS-232 bus RS-485 1 x RS-485 bus Digital inputs 6 x Digital inputs Digital outputs 7 x Digital outputs sink and source (older CT includes less functionality) Digital output 5V 1 x Digital output 5V Tachometer 1x Puls counter Analog inputs 1 x Analogue inputs (4-20 mA) Analog inputs 4 x Analog inputs 0-32 VDC (including the start signal) Start Signals 1 x Start signal input (to boot the system using external signal) SD-card SD-card interface Operating Temperature Wide operating temperature: -40 to +70\u00b0C Operating voltage Wide input voltage range, 8-32 VDC Nominal Voltage 12-24V Sleep-Mode Low power sleep mode Real Time Clock Yes, backed up by rechargeable coin cell battery","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#production-variant-definition","title":"Production variant definition","text":"","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#list-of-known-products","title":"List of known products","text":"<p>Contact Host Mobility. All product of CT GL variants start with HM001. Older Products called CT starts with HMP069.</p>","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#connectors-and-buttons","title":"Connectors and buttons","text":"","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#connector-digital-and-analog-io","title":"Connector \u2013 Digital and Analog I/O","text":"Pin Function Comment 1 CAN-1-H 2 CAN-1-L 3 CAN-2-H 4 CAN-2-L 5 DIG-OUTPUT-6 400mA current limitation 6 4-20mA-PWR Digital output 5, 400mA current limitation 7 DIG-OUTPUT-1 400mA current limitation 8 DIG-OUTPUT-2 400mA current limitation 9 DIG-OUTPUT-3 400mA current limitation 10 DIG-OUTPUT-4 400mA current limitation 11 DIG-INPUT-1 12 DIG-INPUT-2 13 DIG-INPUT-3 14 DIG-INPUT-4 15 DIG-INPUT-5 16 DIG-INPUT-6 17 DIG-OUTPUT-7 400mA current limitation 18 ANALOG-IN-1A 0-32 V input, either \u201cA\u201d or \u201cB\u201d must be high for the unit to start 19 ANALOG-IN-2 4-20 mA input 20 ANALOG-IN-3 0-32 V input 21 ANALOG-IN-4 0-32 V input 22 PULSE-COUNTER Input for tachometer","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#connector-power-communication","title":"Connector \u2013 Power &amp; Communication","text":"Pin Function Comment 1 RS485-A 2 RS485-B 3 J1708-A 4 J1708-B 5 DIG-OUTPUT-5V Digital 5V output, for peripherals, 500mA current limitation 6 GND Digital Ground 7 GND Digital Ground 8 INPUT-POWER 9 GND Return for INPUT-POWER, connected to Digital Ground 10 ANALOG-IN-1B 0-32 V input, either \u201cA\u201d or \u201cB\u201d must be high for the unit to start 11 ANALOG-IN-5 0-32V Input 12 RS232-2-RXD RS-232 no. 2 - Data input 13 RS232-2-TXD RS-232 no. 2 - Data output 14 GND Digital Ground 15 RS232-1-TXD RS-232 no. 1 - Data output 16 RS232-1-RTS RS-232 no. 1 - RTS output 17 RS232-1-CTS RS-232 no. 1 - CTS input 18 RS232-1-RXD RS-232 no. 1 - Data input","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#connector-audio-can","title":"Connector \u2013 Audio &amp; CAN","text":"Pin Function Comment 1 MODEM-IN+ Modem voice input positive 2 CAN-3-H 3 CAN-3-L 4 N/A 5 N/A 6 GND Analog measurement references, connected to Digital Ground 7 MODEM-IN - Modem voice input negative 8 MODEM-OUT+ Modem voice output positive, (optional AUDIO-OUT-R) 9 MODEM-OUT- Modem voice output negative 10 GND-A Reference for Linux platform audio, isolated from Digital Ground 11 AUDIO-IN-MIC Linux platform audio input, with biasing voltage for microphone 12 AUDIO-IN-LINE Linux platform audio input, without biasing voltage 13 AUDIO-OUT-R Linux platform audio output, right 14 AUDIO-OUT-L Linux platform audio output, left","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#other-connector-and-buttons","title":"Other connector and buttons","text":"<ul> <li>Fakra red LTE/4G</li> <li>Fakra red rx-diversity LTE/4G</li> <li>Fakra blue GPS</li> <li>RJ45</li> <li>Reset button</li> <li>LEDs</li> </ul>","tags":["CT GL","CT"]},{"location":"product/mx4-ct-gl/#technical-specification","title":"Technical specification","text":"<p>Contact support to receive the technical specification (1301-HM001--Technical-description or older CT 1301-HMP069--Technical-description) for this hardware. * is the variant you have bought.</p>","tags":["CT GL","CT"]},{"location":"product/mx4-t30fr/","title":"Platform MX-4 T30 FR","text":"","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#abstract","title":"Abstract","text":"<p>MX-4 T30 FR is a telematics computer for remote diagnostics and fleet management, very well suited for automotive development.</p>","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#feature-summary-for-hmp075-flexray-variant","title":"Feature summary for HMP075 (flexray variant)","text":"<p>See Product variant definition.</p> Feature Summary CPU (main) ARM Cortex-A9 CPU, Up to 1.4 GHz, Quad Core Coprocessor PIC24 RAM 1GB flash, 1 GB RAM Operating System Yocto Kirkstone, Linux kernel 6.1 (and 3.1.10) Modem Europa or USA 4G module GPS Included in modem, external antenna Aux-Linux 2x 3pol aux for Linux Headphone L and R and mic WIFI 802.11 b/g/n WiFi Ethernet 2x 10BASE-T and 100BASE-TX Ethernet USB 1 x USB 2.0 high-speed host/device (auto detect) USB 1 x USB 2.0 high-speed host CAN 6 x CAN 2.0 B Flexray 1 x Flexray 2.1 / 2.1RevA LIN 2 x LIN buses Digital inputs 6 x Digital inputs Digital outputs 6 x Digital outputs Analog inputs 2 x Analog inputs 0-32 VDC (including the start signal) Tachometer 1x Puls counter Start Signals 1 x Start signal input (to boot the system using external signal) Buzzer 1x internal buzzer uSD-card \u00b5SD-card interface SuperCap Super Capacitor Battery Internal Lithium battery: 1050mAh, -20 to +60\u00b0C (can be removed) Operating Temperature Wide operating temperature: -40 to +70\u00b0C Operating voltage Wide input voltage range, 8-36 VDC Nominal Voltage 12-24V Sleep-Mode Low power sleep mode Real Time Clock Yes, backed up by coin cell battery","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#product-variant-definition","title":"Product variant definition","text":"","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#list-of-known-products","title":"List of known products","text":"<p>Contact Host Mobility. All product variants start with hmp075 (T20, T30, T30 FR).</p>","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#connectors-and-buttons","title":"Connectors and buttons","text":"","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#dsub-15-connector","title":"Dsub 15 connector","text":"Pin Function Comment 1 CAN-1-H 2 CAN-1-L 3 CAN-2-H 4 CAN-2-L 5 CAN-3-H 6 CAN-3-L 7 INPUT-POWER Tied to pin 14 8 GND Reference for INPUT-POWER 9 CAN-4-H 10 CAN-4-L 11 CAN-5-H 12 CAN-5-L 13 START-SIGNAL Must be high for the unit to start, tied to pin 23 in other D-sub 14 INPUT-POWER Tied to pin 7 15 GND Reference for INPUT-POWER SH GND Shield is also connected to the common GND general-purpose GND","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#dsub-25-connector","title":"Dsub 25 connector","text":"Pin Function Comment 1 GND Reference for all I/O and communication buses 2 CAN-6-H 3 CAN-6-L 4 DIG-INPUT-1 Internal pull-up 5 DIG-INPUT-2 Internal pull-up 6 DIG-INPUT-3 Internal pull-up 7 DIG-INPUT-4 Internal pull-up 8 DIG-INPUT-5 Internal pull-down 9 DIG-INPUT-6 Internal pull-down 10 PULSE-COUNTER Input for tachometer 11 DIG-OUTPUT-5V Digital 5V output, for peripherals 12 GND Reference for all I/O and communication buses 13 GND Reference for all I/O and communication buses 14 LIN-1 LIN bus 1 15 LIN-2 LIN bus 2 16 DIG-OUTPUT-1 Sourcing current 17 DIG-OUTPUT-2 Sourcing current 18 DIG-OUTPUT-3 Sourcing current 19 DIG-OUTPUT-4 Sourcing current 20 DIG-OUTPUT-5 Sinking current 21 DIG-OUTPUT-6 Sinking current 22 ANALOG-IN-1 0-32 V input 23 START-SIGNAL Must be high for the unit to start, tied to pin 13 in other D-sub 24 VOLTAGE-OUTPUT Outputs the input voltage, not controllable, current limited 25 GND Reference for all I/O and communication buses SH GND Shield is also connected to the common GND","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#dsub-9-connector","title":"Dsub 9 Connector","text":"Pin Function Comment 1 NC Not connected 2 FRAY1-BM 3 GND 4 NC Not activated 5 NC Not connected 6 NC Not connected 7 FRAY1-BP 8 FRAY2-BM Not activated 9 NC Not connected","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#other-connector-and-buttons","title":"Other connector and buttons","text":"<ul> <li>Fakra red LTE/4G</li> <li>Fakra blue GPS</li> <li>RJ45</li> <li>Audio &amp; mic</li> <li>Reset button</li> <li>LEDs</li> </ul>","tags":["T30 FR"]},{"location":"product/mx4-t30fr/#technical-specification","title":"Technical specification","text":"<p>Contact support to receive the technical specification (1301-HMP075-*-Technical-description) for this hardware. * is the variant you have bought.</p>","tags":["T30 FR"]},{"location":"system/development/","title":"Software development","text":"","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/development/#overview","title":"Overview","text":"<p>Host Mobility computers run GNU/Linux where almost all software is built from source. The target architectures are ARM32 and ARM64. Since the typical development machines are x86_64, a cross-compiler is usually required.</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/development/#software-development-kit-sdk","title":"Software development kit (SDK)","text":"<p>The SDK contains the toolchains needed to compile and debug applications for our systems. To learn more about how to build it, see Software Development Kits (SDKs) or, for older systems running BSP 1.5/1.6 or older, Legacy Software Development Kits (SDKs).</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/development/#yocto-build-system","title":"Yocto build system","text":"<p>The reference operating system is built using Yocto. It combines software written by Host Mobility with free software from developers all over the world. See Yocto Build System for details.</p> <p>For older system running BSP 1.5/1.6 or older, see Legacy build system.</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/development/#development-application","title":"Development application","text":"<p>We have two examples of how to compile a C or C++ application - Usage and test - Development using Eclipse</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/eclipse/","title":"Development using Eclipse","text":"","tags":["Development","HMX","MX-4","MX-V","T30","T30 FR","C61"]},{"location":"system/eclipse/#introduction","title":"Introduction","text":"<p>This guide was originally written for MX-4 T30 with \u00c5ngstrom (2018). Parts of it should work for other platform toolchains as well.</p>","tags":["Development","HMX","MX-4","MX-V","T30","T30 FR","C61"]},{"location":"system/eclipse/#install-eclipse-on-ubuntu","title":"Install Eclipse on Ubuntu","text":"<pre><code>- First, [download Eclipse](https://www.eclipse.org/downloads) and the Java runtime if not already installed (default-jre)\n    - Install a debugger, if not already installed, e.g. *Eclipse IDE for C/C++ developers*.\n    - Optionally install a *Remote System Explorer*\n        - Help-&gt;Install New Software...-&gt; --All Available Sites-- -&gt; Mobile and Device Development or General Purpose Tools -&gt; Remote System Explorer.\n</code></pre>","tags":["Development","HMX","MX-4","MX-V","T30","T30 FR","C61"]},{"location":"system/eclipse/#build-a-custom-software-development-kit-sdk","title":"Build a custom software development kit (SDK)","text":"<pre><code>- source layers/openembedded-core/oe-init-build-env\n- bitbake console-hostmobility-dev-image -c populate_sdk\n- There will be a file output *angstrom-glibc-x86_64-armv7at2hf-neon-v2018.06-toolchain.sh* under deploy/sdk (file name can change over time and depend on target machine).\n- Run that script file and follow those instructions.\n- Now there should be a sysroot folder, an environment setup file , an site-config and one version file under the install location.\n- Run environment-setup-armv7at2hf-neon-angstrom-linux-gnueabi.sh before you start Eclipse to include the environment variables to your project.\n</code></pre> <p>Note: For new build toolchains, see SDK guide</p>","tags":["Development","HMX","MX-4","MX-V","T30","T30 FR","C61"]},{"location":"system/eclipse/#setup-hello_word-application","title":"Setup hello_word application","text":"<pre><code>- Create a new C or C++ project. Select Empty Project or Hello World template and Cross GCC toolchain.\n\n- Then, in the toolbar, click Project and select Properties from the drop down menu.\n    - Navigate to *C/C++ Build --&gt; Settings*\n\n- Within the Tool Settings tab, select [All configurations] from the configurations list. Select Cross GCC Compiler from the Tool Settings menu.\n    - For Command, enter: **${CC}**\n\n- Under Cross GCC Compiler, select Miscellaneous.\n    - For Other flags, enter: **${CFLAGS} -c**\n\n- Select Cross G++ Compiler from the Tool Settings menu.\n    - For Command, enter: **${CXX}**\n\n- Under Cross G++ Compiler, select Miscellaneous.\n    - For Other flags, enter: **${CXXFLAGS} -c**\n\n- Select Cross G++ Linker from the Tool Settings menu.\n    - For Command, enter: **${CXX}**\n\n- Under Cross G++ Linker, select Miscellaneous.\n    - For Linker flags, enter: **${LDFLAGS}**\n\n- Select Cross GCC Assembler from the Tool Settings menu.\n    - For Command, enter: **${AS}**\n\n- Other environment variables can be found in the *environment-setup-armv7at2hf-neon-angstrom-linux-gnueabi* file.\n\n- For more information, check out `Toradex Guide &lt;https://developer.toradex.com/getting-started/module-2-my-first-hello-world-in-c?som=apalis-imx6&amp;board=apalis-evaluation-board&gt;` \n- and `Toradex Guide &lt;https://developer.toradex.com/knowledge-base/linux-sdks&gt;`.\n</code></pre>","tags":["Development","HMX","MX-4","MX-V","T30","T30 FR","C61"]},{"location":"system/eclipse/#set-up-machine-debugger","title":"Set up machine debugger","text":"<pre><code>- First Run-&gt;Debug configurations...-&gt;c/c++ remote application-&gt;add (right click).\n- Change connection to your machine.\n    - ssh root@192.168.1.200 is default (eth0) for MX-4.\n    - Test it with browse and change path to where you want it to execute.\n- Under debugger-&gt;change main-&gt;gdb debugger to `arm-angstrom-linux-gnueabi-gdb`.\n- **tip** Add one debug and one Release (run configurations)\n</code></pre>","tags":["Development","HMX","MX-4","MX-V","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/","title":"Legacy build system","text":"","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#overview","title":"Overview","text":"<p>To build, see the old mx4 repo.</p>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#build-environment","title":"Build environment","text":"<p>Before building, we recommend having - approximately 30 GB of free disk space, - an SSD (it will make the build process go faster), - at least 4 GB of RAM, - at least 4 CPU cores (2 cores is a minimum).</p>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#set-up-docker","title":"Set up docker","text":"<p>Install Docker: [Docker Install]  Create Dockerfile: touch Dockerfile  Copy this template into the Dockerfile and edit it:</p> <pre><code>FROM debian\n# Edit Your Name and \u201dyour@mail.com\u201d\nMAINTAINER &lt;b&gt;Your Name&lt;/b&gt; \"&lt;b&gt;your@mail.com&lt;/b&gt;\"\n# Edit your username\nARG user=&lt;b&gt;your username&lt;/b&gt;\n# Edit your group, mostly the same as username\nARG group=&lt;b&gt;your group&lt;/b&gt; \n# Edit your user id. Command to see user id, id -u $username\nARG uid=&lt;b&gt;your user id&lt;/b&gt;\n# Edit your group id. Command to see group id, id -g $username\nARG gid=&lt;b&gt;your group id&lt;/b&gt;\n\n# We need to change to root to be able to install with apt-get \nUSER root\nRUN apt-get update &amp;&amp; apt-get install -y gawk wget git-core sudo cpio \\\ndiffstat unzip texinfo gcc-multilib u-boot-tools rsync cbootimage bc \\\nbuild-essential kmod chrpath socat mtd-utils device-tree-compiler mtools \\\nlzop dosfstools parted libncurses5-dev patchutils tmux vim curl python \\\nlibsdl1.2-dev &amp;&amp; rm -rf /var/lib/apt/lists/*\n\nENV USER_HOME /home/${user}\n\nRUN groupadd -g ${gid} ${group} \\\n&amp;&amp; useradd -d \"$USER_HOME\" -u ${uid} -g ${gid} -m -s /bin/bash ${user}\n# Edit username to your username\nRUN adduser &lt;b&gt;username&lt;/b&gt; sudo\n# Edit username to your username\nRUN echo \"&lt;b&gt;username&lt;/b&gt; ALL=(ALL) NOPASSWD: ALL\" &gt;&gt; /etc/sudoers\n\n# Switch to user\nUSER ${user}\nWORKDIR ${USER_HOME}\n\n# Creates project folder. Returns no error if folder already exists\nRUN mkdir -p &lt;b&gt;project&lt;/b&gt;\n\n# Edit \"your@mail.com\"\nRUN git config --global user.email \"&lt;b&gt;your@mail.com&lt;/b&gt;\"\n# Edit \"Your Name\"\nRUN git config --global user.name \"&lt;b&gt;Your Name&lt;/b&gt;\"\nRUN git config --global push.default simple\n</code></pre>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#build-docker-image","title":"Build Docker image","text":"<p>Build the docker image using the Dockerfile and name it hostmobility/mx4 <pre><code>docker build -t hostmobility/mx4 .\n</code></pre></p>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#run-docker-image","title":"Run Docker image","text":"<pre><code># Edit user id 1000 with your user id. \n# Edit username with your username (both in ssh- and project path).\n# Edit path to the project /home/username/project if needed.\n# The project folder is the link between your environment and the Docker environment.\n# Everything you put in the project folder from the Docker will be accessible outside the Docker.\n# To make --privileged to work, it assumes that you have a SSH key associated with your github account.\n# If SSH key is not set up correctly, you will be asked for username and password during the git clone process.\nsudo docker run -it -u &lt;b&gt;1000&lt;/b&gt; --privileged -v ~/.ssh:/home/&lt;b&gt;username&lt;/b&gt;/.ssh -v ~/project:/home/&lt;b&gt;username&lt;/b&gt;/&lt;b&gt;project&lt;/b&gt; hostmobility/mx4\n</code></pre>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#example-of-how-to-set-up-an-environment-for-mx-4-ct-branch-bsp-v15x","title":"Example of how to set up an environment for MX-4 CT, branch BSP-v1.5.x","text":"","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#git-clone-from-repository","title":"Git clone from repository","text":"<pre><code># If SSH key is associated correctly with your GitHub account, run the following commands:\ngit clone git@github.com:hostmobility/mx4 -b mx4-bsp-v1.5.x\ngit clone git@github.com:hostmobility/mx4-pic -b mx4-bsp-v1.5.x mx4/pic\n# If not correctly associated, run follow commands:\ngit clone https://github.com/hostmobility/mx4/ -b mx4-bsp-v1.5.x\ngit clone https://github.com/hostmobility/mx4-pic -b mx4-bsp-v1.5.x mx4/pic\n</code></pre>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#build-ct-bsp-v15x","title":"Build CT-BSP-v1.5.x","text":"<pre><code>cd mx4/t20\n# Remember to edit username to your own username and project if you\n# named your project folder to something else.\n# edit $(nproc) to number of cores you want to use while building.\n./make_system.sh -t ct -r /home/&lt;b&gt;username&lt;/b&gt;/&lt;b&gt;project&lt;/b&gt;/rootfs/CT -d /home/&lt;b&gt;username&lt;/b&gt;/&lt;b&gt;project&lt;/b&gt;/yocto-1.5.x -g -k -u -j &lt;b&gt;$(nproc)&lt;/b&gt; -m -T 512\n</code></pre>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#building-other-platforms","title":"Building other platforms","text":"<p>Please consult mx4#source-structure for the required repositories and branch names. </p>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#gtt-v15x","title":"GTT v1.5.x","text":"<pre><code>git clone https://github.com/hostmobility/mx4/ -b mx4-bsp-v1.5.x\ngit clone https://github.com/hostmobility/mx4-pic -b mx4-bsp-v1.5.x mx4/pic\n./make_system.sh -t gtt -r &lt;b&gt;UNIQUE_ROOTFS_PATH&lt;/b&gt; -d &lt;b&gt;YOCTO_1.5.x_TEMP_PATH&lt;/b&gt; -g -k -u -j &lt;b&gt;$(nproc)&lt;/b&gt; -m -T 512\n</code></pre>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#gtt-t30-v14x","title":"GTT-T30 v1.4.x","text":"<pre><code>git clone https://github.com/hostmobility/mx4/ -b mx4-bsp-v1.4.x-ultra\ngit clone https://github.com/hostmobility/mx4-pic -b mx4-bsp-v1.4.x mx4/pic\ngit clone https://github.com/hostmobility/linux-toradex.git -b mx4-bsp-v1.4.x-tegra mx4/t20/linux_vf\ngit clone https://github.com/hostmobility/u-boot-toradex.git -b mx4-bsp-v1.4.x mx4/t20/u-boot_vf\n./make_system.sh -t t30 -r UNIQUE_ROOTFS_PATH -d YOCTO_1.4.x_TEMP_PATH -g -k -u -j $(nproc)\n</code></pre>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#example-to-setup-environment-for-mx-4-v61","title":"Example to setup environment for MX-4 V61","text":"<pre><code># All products use mx4 and mx4-pic repository\ngit clone git@github.com:hostmobility/mx4 -b mx4-2.0\ngit clone git@github.com:hostmobility/mx4-pic -b mx4-2.0 mx4/pic\n\n\n# Below are only required for products that have Linux and U-boot\n# outside of the mx4 repository\ngit clone git@github.com:hostmobility/linux-toradex.git -b hm_vf_4.4 mx4/t20/linux_vf\ngit clone git@github.com:hostmobility/u-boot-toradex.git -b 2015.04-hm mx4/t20/u-boot_vf\n</code></pre>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/legacy-build-system/#example-of-how-to-build-board-support-package-bsp-for-mx-4-v61","title":"Example of how to build Board Support Package (BSP) for MX-4 V61","text":"<pre><code>cd mx4/t20\n# edit $(nproc) to number of cores you want to use while building.\n[work in progress]\n./make_system.sh -t v61 -r /home/username/project/rootfs/v61 -d /home/username/project/ -u -k -j $(nproc) -g\n</code></pre> <p>See the List of supported distros.</p> <p>The following packages need to be installed (the example below is for Ubuntu 14.10). <pre><code>sudo apt-get install subversion git u-boot-tools cbootimage curl gawk wget \\\ngit-core diffstat unzip texinfo build-essential chrpath autoconf flex bison \\\ndevice-tree-compiler mtd-utils lzop\n</code></pre></p>","tags":["Development","MX-4","CT","CT GL","T30","T30 FR","C61"]},{"location":"system/power_management/","title":"Power management","text":"","tags":["Power management","HMX","MX-4","MX-V"]},{"location":"system/power_management/#overview","title":"Overview","text":"<p>The majority of platforms have at least three different operating modes: - Running     - The default operating state where we have full functionality. - Sleep/Suspend     - Main processor is suspended to RAM. This is a power-saving mode where as much as possible is powered down to minimize the power consumption while maintaining a fast resume time (around 1 s) to running state. - Deep sleep     - The main processor is powered off and only the coprocessor is running in low-power mode. - Shutdown/Cut-off     - The machine has almost no power consumption as the main regulator is turned off. See start signal</p> <p>The machine can wake up from different sources but the Real time clock and CAN are most often used. The list of wake-up sources is platform specific and depending on the sleep mode. For <code>Shutdown/Cutoff</code>, for example, only start signal input is supported.</p>","tags":["Power management","HMX","MX-4","MX-V"]},{"location":"system/power_management/#platform-specific","title":"Platform specific","text":"<ul> <li>HMX</li> <li>MX4</li> <li>MX-V</li> </ul>","tags":["Power management","HMX","MX-4","MX-V"]},{"location":"system/update/","title":"System update","text":"","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/update/#installation-or-upgrade-of-specific-software","title":"Installation or upgrade of specific software","text":"","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/update/#opkg-package-manager","title":"Opkg package manager","text":"<p><code>opkg</code> is used  to install extra packages that are not installed with the original image.</p> <p>To use it, first update the package lists <pre><code>opkg update\nopkg list\n</code></pre></p> <p>Example: install rsync <pre><code>opkg install rsync\n</code></pre></p>","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/update/#editing-package-feeds","title":"Editing package feeds","text":"<p>The files under <code>/etc/opkg/*</code> define where to get extra software. You can edit them to point to the server of your choice. NOTE: Make sure that the package repository you add is compatible and secure to use</p>","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/update/#system-installation-or-re-installation","title":"System installation or re-installation","text":"","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/update/#system-image-also-known-as-firmware","title":"System image also known as firmware","text":"<p>Host Mobility hardware is able to update itself with two methods using files created by the build system:</p> <ol> <li>Put files on a USB memory stick, plug it into the machine and press <code>reset-button</code>. On the HMX, the USB-upgrade button must be held down during reset as well</li> <li>Copy the files over the network to <code>/boot</code> directory and set the <code>firmware_update</code> u-boot environment variable to <code>true</code></li> </ol> <p>The files can be put in <code>/boot</code> in a number of ways. In the case of using secure shell (SSH), you can edit the <code>~/.ssh/config</code> file like this:</p> <p>Assign the unit connected with USB cable to name dut <pre><code>Host dut\n  HostName 192.168.250.1\n  User roothmx\n  StrictHostKeyChecking No\n</code></pre></p> <p>Depending on the hardware, the upgrade procedures are then slightly different:</p> <ul> <li>System upgrade (HMX)</li> <li>System upgrade (MXV)</li> <li>System upgrade (MX-4 T30)</li> <li>System upgrade (MX-4 C61)</li> <li>System upgrade (MX-4 CT)</li> </ul>","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/update/#firmware-update-u-boot-variable","title":"Firmware update u-boot variable","text":"<p>To trigger a firmware update on certain MX-4 hardware types, a U-Boot variable needs to be set:</p> <p>Set firmware update U-Boot variable <pre><code>/opt/hm/fw_env/fw_setenv firmware_update true\n</code></pre></p> <p>Setting <code>firmware_update</code> to <code>true</code> will enable USB update as well if an image is present on the USB memory.</p>","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/update/#usb-method-autobootsh","title":"USB method autoboot.sh","text":"<p>If a file named <code>autoboot.sh</code> is found on the USB memory the first thing after upgrade, it will be executed.</p> <p>This can be used to re-install and configure the unit after update.</p>","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/update/#persistent-partition-mntconfig-and-run-parts","title":"Persistent partition /mnt/config and run-parts","text":"<p>On some builds, files stored in <code>/mnt/config</code> are kept across system re-installations.</p> <p>If this is included, all executable files in <code>/mnt/config/update-hooks</code> are executed using <code>run-parts</code> on first boot.</p> <p>This can be used to re-install and configure the unit after performing an update from the <code>/boot</code> directory.</p>","tags":["System update","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/hmx/power_management/","title":"Power management (HMX)","text":"","tags":["Power management","HMX"]},{"location":"system/hmx/power_management/#overview","title":"Overview","text":"<p>This platform supports suspend and a long range of wake-up signals. See the individual wake up links below.</p>","tags":["Power management","HMX"]},{"location":"system/hmx/power_management/#suspend","title":"Suspend","text":"<p>Click on the target interface to read more about how to set up sleep and wake up.</p>","tags":["Power management","HMX"]},{"location":"system/hmx/power_management/#wake-up","title":"Wake up","text":"<ul> <li>CAN0</li> <li>CAN1</li> <li>CAN2</li> <li>CAN3</li> <li>CAN4</li> <li>CAN5</li> <li>T1-0</li> <li>T1-1</li> <li>START_1</li> <li>START_2</li> <li>START_3</li> <li>START_4</li> <li>START_5</li> <li>Digital_input_pulldown_1</li> <li>Digital_input_pulldown_2</li> <li>Digital_input_pullup_1</li> <li>Digital_input_pullup_2</li> <li>Digital_input_HMI_1</li> <li>Digital_input_HMI_2</li> <li>RTC internal alarm (rtc1)</li> <li>RTC External alarm (rtc0)</li> <li>Accelerometer</li> <li>Modem</li> </ul>","tags":["Power management","HMX"]},{"location":"system/hmx/power_management/#enter-suspend","title":"Enter suspend","text":"<pre><code>systemctl suspend\n</code></pre>","tags":["Power management","HMX"]},{"location":"system/hmx/power_management/#shutdown","title":"Shutdown","text":"<p>Shutdown/cut-off state turns the system off with close to zero power consumption. It will only work if both internal and external Start signals are LOW/off.</p> <pre><code>shutdown -h now\n#or\npoweroff\n</code></pre>","tags":["Power management","HMX"]},{"location":"system/hmx/update/","title":"System update (HMX)","text":"","tags":["System update","HMX"]},{"location":"system/hmx/update/#upgrade-procedure","title":"Upgrade procedure","text":"","tags":["System update","HMX"]},{"location":"system/hmx/update/#prepare-upgrade","title":"Prepare upgrade","text":"<ul> <li>Copy the file <code>***-image-imx8mp-var-dart-hmx1.wic.gz</code> to <code>hmx-image.wic.gz</code></li> <li>Copy <code>hmx_boot.scr</code> and <code>hmx-image.wic.gz</code> to a USB memory or to <code>/boot</code> on the Linux file system</li> </ul>","tags":["System update","HMX"]},{"location":"system/hmx/update/#if-usb-method-is-used","title":"If USB method is used","text":"<ul> <li>Plug the USB memory into the HMX</li> <li>Press and hold the <code>USB_BOOT</code> button</li> <li>Press and release the the <code>RESET</code> button while holding the <code>USB_BOOT</code> button </li> <li>You can add an autoboot.sh script to the USB memory on the first boot after flash to perform post installation.</li> </ul>","tags":["System update","HMX"]},{"location":"system/hmx/update/#if-boot-method-is-used","title":"If /boot method is used","text":"<ul> <li>Reset or reboot the unit</li> </ul>","tags":["System update","HMX"]},{"location":"system/hmx/update/#wait-for-upgrade-to-finish","title":"Wait for upgrade to finish","text":"<ul> <li>The unit shall now start to flash a white LED in the middle of the box (blink 1 sec and when it start to perform the flash it blinks three times faster)</li> <li>Wait 1\u20132 min until finished (the LED in the middle of the box should go back to blue, then green when it is up and running in Linux. If this LED goes red it has failed and will reset itself after 10 s).</li> </ul> <p>Upgrade example using /boot <pre><code>image=console-hostmobility-image-imx8mp-var-dart-hmx1.wic.gz\nscp \"$image\" dut:/boot/hmx-image.wic.gz &amp;&amp; \\\nscp hmx_boot.scr dut:/boot/ &amp;&amp; \\\nssh dut reboot\n</code></pre></p>","tags":["System update","HMX"]},{"location":"system/mx4/power_management/","title":"Power management (MX-4)","text":"","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#overview-of-suspend-design","title":"Overview of Suspend Design","text":"<p>The MX-4 platform features two CPUs:</p> <ul> <li>The main CPU runs Linux and user applications.</li> <li>The co-CPU (or coprocessor) serves multiple purposes (PMIC, GPIO chip, analog inputs, hardware watchdog, etc.).</li> </ul> <p>The main CPU initiates sleep/suspend mode, while wake-up can be triggered by either CPU, depending on the wake-up source (see Wakeup).</p> <p>During sleep/suspend mode:</p> <ul> <li>The main CPU powers off most peripherals.</li> <li>The co-CPU runs on internal low-power RC (32 kHz) and performs cyclic sleep.</li> <li>3.3 V and 5 V power off, specific to different MX-4 platforms.</li> </ul> <p>Warning: The following peripherals lose power and need re-initialization after wakeup:</p> <ul> <li>SD card (unmount before sleep, re-mount after wake-up)</li> <li>WiFi</li> <li>UART</li> <li>CAN (T30 FR can optionally power off/on the CAN transceivers)</li> <li>Ethernet</li> <li>Flexray</li> </ul>","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#enter-sleep","title":"Enter sleep","text":"<p>A script, <code>/opt/hm/go_to_sleep.sh</code>, provided by Host Mobility, facilitates entering sleep/suspend mode:</p> <pre><code>Usage: go_to_sleep.sh options (t:hdcCnsaD)\n                -t &lt;time in seconds&gt; - Setup wakealarm (rtc)\n                -d - Disable wake on DIGITAL-IN-2\n                -a - Disable wake on START-SIGNAL\n                -l &lt;mV level&gt; - START-SIGNAL wake-up volt level\n                -c - Wake on CAN\n                -n - Will renew dhcp lease\n                -C - Disable suspend CAN for quicker wakeup-time\"\n                -s - Will suspend modem (turn off), Will not restore on wake up\n                -D &lt;time in seconds&gt; - Will enter deep sleep.\n                        Power to main CPU will be cut after specified time and it\n                        will restart with a cold reboot on wake up. The application\n                        is responsible of shutting down the system properly before\n                        the power is cut.\n                -p &lt;wake up mask&gt; - Mask to enable/disable wakeup sources\n                -h - Print this text\n</code></pre>","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#wakeup","title":"Wakeup","text":"<p>The MX-4 platform supports a range of wake-up sources (see below), although not all MX-4 variants support each of the wake-up sources.</p> <ul> <li>Digital Inputs (DIGITAL-IN-2 is enabled by default as a wake-up source)</li> <li>Analog Inputs</li> <li>Wake on CAN</li> <li>Wake on RTC (wake up after x seconds)</li> <li>Wake on RING (call/SMS to modem) \u2013 Not yet supported in software</li> <li>Wake on Accelerometer \u2013 Not yet supported in software</li> </ul>","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#wake-on-digital-inputs","title":"Wake on Digital Inputs","text":"<p>By default, DIGITAL-IN-2 (rising edge) is enabled as a wake-up source, mostly due to historical reasons. To disable it, run <code>go_to_sleep.sh</code> with the <code>-d</code> option.</p> <p>On some platforms, DIGITAL-IN-2 is the only digital input capable of waking up the system.</p> <p>For a list of supported digital inputs as wakeup sources, see .</p> <p>Note: If <code>-d</code> option is not specified, it will always set bit 4 in the wake-up mask, regardless of what you passed.</p> <p>Note: If <code>-d</code> option is specified with -t or without any other wake-up flag (use WAKE_UP_SRC_MODEM_RING bitmask or set -l to a voltage level higher than input voltage), the system will reboot itself. See Reset Cause.</p> <p>To enable different wake-up sources and set the edge, use the <code>-p</code> option with a bitmask (see wake up cause.</p>","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#wake-on-analog-inputs","title":"Wake on Analog Inputs","text":"<p>Analog inputs as wake-up sources are not managed by <code>go_to_sleep.sh</code>.</p> <p>All analog inputs have four sysfs files associated with them. For example, if we take input voltage:</p> <p>[Sysfs files and their purposes]</p> <ul> <li><code>input_voltage</code> reads the value of input voltage.</li> <li><code>input_voltage_calibration_u</code> calibrates the input for component tolerances.</li> <li><code>input_voltage_threshold_high</code> enables wake on a high-level threshold.</li> <li><code>input_voltage_threshold_low</code> enables wake on a low-level threshold.</li> </ul> <p>Examples of wake-up setup:</p> <pre><code># Wake up system from sleep/suspend if input voltage is above 16 V\nroot@mx4-vcc-1000000:~# echo 16000 &gt; /opt/hm/pic_attributes/input_voltage_threshold_high\n</code></pre> <pre><code># Wake up system from sleep/suspend if input voltage is below 12 V\nroot@mx4-vcc-1000000:~# echo 12000 &gt; /opt/hm/pic_attributes/input_voltage_threshold_low\n</code></pre> <pre><code># Wake up system from sleep/suspend if input voltage is in the range of 12-16 V\nroot@mx4-vcc-1000000:~# echo 16000 &gt; /opt/hm/pic_attributes/input_voltage_threshold_high\nroot@mx4-vcc-1000000:~# echo 12000 &gt; /opt/hm/pic_attributes/input_voltage_threshold_low\n</code></pre> <p><pre><code># Write 0 to both threshold files to disable that specific input as a wake-up source\nroot@mx4-vcc-1000000:~# echo 0 &gt; /opt/hm/pic_attributes/input_voltage_threshold_high\nroot@mx4-vcc-1000000:~# echo 0 &gt; /opt/hm/pic_attributes/input_voltage_threshold_low\n</code></pre> User setup for analog wake-up sources is required before calling <code>go_to_sleep.sh</code>. See Enter sleep.</p>","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#wake-on-can","title":"Wake on CAN","text":"<p>Wake on CAN isn't supported on all MX-4 platforms. Contact Host Mobility support for compatibility information.</p> <p>Enable Wake on CAN by passing <code>-c</code> to <code>go_to_sleep.sh</code> (see Enter sleep). However, before doing this, specific CAN buses should be enabled as wake-up sources.</p> <p>By default, all CAN buses will trigger a wakeup if there is traffic on them and <code>-c</code> is passed to <code>go_to_sleep.sh</code>. For T30 FR it is possible to wake up on single specific CAN frame (<code>can-xcvr</code>).</p> <p>GPIOs are used to set this up:</p> <pre><code>root@mx4-vcc-1000000:~# cat /sys/kernel/debug/gpio | grep -i wakeup\n gpio-58  (P169 - CAN0-WAKEUP  ) out lo\n gpio-59  (P171 - CAN1-WAKEUP  ) out lo\n gpio-60  (P173 - CAN2-WAKEUP  ) out lo\n gpio-61  (P175 - CAN3-WAKEUP  ) out lo\n gpio-62  (P177 - CAN4-WAKEUP  ) out lo\n gpio-63  (P179 - CAN5-WAKEUP  ) out lo\n</code></pre> <p>To disable wake-up for a specific bus, write a 1 to that GPIO's value.</p> <pre><code># Disable wakeup on CAN0\nroot@mx4-vcc-1000000:~# echo 1 &gt; /sys/class/gpio/gpio58/value\n</code></pre>","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#wake-up-cause","title":"Wake up cause","text":"<p>Read which signal that made the platform to wake up. See wake up cause.</p>","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#deep-sleep","title":"Deep sleep","text":"<p>Deep sleep mode puts the coprocessor to sleep while cutting the power rail to the main CPU. Upon wakeup, a cold reboot occurs instead of a fast resume, trading off for lower consumption during the suspended state.</p> <p>Wake-up sources available from deep sleep vary across different platforms.</p> <p>Enter deep sleep by passing the <code>-D</code> option to <code>go_to_sleep.sh</code>. See Enter sleep.</p> <p>Note: CT and CT GL do not support Deep sleep</p>","tags":["Power management","MX-4"]},{"location":"system/mx4/power_management/#shutdown","title":"Shutdown","text":"<p>Not all MX-4 platforms support this mode. Contact Host Mobility support for information on compatibility.</p> <p>The MX-4 shutdown/cutoff state turns the system off with close to zero power consumption:</p> <pre><code># Cutoff in 60 seconds\nroot@mx4-vcc-1000000:~# echo 60 &gt; /opt/hm/pic_attributes/ctrl_on_4v\n</code></pre> <p>In this example, within 60 seconds, the system will cut the 4V power and restart only if Start signal is LOW.</p> <p>Before these 60 seconds elapse, ensure the application finishes and runs <code>poweroff</code> to shut down Linux.</p>","tags":["Power management","MX-4"]},{"location":"system/mx4/reset_cause/","title":"Reset cause (MX-4)","text":"<p>You can read out the platform \"reset cause\" from an SPI attribute or using the <code>/opt/hm/reset_cause.sh</code> script. Multiple reset causes are possible. You can also zero out the current reset cause by executing <code>echo 0 &gt; /opt/hm/pic_attributes/ctrl_pic_reset_cause</code>.</p> <pre><code>cat /opt/hm/pic_attributes/ctrl_pic_reset_cause\n#or\n/opt/hm/reset_cause.sh\n</code></pre> Bit Reset Cause Text Clarification 0 Power On Reset 1 Brown Out Reset 2 Idle Reset 3 Sleep Reset 4 Watchdog Reset Co-cpu reset internal watchdog flag triggered 5 Software Reset Set by user 6 MCLR Reset Reset button 7 Config Mismatch Reset 8 Deep Sleep Reset 9 Illegal Opcode Reset 10 Trap Conflict Reset 11 Trap Default Reset trace_default_interrupt 12 Trap OSC Reset 13 Trap Address Reset 14 Trap Stack Reset 15 Trap Math Reset 16 Protocol Watchdog Reset Linux SPI protocol stopped sending and co-cpu reset 17 Clock Switch Failed 18 Deep Sleep Exit","tags":["Reset cause","MX-4"]},{"location":"system/mx4/wake_up_cause/","title":"Wake up cause","text":"<p>Here is a list of possible wake-up signals used both to enable the wake up mode and to read which of the modes that woke up the system.</p>","tags":["Wake up cause","Power management","MX-4"]},{"location":"system/mx4/wake_up_cause/#read","title":"Read","text":"<pre><code>MX4_SPI_DIR=/opt/hm/pic_attributes\ncat $MX4_SPI_DIR/ctrl_wakeup_cause\n#or\n/opt/hm/wake_up_cause.sh\n</code></pre>","tags":["Wake up cause","Power management","MX-4"]},{"location":"system/mx4/wake_up_cause/#enable-coprocessor-wake-up-source","title":"Enable coprocessor wake up source","text":"<pre><code>MX4_SPI_DIR=/opt/hm/pic_attributes\necho 0xXX &gt;  $MX4_SPI_DIR/ctrl_wakeup_sources_register\n</code></pre>","tags":["Wake up cause","Power management","MX-4"]},{"location":"system/mx4/wake_up_cause/#list","title":"List","text":"Bit Wake Up Signal Explanation 0x00 WAKE_UP_SRC_NONE 0x01 WAKE_UP_SRC_WDT Watchdog 0x02 WAKE_UP_SRC_SPI INT SPI communication from Linux system 0x03 WAKE_UP_SRC_MAIN VOLTAGE 0x04 WAKE_UP_SRC_BATTERY VOLTAGE 0x05 WAKE_UP_SRC_ANALOG 1 Analog In number 1 0x06 WAKE_UP_SRC_ANALOG 2 Analog In number 2 0x07 WAKE_UP_SRC_ANALOG 3 Analog In number 3 0x08 WAKE_UP_SRC_ANALOG 4 Analog In number 4 0x09 WAKE_UP_SRC_START SIGNAL 0x0A WAKE_UP_SRC_CAN Any CAN (if T30Fr check which with can-xcvr -s) 0x0B WAKE_UP_SRC_DIN 1 F Digital In number 1 (Falling Edge) 0x0C WAKE_UP_SRC_DIN 1 R Digital In number 1 (Rising Edge) 0x0D WAKE_UP_SRC_DIN 2 F Digital In number 2 (Falling Edge) 0x0E WAKE_UP_SRC_DIN 2 R Digital In number 2 (Rising Edge) 0x0F WAKE_UP_SRC_DIN 3 F Digital In number 3 (Falling Edge) 0x10 WAKE_UP_SRC_DIN 3 R Digital In number 3 (Rising Edge) 0x11 WAKE_UP_SRC_DIN 4 F Digital In number 4 (Falling Edge) 0x12 WAKE_UP_SRC_DIN 4 R Digital In number 4 (Rising Edge) 0x13 WAKE_UP_SRC_DIN 5 F Digital In number 5 (Falling Edge) 0x14 WAKE_UP_SRC_DIN 5 R Digital In number 5 (Rising Edge) 0x15 WAKE_UP_SRC_DIN 6 F Digital In number 6 (Falling Edge) 0x16 WAKE_UP_SRC_DIN 6 R Digital In number 6 (Rising Edge) 0x17 WAKE_UP_SRC_MODEM RING Not supported 0x18 WAKE_UP_SRC_START SWITCH F 0x19 WAKE_UP_SRC_START SWITCH R 0x20 WAKE_UP_SRC_MIN 1 F 0x21 WAKE_UP_SRC_MIN 1 R 0x22 WAKE_UP_SRC_MIN 2 F 0x23 WAKE_UP_SRC_MIN 2 R 0x24 WAKE_UP_SRC_DIN 7 F Digital In number 7 (Falling Edge) 0x25 WAKE_UP_SRC_DIN 7 R Digital In number 7 (Rising Edge) 0x26 WAKE_UP_SRC_DIN 8 F Digital In number 8 (Falling Edge) 0x27 WAKE_UP_SRC_DIN 8 R Digital In number 8 (Rising Edge)","tags":["Wake up cause","Power management","MX-4"]},{"location":"system/mx4/c61/update/","title":"System update (C61)","text":"","tags":["System update","C61"]},{"location":"system/mx4/c61/update/#upgrade-procedure","title":"Upgrade procedure","text":"","tags":["System update","C61"]},{"location":"system/mx4/c61/update/#prepare-upgrade","title":"Prepare upgrade","text":"<ul> <li>Copy <code>vf_hmupdate.img</code> to a USB memory or to <code>/boot</code> on the Linux file system</li> </ul>","tags":["System update","C61"]},{"location":"system/mx4/c61/update/#if-usb-method-is-used","title":"If USB method is used","text":"<ul> <li>You can add an autoboot.sh script to the USB memory on the first boot after flash to perform post installation.</li> <li>Plug the USB memory into the hardware.</li> <li>Press and hold the reset button for 1 sec (all LEDs will blink green if the system has started with the reflash).</li> </ul>","tags":["System update","C61"]},{"location":"system/mx4/c61/update/#if-boot-method-is-used","title":"If /boot method is used","text":"<ul> <li>Reboot the unit</li> </ul>","tags":["System update","C61"]},{"location":"system/mx4/c61/update/#wait-for-upgrade-to-finish","title":"Wait for upgrade to finish","text":"<ul> <li>Wait 1\u20132 minutes until finished (until the power LED is green or blink green/orange).</li> </ul> <p>Upgrade example using /boot <pre><code>image=kirkstone-poky/38/jenkins-Release-kirkstone-poky-38-mx4-c61/vf_hmupdate.img\nscp \"$image\" dut:/boot/ &amp;&amp; \\\nssh dut reboot\n</code></pre></p>","tags":["System update","C61"]},{"location":"system/mx4/ct/update/","title":"System update (CT)","text":"","tags":["System update","CT","CT GL"]},{"location":"system/mx4/ct/update/#upgrade-procedure","title":"Upgrade procedure","text":"","tags":["System update","CT","CT GL"]},{"location":"system/mx4/ct/update/#prepare-upgrade","title":"Prepare upgrade","text":"<ul> <li>Copy <code>t20_hmupdate.img</code> to a USB memory or to <code>/boot</code> on the Linux file system</li> </ul>","tags":["System update","CT","CT GL"]},{"location":"system/mx4/ct/update/#if-usb-method-is-used","title":"If USB method is used","text":"<ul> <li>You can add an autoboot.sh script to the USB memory on the first boot after flash to perform post installation.</li> <li>Plug the USB memory into the hardware.</li> <li>Press and hold the reset button for 1 sec (all LEDs will blink green if the system has started with the reflash).</li> </ul>","tags":["System update","CT","CT GL"]},{"location":"system/mx4/ct/update/#if-boot-method-is-used","title":"If /boot method is used","text":"<ul> <li>To trigger an update from /boot one needs to set the <code>firmware_update</code> u-boot environment variable to <code>true</code>. See below example on how to do that.</li> </ul> <p>Setting <code>firmware_update</code> to <code>true</code> will enable USB update as well if an image is present on the USB memory. * Reboot the unit</p>","tags":["System update","CT","CT GL"]},{"location":"system/mx4/ct/update/#wait-for-upgrade-to-finish","title":"Wait for upgrade to finish","text":"<ul> <li>Wait 1\u20132 minutes until finished (until the power LED is green or blink green/orange).</li> </ul> <p>Upgrade example using /boot <pre><code>image=t20_hmupdate.img\nscp \"$image\" dut:/boot/ &amp;&amp; \\\n/opt/hm/fw_env/fw_setenv firmware_update true &amp;&amp; \\\nssh dut reboot\n</code></pre></p>","tags":["System update","CT","CT GL"]},{"location":"system/mx4/t30/update/","title":"System update (T30)","text":"","tags":["System update","T30"]},{"location":"system/mx4/t30/update/#upgrade-procedure","title":"Upgrade procedure","text":"","tags":["System update","T30"]},{"location":"system/mx4/t30/update/#prepare-upgrade","title":"Prepare upgrade","text":"<ul> <li>Copy <code>t30_hmupdate.img</code> to a USB memory or to <code>/boot</code> on the Linux file system</li> </ul>","tags":["System update","T30"]},{"location":"system/mx4/t30/update/#if-usb-method-is-used","title":"If USB method is used","text":"<ul> <li>You can add an autoboot.sh script to the USB memory on the first boot after flash to perform post installation.</li> <li>Plug the USB memory into the hardware.</li> <li>Press and hold the reset button for 1 sec (all LEDs will blink green if the system has started with the reflash).</li> </ul>","tags":["System update","T30"]},{"location":"system/mx4/t30/update/#if-boot-method-is-used","title":"If /boot method is used","text":"<ul> <li>Set firmware update u-boot variable</li> </ul> <p>Setting <code>firmware_update</code> to <code>true</code> will enable USB update as well if an image is present on the USB memory. * Reboot the unit</p>","tags":["System update","T30"]},{"location":"system/mx4/t30/update/#wait-for-upgrade-to-finish","title":"Wait for upgrade to finish","text":"<ul> <li>Wait 1\u20132 minutes until finished (until the power LED is green or blink green/orange).</li> </ul> <p>Upgrade example using /boot <pre><code>image=t30_hmupdate.img\nscp \"$image\" dut:/boot/ &amp;&amp; \\\n/opt/hm/fw_env/fw_setenv firmware_update true &amp;&amp; \\\nssh dut reboot\n</code></pre></p>","tags":["System update","T30"]},{"location":"system/mxv/power_management/","title":"Power management (MX-V)","text":"","tags":["Power management","MX-V"]},{"location":"system/mxv/power_management/#overview","title":"Overview","text":"<p>This platform supports suspend, Deep sleep and cutoff/shutdown.</p>","tags":["Power management","MX-V"]},{"location":"system/mxv/power_management/#suspend","title":"Suspend","text":"","tags":["Power management","MX-V"]},{"location":"system/mxv/power_management/#wake-up","title":"Wake up","text":"<p>Set to 1 to activate wakeup on channel: - accel-int-active     - activate wakeup pin on coprocessor - can-active     - activate all CAN - modem-ring-active     - Not supported - rtc-int-active     - activate this with RTC alarm. - uart-active     - support RS-232 and RS-485</p>","tags":["Power management","MX-V"]},{"location":"system/mxv/power_management/#enter-suspend","title":"Enter suspend","text":"<pre><code>systemctl suspend\n</code></pre>","tags":["Power management","MX-V"]},{"location":"system/mxv/power_management/#deep-sleep","title":"Deep sleep","text":"<p>TODO: For developers at Host Mobility, see MX-V coprocessor for more information.</p>","tags":["Power management","MX-V"]},{"location":"system/mxv/power_management/#shutdown","title":"Shutdown","text":"<p>Shutdown/cutoff state turns the system off with close to zero power consumption. It will only work if both the internal and external start signals are LOW/off.</p> <pre><code>shutdown -h now\n#or\npoweroff\n</code></pre>","tags":["Power management","MX-V"]},{"location":"system/mxv/update/","title":"System update (MX-V)","text":"","tags":["System update","MX-V"]},{"location":"system/mxv/update/#upgrade-procedure","title":"Upgrade procedure","text":"","tags":["System update","MX-V"]},{"location":"system/mxv/update/#prepare-upgrade","title":"Prepare upgrade","text":"<ul> <li>Copy the file <code>*-image-mx5-pt*.rootfs.wic.gz</code> to <code>mx5-image.wic.gz</code></li> <li>Copy <code>flashmx5.scr</code> and <code>mx5-image.wic.gz</code> to a USB memory or to <code>/boot</code> on the Linux file system</li> </ul>","tags":["System update","MX-V"]},{"location":"system/mxv/update/#if-usb-method-is-used","title":"If USB method is used","text":"<ul> <li>You can add an autoboot.sh script to the USB memory on the first boot after flash to perform post installation.</li> <li>Plug the USB memory into the hardware.</li> <li>Press and hold the <code>RESET</code> button for 1 second.</li> </ul>","tags":["System update","MX-V"]},{"location":"system/mxv/update/#if-boot-method-is-used","title":"If /boot method is used","text":"<ul> <li>Reset or reboot the unit.</li> </ul>","tags":["System update","MX-V"]},{"location":"system/mxv/update/#wait-for-upgrade-to-finish","title":"Wait for upgrade to finish","text":"<ul> <li>Wait 1\u20132 min until finished (until the function LED blinks green).</li> </ul> <p>Upgrade example using /boot <pre><code>image=console-hostmobility-image-mx5-pt-20230123170836.rootfs.wic.gz\nscp \"$image\" dut:/boot/mx5-image.wic.gz &amp;&amp; \\\nscp flashmx5.scr dut:/boot/ &amp;&amp; \\\nssh dut reboot\n</code></pre></p>","tags":["System update","MX-V"]},{"location":"system/sdk/sdk/","title":"Software development kits (SDKs)","text":"","tags":["SDK","Development","HMX","MX-V","T30","T30 FR","C61"]},{"location":"system/sdk/sdk/#overview","title":"Overview","text":"<p>Reference SDKs are to be made available at hostmobility.org/sdk.</p>","tags":["SDK","Development","HMX","MX-V","T30","T30 FR","C61"]},{"location":"system/sdk/sdk/#building","title":"Building","text":"<p>SDKs are built for a specific system image using <code>bitbake -c populate_sdk &lt;image-name&gt;</code>.</p> <p>example with MACHINE set to imx8mp-var-dart-hmx1 <pre><code>bitbake -c populate_sdk console-hostmobility-image\n</code></pre></p> <p>The installer has now been built. Its name is based on the architechture, image name and poky version. In this case, the name is <code>poky-glibc-x86_64-console-hostmobility-image-cortexa53-crypto-imx8mp-var-dart-hmx1-toolchain-4.0.13.sh</code></p> <p>Note: the console-hostmobility-image should include more packages for more debugging purpose: - IMAGE_INSTALL     - gdb, for debug on target machine     - gdbserver, for debug on target machine     - glibc-dbg, for debug on target machine     - packagegroup-sdk-target</p>","tags":["SDK","Development","HMX","MX-V","T30","T30 FR","C61"]},{"location":"system/sdk/sdk/#installation","title":"Installation","text":"<p>The SDK is installed by running the installer from the build step above. </p> <p>Set the file as executable <pre><code>chmod +x poky-glibc-x86_64-console-hostmobility-image-cortexa53-crypto-imx8mp-var-dart-hmx1-toolchain-4.0.13.sh \n</code></pre></p> <p>Run the installer <pre><code>./poky-glibc-x86_64-console-hostmobility-image-cortexa53-crypto-imx8mp-var-dart-hmx1-toolchain-4.0.13.sh\n</code></pre></p> <p>Select directory where to install the SDK <pre><code>Poky (Yocto Project Reference Distro) SDK installer version 4.0.13\n==================================================================\nEnter target directory for SDK (default: /opt/poky/4.0.13): ~/sdk/\nYou are about to install the SDK to \"/home/mattias/sdk\". Proceed [Y/n]? Y\nExtracting SDK.................................................................^Bn................................................................................................................................................................done\nSetting it up...done\nSDK has been successfully set up and is ready to be used.\nEach time you wish to use the SDK in a new shell session, you need to source the environment setup script e.g.\n $ . /home/mattias/sdk/environment-setup-cortexa53-crypto-poky-linux\n</code></pre></p>","tags":["SDK","Development","HMX","MX-V","T30","T30 FR","C61"]},{"location":"system/sdk/sdk/#usage-and-test","title":"Usage and test","text":"<p>To get generate source code for a sample application, save the following in a file named <code>program.c</code>.</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[])\n{\n    for (int i = 0; i &lt; argc; i++) {\n        printf(\"%d: %s\\n\", argc, argv[i]);\n  }\n}\n</code></pre> <p>Source the <code>enviroment-setup</code> directory where you installed the SDK.</p> <pre><code>. ~/sdk/hmx-kirkstone/environment-setup-armv8a-fslc-linux\n</code></pre> <p>run make <pre><code>make --no-silent  program\n</code></pre> Make is now aware of the cross-compiler through the environment. <pre><code>aarch64-poky-linux-gcc  -mcpu=cortex-a53 -march=armv8-a+crc+crypto -mbranch-protection=standard -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/mattias/sdk/sysroots/cortexa53-crypto-poky-linux  -O2 -pipe -g -feliminate-unused-debug-types   -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed  -Wl,-z,relro,-z,now  program.c   -o program\n</code></pre></p> <p>Example: access kernel headers e.g. when compiling external modules <pre><code>export KDIR=$SDKTARGETSYSROOT/usr/src/kernel\n</code></pre></p>","tags":["SDK","Development","HMX","MX-V","T30","T30 FR","C61"]},{"location":"system/sdk_bsp.16/sdk/","title":"Legacy software development kits (SDKs)","text":"","tags":["Legacy SDK","Development","MX-4","CT","CT GL","T30","T30 FR"]},{"location":"system/sdk_bsp.16/sdk/#overview","title":"Overview","text":"<p>Legacy toolchains are available at hostmobility.org:8008/tools. Note: This guide is for use with BSP 1.6/1.5 or older.</p> <p>Main software components:</p> <ul> <li>Toolchain<ul> <li>Tegra2: Linaro GCC 4.7-2013.09 (http://releases.linaro.org/13.09/components/toolchain/gcc-linaro/4.7)</li> </ul> </li> <li>Linux (Tegra2: 3.1.10)</li> <li>U-boot (Tegra2: 2011.06)</li> <li>\u00c5ngstrom distribution built with yocto (dylan branch)(https://www.yoctoproject.org/)</li> </ul>","tags":["Legacy SDK","Development","MX-4","CT","CT GL","T30","T30 FR"]},{"location":"system/sdk_bsp.16/sdk/#building","title":"Building","text":"<p>SDKs are built toolchain binaries are generated with yocto command <code>-c populate_sdk</code>. Toolchains are built for both 32 and 64 bit systems.</p> <p>There are two flavors of sysroots. The minimal is based on <code>console-vcc-base-image</code> and the other one is based on <code>lxde-mx4-image</code>.</p> <p>Note:There is a problem with installation where you get segmentation faults when trying to run a binary. See this link http://developer.toradex.com/how-to/how-to-set-up-qt-creator-to-cross-compile-for-embedded-linux#Install_the_SDK for a workaround.</p> <p>Note: Linaro 2013.04 is also compatible with the above toolchains. https://launchpad.net/linaro-toolchain-binaries/trunk/2013.04/+download/gcc-linaro-arm-linux-gnueabihf-4.7-2013.04-20130415_linux.tar.xz.</p>","tags":["Legacy SDK","Development","MX-4","CT","CT GL","T30","T30 FR"]},{"location":"system/yocto/yocto-build-manually/","title":"Yocto Build (Manually)","text":"","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto-build-manually/#regular-host-mobility-yoctooe-core-setup","title":"Regular Host Mobility Yocto/OE-core setup","text":"<p>To simplify installation we provide a repo manifest which manages the different git repositories and the versions used.</p> <p>Before proceeding, please take a look at The Build Host Packages in the Yocto Manual.</p> <p>Install the repo bootstrap binary:</p> <pre><code>sudo apt-get install repo\n</code></pre> <p>or</p> <pre><code>mkdir ~/bin\nPATH=~/bin:$PATH\ncurl http://commondatastorage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo\nchmod a+x ~/bin/repo\n</code></pre> <p>Create a directory for your <code>mobility-bsp-platform</code> setup to live in and clone the meta information. <pre><code>mkdir mobility-bsp-platform\ncd mobility-bsp-platform\nrepo init -u https://github.com/hostmobility/mobility-poky-platform -b master\nrepo init -m kirkstone-next.xml\nrepo sync --force-sync\n</code></pre></p> <p>Set up environment variables: <pre><code>export DIR_WORK=$PWD/../\nexport BUILD_TAG=*optional build Tag*\nexport PLATFORM_VERSION=\"$(git -C $DIR_WORK.repo/manifests rev-parse --short HEAD)\"\nexport PLATFORM_VERSION_DETAILS=\"$(repo forall -c 'echo $REPO_PATH\\nLREV: $REPO_LREV\\nRREV: $REPO_RREV; git diff --stat -b $REPO_LREV..HEAD ; echo -n \"Commit: \" ; git rev-parse HEAD ; echo -n \"Uncommited changes: \" ; git status -b -s ; git diff --stat -b ; echo ')\"\necho \"building with repo versions: $PLATFORM_VERSION\"\nexport BB_ENV_PASSTHROUGH_ADDITIONS=\"$BB_ENV_PASSTHROUGH_ADDITIONS BUILD_TAG PLATFORM_VERSION PLATFORM_VERSION_DETAILS\"\nexport TEMPLATECONF=$PWD/../sources/meta-mobility-poky-distro/conf\n</code></pre> NOTE! You will need to perform these exports for each new session. If you already have a build directory, it will be untouched and only the environment variables will be set.</p> <p>Start baking! <pre><code>$ source sources/poky/oe-init-build-env build;\n$ bitbake {image}\n</code></pre></p> <p>where <code>{image}</code> is replaced by, for example, <code>console-mobility-image</code>, <code>bitbake mobility-image</code> or <code>mobility-image-chromium</code>.</p> <p>The build result will end up in the <code>mobility-bsp-platform/build/tmp/deploy/images/</code> directory.</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto-build-with-docker/","title":"Yocto Build (With Docker)","text":"","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto-build-with-docker/#build-scripts","title":"Build scripts","text":"<p>Building with Yocto requires many software tools and those need to have correct versions. To create this build environment, Docker can be used to great advantage. </p> <p>To help launching a build in Docker, we provide a couple of scripts in mobility-poky-platform/scripts that automate much of the build tasks.</p> <p>This requires only installation of Docker before starting the build.</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto-build-with-docker/#bygg-script-example","title":"bygg script example","text":"<pre><code>DL_DIR=/YOCTO_DOWNLOADS \nscripts/bygg \\ \n  --repo-sync \\\n  --manifest-file kirkstone \\\n  --delete-conf \\\n  --distro poky \\\n  --machine imx8mp-var-dart-hmx1 \\\n  --image console-hostmobility-image\n</code></pre>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto-build-with-docker/#bygg-build-with-custom-distro","title":"bygg build with custom distro","text":"<p>To make it work we recomend use of a manifest-file based on our kirkstone.xml (or newer), with your custom distro layer. In that distro layer you will need to setup a conf file and a bblayer.conf file (the bblayer need to include your distro so the build can include your bb(append) recipes). To start the build you need to target the conf folder with --templateconf if you use the 'bygg' script. Here is an example use case.</p> <pre><code>DL_DIR=$HOME/YOCTO_DOWNLOADS # Store downloads for reuse\nscripts/bygg \\\n  --repo-sync \\\n  --delete-conf \\\n  --manifest-file kirkstone-'custom'.xml \\\n  --machine imx8mp-var-dart-hmx1 \\\n  --image console-hostmobility-image \\\n  --templateconf sources/meta-your-custom-distro/conf/templates/hmx \\\n</code></pre>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto-build-with-docker/#bid-build-in-docker-script-example-older-way-than-bygg","title":"bid (build-in-docker) script example (older way than bygg)","text":"<p>Usage: <pre><code>$ git clone git@github.com:hostmobility/mobility-poky-platform.git\n$ cd mobility-poky-platform\n$ mkdir ~/YOCTO_DOWNLOADS\n$ scripts/bid [options] [build command]\n</code></pre></p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto-build-with-docker/#example-build-commands-for-the-mx4-c61-machine","title":"Example build commands for the mx4-c61 machine","text":"<p>Sync repositories using the kirkstone manifest file and the master branch:</p> <pre><code>$ scripts/bid -s -f kirkstone.xml -a master -m mx4-c61 bash\n</code></pre> <p>Do the same as above but build the Linux kernel:</p> <pre><code>$ scripts/bid -f kirkstone.xml -a master -m mx4-c61 -d poky bitbake virtual/kernel\n</code></pre> <p>The same as above but build a complete image:</p> <pre><code>$ scripts/bid -f kirkstone.xml -a master -m mx4-c61 -d poky bitbake console-hostmobility-image\n</code></pre>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/","title":"Yocto Build System","text":"","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#overview","title":"Overview","text":"<p>The operating system running on Host Mobility hardware and most of the tools are built from source. The build system used for this is the Yocto Build System. It combines software written by Host Mobility with free software from developers all over the world.</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#building-with-yocto","title":"Building with Yocto","text":"<ul> <li>To build packages and images, a Linux system is needed.  The quickest way is to use our Docker build script:</li> </ul> <p>Clone mobility-poky-platform <pre><code>git clone git@github.com:hostmobility/mobility-poky-platform.git &amp;&amp; cd mobility-poky-platform\n</code></pre></p> <p>Build image for specific machine <pre><code>DL_DIR=$HOME/YOCTO_DOWNLOADS # Store downloads for reuse\nscripts/bygg \\\n  --repo-sync \\\n  --delete-conf \\\n  --manifest-file kirkstone.xml \\\n  --machine imx8mp-var-dart-hmx1 \\\n  --image console-hostmobility-image \\\n</code></pre></p> <p>See Building with Docker for details.</p> <p>To get more information about what you can do with it use /script/bygg --help.</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#native-build-environment","title":"Native build environment","text":"<ul> <li>You can also build using a native build environment (without Docker).</li> </ul>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#packages-and-images","title":"Packages and images","text":"<p>The Yocto system takes care of building software and its dependecies from recipe files in the meta- folders. The results are:</p> <ul> <li>Packages (<code>*.ipk</code>) that can be installed on the hardware. From the packages, </li> <li>System images (*.wic.gz or .img), created from packages, deployed to the hardware for full system upgrade.</li> </ul>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#package-server","title":"Package server","text":"<p>For our reference distributions we use the <code>ipk</code> package format and the <code>opkg</code> tool.</p> <p>Typically, .<code>ipk</code> files are not installed manually but uploaded to a server.</p> <p>We provide a package server at hostmobility.org.</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#yocto-details","title":"Yocto details","text":"<p>The software and configurations written by Host Mobility are hosted on Host Mobility's GitHub repositories. They fall into a number of categories:</p>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#yocto-metadata","title":"Yocto metadata","text":"<p>Recipes for use by bitbake that have a \"meta-\" prefix.</p> <ul> <li>meta-hostmobility-bsp \u2013 Host Mobility hardware dependent recipes, e.g. kernel, u-boot and more.</li> <li>meta-mobility-poky-distro \u2013 System configuration and software.</li> </ul>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#versioned-build-system","title":"Versioned build system","text":"<p>XML files with recipe repo versions.</p> <ul> <li>mobility-poky-platform \u2013 manifest files for Poky</li> <li>hostmobility-bsp-platform \u2013 legacy manifest files for \u00c5ngstr\u00f6m</li> </ul>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"system/yocto/yocto/#software-source","title":"Software source","text":"<p>Source code for drivers and tools.</p> <ul> <li>hm-commercial \u2013 source for drivers and tools for HMX and MX-V</li> <li>mx4-commercial \u2013 source for drivers and tools for MX-4</li> </ul>","tags":["Development","HMX","MX-4","CT","CT GL","MX-V","T30","T30 FR","C61"]},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#adc","title":"ADC","text":"<ul> <li>Analog inputs (ADC)</li> <li>IOs (C61)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>Analog Inputs (ADC) (MX-V)</li> </ul>"},{"location":"tags/#accelerometer","title":"Accelerometer","text":"<ul> <li>Accelerometer</li> <li>HMX Accelerometer</li> <li>Accelerometer (MX-4)</li> </ul>"},{"location":"tags/#audio","title":"Audio","text":"<ul> <li>Audio</li> </ul>"},{"location":"tags/#c61","title":"C61","text":"<ul> <li>Accelerometer</li> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>CAN</li> <li>Digital I/O</li> <li>Ethernet</li> <li>J1708</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Serial communication</li> <li>Start signals</li> <li>USB</li> <li>CAN (C61)</li> <li>Ethernet (C61)</li> <li>IOs (C61)</li> <li>Leds</li> <li>C61 Modem</li> <li>Serial communication (C61)</li> <li>USB (C61)</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>LEDs (MX-4)</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script</li> <li>MX-4 Start signals</li> <li>Platform MX-4 C61</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>System update</li> <li>System update (C61)</li> <li>Software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#can","title":"CAN","text":"<ul> <li>CAN</li> <li>Networking</li> <li>CAN (C61)</li> <li>CAN (HMX)</li> <li>CAN (MX-4)</li> <li>CAN (MX-V)</li> </ul>"},{"location":"tags/#ct","title":"CT","text":"<ul> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>Digital I/O</li> <li>J1708</li> <li>LEDs</li> <li>Serial communication</li> <li>Start signals</li> <li>Tachometer</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>CAN (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>LEDs (MX-4)</li> <li>MX4 Modem</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>Serial communication (CT)</li> <li>MX-4 Start signals</li> <li>WiFi (MX-4)</li> <li>Platform CT GL</li> <li>Software development</li> <li>Legacy build system</li> <li>System update</li> <li>System update (CT)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#ct-gl","title":"CT GL","text":"<ul> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>Digital I/O</li> <li>J1708</li> <li>LEDs</li> <li>Serial communication</li> <li>Start signals</li> <li>Tachometer</li> <li>CT GL Modem</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>CAN (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>LEDs (MX-4)</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>Serial communication (CT)</li> <li>MX-4 Start signals</li> <li>WiFi (MX-4)</li> <li>Platform CT GL</li> <li>Software development</li> <li>Legacy build system</li> <li>System update</li> <li>System update (CT)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#contribute","title":"Contribute","text":"<ul> <li>Editing details and tools</li> <li>Writing Host Mobility product documentation</li> </ul>"},{"location":"tags/#development","title":"Development","text":"<ul> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>Software development kits (SDKs)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#digital-io","title":"Digital I/O","text":"<ul> <li>Digital I/O</li> <li>IOs (C61)</li> <li>Digital I/O (HMX)</li> <li>Digital I/O (MX-4)</li> <li>Digital I/O (MX-V)</li> </ul>"},{"location":"tags/#ethernet","title":"Ethernet","text":"<ul> <li>Ethernet</li> <li>Networking</li> <li>Ethernet (C61)</li> <li>Ethernet (HMX)</li> <li>Ethernet (MX-4)</li> <li>Ethernet (MX-V)</li> </ul>"},{"location":"tags/#flexray","title":"Flexray","text":"<ul> <li>Flexray (MX-4)</li> </ul>"},{"location":"tags/#hmx","title":"HMX","text":"<ul> <li>Accelerometer</li> <li>CAN</li> <li>Digital I/O</li> <li>Ethernet</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Start signals</li> <li>USB</li> <li>HMX Accelerometer</li> <li>CAN (HMX)</li> <li>Digital I/O (HMX)</li> <li>Ethernet (HMX)</li> <li>LEDs (HMX)</li> <li>HMX Modem</li> <li>Host Monitor X start signals</li> <li>USB (HMX)</li> <li>Modem</li> <li>Platform Host Monitor X</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Power management</li> <li>System update</li> <li>Power management (HMX)</li> <li>System update (HMX)</li> <li>Software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#j1708","title":"J1708","text":"<ul> <li>J1708</li> </ul>"},{"location":"tags/#led","title":"LED","text":"<ul> <li>LEDs</li> <li>LEDs (HMX)</li> <li>LEDs (MX-4)</li> <li>LEDs (MX-V)</li> </ul>"},{"location":"tags/#lin","title":"LIN","text":"<ul> <li>LIN (MX-4)</li> </ul>"},{"location":"tags/#legacy-sdk","title":"Legacy SDK","text":"<ul> <li>Legacy software development kits (SDKs)</li> </ul>"},{"location":"tags/#mx-4","title":"MX-4","text":"<ul> <li>Accelerometer</li> <li>CAN</li> <li>Digital I/O</li> <li>Ethernet</li> <li>LEDs</li> <li>Start signals</li> <li>USB</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>Ethernet (MX-4)</li> <li>LEDs (MX-4)</li> <li>LIN (MX-4)</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script</li> <li>MX-4 Start signals</li> <li>USB (MX-4)</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>Power management</li> <li>System update</li> <li>Power management (MX-4)</li> <li>Reset cause (MX-4)</li> <li>Wake up cause</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#mx-v","title":"MX-V","text":"<ul> <li>Accelerometer</li> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>CAN</li> <li>Digital I/O</li> <li>Ethernet</li> <li>J1708</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Serial communication</li> <li>Start signals</li> <li>Tachometer</li> <li>USB</li> <li>WiFi</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-V)</li> <li>CAN (MX-V)</li> <li>Digital I/O (MX-V)</li> <li>Ethernet (MX-V)</li> <li>LEDs (MX-V)</li> <li>MX-V Modem</li> <li>Serial communication (MX-V)</li> <li>Start signals</li> <li>USB (MX-V)</li> <li>WiFi (MX-V)</li> <li>Platform MX-V</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Power management</li> <li>System update</li> <li>Power management (MX-V)</li> <li>System update (MX-V)</li> <li>Software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#modem","title":"Modem","text":"<ul> <li>C61 Modem</li> <li>CT GL Modem</li> <li>HMX Modem</li> <li>Modem</li> <li>MX4 Modem</li> <li>MX-V Modem</li> </ul>"},{"location":"tags/#networking","title":"Networking","text":"<ul> <li>Networking</li> </ul>"},{"location":"tags/#power-management","title":"Power management","text":"<ul> <li>Power management</li> <li>Power management (HMX)</li> <li>Power management (MX-4)</li> <li>Wake up cause</li> <li>Power management (MX-V)</li> </ul>"},{"location":"tags/#rs-232","title":"RS-232","text":"<ul> <li>Serial communication</li> <li>Serial communication (C61)</li> <li>Serial communication (CT)</li> <li>Serial communication (MX-V)</li> </ul>"},{"location":"tags/#rs-485","title":"RS-485","text":"<ul> <li>Serial communication</li> <li>Serial communication (C61)</li> <li>Serial communication (CT)</li> <li>Serial communication (MX-V)</li> </ul>"},{"location":"tags/#real-time-clock","title":"Real Time Clock","text":"<ul> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> </ul>"},{"location":"tags/#reset-cause","title":"Reset cause","text":"<ul> <li>Reset cause (MX-4)</li> </ul>"},{"location":"tags/#sdk","title":"SDK","text":"<ul> <li>Software development kits (SDKs)</li> </ul>"},{"location":"tags/#start-signals","title":"Start signals","text":"<ul> <li>Start signals</li> <li>Host Monitor X start signals</li> <li>MX-4 Start signals</li> <li>Start signals</li> </ul>"},{"location":"tags/#system-update","title":"System update","text":"<ul> <li>System update</li> <li>System update (HMX)</li> <li>System update (C61)</li> <li>System update (CT)</li> <li>System update (T30)</li> <li>System update (MX-V)</li> </ul>"},{"location":"tags/#t20","title":"T20","text":"<ul> <li>Analog Inputs (ADC) (MX-4)</li> <li>LIN (MX-4)</li> </ul>"},{"location":"tags/#t30","title":"T30","text":"<ul> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>Digital I/O</li> <li>Ethernet</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Start signals</li> <li>Tachometer</li> <li>WiFi</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>CAN (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>LEDs (MX-4)</li> <li>LIN (MX-4)</li> <li>MX4 Modem</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script</li> <li>MX-4 Start signals</li> <li>WiFi (MX-4)</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>System update</li> <li>System update (T30)</li> <li>Software development kits (SDKs)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#t30-fr","title":"T30 FR","text":"<ul> <li>Analog inputs (ADC)</li> <li>Audio</li> <li>Digital I/O</li> <li>Ethernet</li> <li>LEDs</li> <li>Real Time Clock</li> <li>Wake on Real Time Clock (set alarm)</li> <li>Start signals</li> <li>Tachometer</li> <li>WiFi</li> <li>Modem</li> <li>Accelerometer (MX-4)</li> <li>Analog Inputs (ADC) (MX-4)</li> <li>CAN (MX-4)</li> <li>Digital I/O (MX-4)</li> <li>Flexray (MX-4)</li> <li>LEDs (MX-4)</li> <li>LIN (MX-4)</li> <li>MX4 Modem</li> <li>PIC attributes (coprocessor) (MX-4)</li> <li>MX-4 Wake on Real Time Clock (set alarm) using go-to-sleep script</li> <li>MX-4 Start signals</li> <li>WiFi (MX-4)</li> <li>Platform MX-4 T30 FR</li> <li>Software development</li> <li>Development using Eclipse</li> <li>Legacy build system</li> <li>System update</li> <li>Software development kits (SDKs)</li> <li>Legacy software development kits (SDKs)</li> <li>Yocto Build (Manually)</li> <li>Yocto Build (With Docker)</li> <li>Yocto Build System</li> </ul>"},{"location":"tags/#tachometer","title":"Tachometer","text":"<ul> <li>Tachometer</li> </ul>"},{"location":"tags/#usb","title":"USB","text":"<ul> <li>Networking</li> <li>USB</li> <li>USB (C61)</li> <li>USB (HMX)</li> <li>USB (MX-4)</li> <li>USB (MX-V)</li> </ul>"},{"location":"tags/#v61","title":"V61","text":"<ul> <li>LIN (MX-4)</li> </ul>"},{"location":"tags/#wake-up-cause","title":"Wake up cause","text":"<ul> <li>Wake up cause</li> </ul>"},{"location":"tags/#wifi","title":"WiFi","text":"<ul> <li>Networking</li> <li>WiFi</li> <li>WiFi (MX-4)</li> <li>WiFi (MX-V)</li> </ul>"}]}